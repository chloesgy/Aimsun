# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_AAPI')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_AAPI')
    _AAPI = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_AAPI', [dirname(__file__)])
        except ImportError:
            import _AAPI
            return _AAPI
        try:
            _mod = imp.load_module('_AAPI', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _AAPI = swig_import_helper()
    del swig_import_helper
else:
    import _AAPI
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class intp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intp, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _AAPI.new_intp()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_intp
    __del__ = lambda self: None

    def assign(self, value):
        return _AAPI.intp_assign(self, value)

    def value(self):
        return _AAPI.intp_value(self)

    def cast(self):
        return _AAPI.intp_cast(self)
    if _newclass:
        frompointer = staticmethod(_AAPI.intp_frompointer)
    else:
        frompointer = _AAPI.intp_frompointer
intp_swigregister = _AAPI.intp_swigregister
intp_swigregister(intp)

def intp_frompointer(t):
    return _AAPI.intp_frompointer(t)
intp_frompointer = _AAPI.intp_frompointer

class floatp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, floatp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, floatp, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _AAPI.new_floatp()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_floatp
    __del__ = lambda self: None

    def assign(self, value):
        return _AAPI.floatp_assign(self, value)

    def value(self):
        return _AAPI.floatp_value(self)

    def cast(self):
        return _AAPI.floatp_cast(self)
    if _newclass:
        frompointer = staticmethod(_AAPI.floatp_frompointer)
    else:
        frompointer = _AAPI.floatp_frompointer
floatp_swigregister = _AAPI.floatp_swigregister
floatp_swigregister(floatp)

def floatp_frompointer(t):
    return _AAPI.floatp_frompointer(t)
floatp_frompointer = _AAPI.floatp_frompointer

class doublep(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, doublep, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, doublep, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _AAPI.new_doublep()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_doublep
    __del__ = lambda self: None

    def assign(self, value):
        return _AAPI.doublep_assign(self, value)

    def value(self):
        return _AAPI.doublep_value(self)

    def cast(self):
        return _AAPI.doublep_cast(self)
    if _newclass:
        frompointer = staticmethod(_AAPI.doublep_frompointer)
    else:
        frompointer = _AAPI.doublep_frompointer
doublep_swigregister = _AAPI.doublep_swigregister
doublep_swigregister(doublep)

def doublep_frompointer(t):
    return _AAPI.doublep_frompointer(t)
doublep_frompointer = _AAPI.doublep_frompointer

class boolp(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, boolp, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, boolp, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _AAPI.new_boolp()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_boolp
    __del__ = lambda self: None

    def assign(self, value):
        return _AAPI.boolp_assign(self, value)

    def value(self):
        return _AAPI.boolp_value(self)

    def cast(self):
        return _AAPI.boolp_cast(self)
    if _newclass:
        frompointer = staticmethod(_AAPI.boolp_frompointer)
    else:
        frompointer = _AAPI.boolp_frompointer
boolp_swigregister = _AAPI.boolp_swigregister
boolp_swigregister(boolp)

def boolp_frompointer(t):
    return _AAPI.boolp_frompointer(t)
boolp_frompointer = _AAPI.boolp_frompointer

class intArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, intArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, intArray, name)
    __repr__ = _swig_repr

    def __init__(self, nelements):
        this = _AAPI.new_intArray(nelements)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_intArray
    __del__ = lambda self: None

    def __getitem__(self, index):
        return _AAPI.intArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _AAPI.intArray___setitem__(self, index, value)

    def cast(self):
        return _AAPI.intArray_cast(self)
    if _newclass:
        frompointer = staticmethod(_AAPI.intArray_frompointer)
    else:
        frompointer = _AAPI.intArray_frompointer
intArray_swigregister = _AAPI.intArray_swigregister
intArray_swigregister(intArray)

def intArray_frompointer(t):
    return _AAPI.intArray_frompointer(t)
intArray_frompointer = _AAPI.intArray_frompointer


def AKIGetNbScenarioActions():
    return _AAPI.AKIGetNbScenarioActions()
AKIGetNbScenarioActions = _AAPI.AKIGetNbScenarioActions

def AKIGetScenarioActions(actions):
    return _AAPI.AKIGetScenarioActions(actions)
AKIGetScenarioActions = _AAPI.AKIGetScenarioActions

def AKIIsActionActive(actionId):
    return _AAPI.AKIIsActionActive(actionId)
AKIIsActionActive = _AAPI.AKIIsActionActive

def AKIGetActionType(actionId):
    return _AAPI.AKIGetActionType(actionId)
AKIGetActionType = _AAPI.AKIGetActionType

def AKIActionAddSpeedAction(sectionId, newSpeed, vehTypePos, acomplianceLevel):
    return _AAPI.AKIActionAddSpeedAction(sectionId, newSpeed, vehTypePos, acomplianceLevel)
AKIActionAddSpeedAction = _AAPI.AKIActionAddSpeedAction

def AKIActionAddDetailedSpeedAction(ang_sectionId, laneId, ang_segmentId, newSpeed, vehTypePos, acomplianceLevel, considerSpeedAcceptance):
    return _AAPI.AKIActionAddDetailedSpeedAction(ang_sectionId, laneId, ang_segmentId, newSpeed, vehTypePos, acomplianceLevel, considerSpeedAcceptance)
AKIActionAddDetailedSpeedAction = _AAPI.AKIActionAddDetailedSpeedAction

def AKIActionCloseLaneAction(sectionId, alane, vehTypePos):
    return _AAPI.AKIActionCloseLaneAction(sectionId, alane, vehTypePos)
AKIActionCloseLaneAction = _AAPI.AKIActionCloseLaneAction

def AKIActionCloseLaneActionBySegment(sectionId, alane, ang_segmentFromId, ang_segmentToId, vehTypePos, apply2LanesCF, visibilityDistance):
    return _AAPI.AKIActionCloseLaneActionBySegment(sectionId, alane, ang_segmentFromId, ang_segmentToId, vehTypePos, apply2LanesCF, visibilityDistance)
AKIActionCloseLaneActionBySegment = _AAPI.AKIActionCloseLaneActionBySegment

def AKIActionCloseLaneDetailedAction(sectionId, alane, vehTypePos, apply2LanesCF, visibilityDistance):
    return _AAPI.AKIActionCloseLaneDetailedAction(sectionId, alane, vehTypePos, apply2LanesCF, visibilityDistance)
AKIActionCloseLaneDetailedAction = _AAPI.AKIActionCloseLaneDetailedAction

def AKIActionAddNextTurningODAction(sectionId, anextSection, aOrigin, aDest, vehTypePos, asectionInPath, acomplianceLevel, visibilityDistance):
    return _AAPI.AKIActionAddNextTurningODAction(sectionId, anextSection, aOrigin, aDest, vehTypePos, asectionInPath, acomplianceLevel, visibilityDistance)
AKIActionAddNextTurningODAction = _AAPI.AKIActionAddNextTurningODAction

def AKIActionAddNextTurningResultAction(sectionId, aoldNextSection, anewNextSection, vehTypePos, acomplianceLevel):
    return _AAPI.AKIActionAddNextTurningResultAction(sectionId, aoldNextSection, anewNextSection, vehTypePos, acomplianceLevel)
AKIActionAddNextTurningResultAction = _AAPI.AKIActionAddNextTurningResultAction

def AKIActionAddChangeDestAction(sectionId, anewDest, aOrigin, aDest, vehTypePos, acomplianceLevel):
    return _AAPI.AKIActionAddChangeDestAction(sectionId, anewDest, aOrigin, aDest, vehTypePos, acomplianceLevel)
AKIActionAddChangeDestAction = _AAPI.AKIActionAddChangeDestAction

def AKIActionChangeTurningProbAction(sectionId, nbnewProb, aNextSection, anewProb, vehTypePos):
    return _AAPI.AKIActionChangeTurningProbAction(sectionId, nbnewProb, aNextSection, anewProb, vehTypePos)
AKIActionChangeTurningProbAction = _AAPI.AKIActionChangeTurningProbAction

def AKIActionDisableReservedLaneAction(sectionId, alane, ang_segmentId):
    return _AAPI.AKIActionDisableReservedLaneAction(sectionId, alane, ang_segmentId)
AKIActionDisableReservedLaneAction = _AAPI.AKIActionDisableReservedLaneAction

def AKIActionCongestionPricingODAction(actionId, ang_sectionId, ang_HOTSection, aOrigin, aDest, vehTypePos, acomplianceLevel, avisibilityDistance, aType, isTolled, aGPSection, amethod, athreshold, logitScaleFactor, penalisationGPL, penalisationHOTL, costType, xshift, yshift, reexecute):
    return _AAPI.AKIActionCongestionPricingODAction(actionId, ang_sectionId, ang_HOTSection, aOrigin, aDest, vehTypePos, acomplianceLevel, avisibilityDistance, aType, isTolled, aGPSection, amethod, athreshold, logitScaleFactor, penalisationGPL, penalisationHOTL, costType, xshift, yshift, reexecute)
AKIActionCongestionPricingODAction = _AAPI.AKIActionCongestionPricingODAction

def AKIActionRemoveAction(a2kaction):
    return _AAPI.AKIActionRemoveAction(a2kaction)
AKIActionRemoveAction = _AAPI.AKIActionRemoveAction

def AKIActionReset():
    return _AAPI.AKIActionReset()
AKIActionReset = _AAPI.AKIActionReset

def AKIActionAddNextSubPathODAction(ang_sectionId, nbNextSections, anextSections, aOrigin, aDest, vehTypePos, asectionInPath, acomplianceLevel, visibilityDistance):
    return _AAPI.AKIActionAddNextSubPathODAction(ang_sectionId, nbNextSections, anextSections, aOrigin, aDest, vehTypePos, asectionInPath, acomplianceLevel, visibilityDistance)
AKIActionAddNextSubPathODAction = _AAPI.AKIActionAddNextSubPathODAction

def AKIActionAddNextSubPathODActionQTByID(actionId, ang_sectionId, anextSections, aOrigin, aDest, VehType, asectionInPath, acomplianceLevel, visibilityDistance):
    return _AAPI.AKIActionAddNextSubPathODActionQTByID(actionId, ang_sectionId, anextSections, aOrigin, aDest, VehType, asectionInPath, acomplianceLevel, visibilityDistance)
AKIActionAddNextSubPathODActionQTByID = _AAPI.AKIActionAddNextSubPathODActionQTByID

def AKIActionAddNextSubPathResultAction(ang_sectionId, nbNextSections, anextSections, vehTypePos, acomplianceLevel):
    return _AAPI.AKIActionAddNextSubPathResultAction(ang_sectionId, nbNextSections, anextSections, vehTypePos, acomplianceLevel)
AKIActionAddNextSubPathResultAction = _AAPI.AKIActionAddNextSubPathResultAction

def AKIActionAddNextSubPathPTAction(ang_sectionId, nbSections, aSections, idline, vehTypePos, acomplianceLevel, visibilityDistance):
    return _AAPI.AKIActionAddNextSubPathPTAction(ang_sectionId, nbSections, aSections, idline, vehTypePos, acomplianceLevel, visibilityDistance)
AKIActionAddNextSubPathPTAction = _AAPI.AKIActionAddNextSubPathPTAction

def AKIActionAddCloseTurningODAction(sectionId, anewSection2Close, aOrigin, aDest, vehTypePos, acomplianceLevel, visibilityDistance=200.0, localEffect=True, isDUE=False):
    return _AAPI.AKIActionAddCloseTurningODAction(sectionId, anewSection2Close, aOrigin, aDest, vehTypePos, acomplianceLevel, visibilityDistance, localEffect, isDUE)
AKIActionAddCloseTurningODAction = _AAPI.AKIActionAddCloseTurningODAction

def AKIActionModifyNextTurningODAction(a2kaction, acomplianceLevel):
    return _AAPI.AKIActionModifyNextTurningODAction(a2kaction, acomplianceLevel)
AKIActionModifyNextTurningODAction = _AAPI.AKIActionModifyNextTurningODAction

def AKIActionModifyNextTurningResultAction(a2kaction, acomplianceLevel):
    return _AAPI.AKIActionModifyNextTurningResultAction(a2kaction, acomplianceLevel)
AKIActionModifyNextTurningResultAction = _AAPI.AKIActionModifyNextTurningResultAction

def AKIActionModifyChangeDestAction(a2kaction, acomplianceLevel):
    return _AAPI.AKIActionModifyChangeDestAction(a2kaction, acomplianceLevel)
AKIActionModifyChangeDestAction = _AAPI.AKIActionModifyChangeDestAction

def AKIActionModifyNextSubPathResultAction(a2kaction, acomplianceLevel):
    return _AAPI.AKIActionModifyNextSubPathResultAction(a2kaction, acomplianceLevel)
AKIActionModifyNextSubPathResultAction = _AAPI.AKIActionModifyNextSubPathResultAction

def AKIActionModifyNextSubPathODAction(a2kaction, acomplianceLevel):
    return _AAPI.AKIActionModifyNextSubPathODAction(a2kaction, acomplianceLevel)
AKIActionModifyNextSubPathODAction = _AAPI.AKIActionModifyNextSubPathODAction

def AKIActionModifyCloseTurningODAction(a2kaction, acomplianceLevel):
    return _AAPI.AKIActionModifyCloseTurningODAction(a2kaction, acomplianceLevel)
AKIActionModifyCloseTurningODAction = _AAPI.AKIActionModifyCloseTurningODAction
class InfVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InfVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InfVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.InfVeh_report_set
    __swig_getmethods__["report"] = _AAPI.InfVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.InfVeh_report_get, _AAPI.InfVeh_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.InfVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.InfVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.InfVeh_idVeh_get, _AAPI.InfVeh_idVeh_set)
    __swig_setmethods__["type"] = _AAPI.InfVeh_type_set
    __swig_getmethods__["type"] = _AAPI.InfVeh_type_get
    if _newclass:
        type = _swig_property(_AAPI.InfVeh_type_get, _AAPI.InfVeh_type_set)
    __swig_setmethods__["idSection"] = _AAPI.InfVeh_idSection_set
    __swig_getmethods__["idSection"] = _AAPI.InfVeh_idSection_get
    if _newclass:
        idSection = _swig_property(_AAPI.InfVeh_idSection_get, _AAPI.InfVeh_idSection_set)
    __swig_setmethods__["segment"] = _AAPI.InfVeh_segment_set
    __swig_getmethods__["segment"] = _AAPI.InfVeh_segment_get
    if _newclass:
        segment = _swig_property(_AAPI.InfVeh_segment_get, _AAPI.InfVeh_segment_set)
    __swig_setmethods__["numberLane"] = _AAPI.InfVeh_numberLane_set
    __swig_getmethods__["numberLane"] = _AAPI.InfVeh_numberLane_get
    if _newclass:
        numberLane = _swig_property(_AAPI.InfVeh_numberLane_get, _AAPI.InfVeh_numberLane_set)
    __swig_setmethods__["idJunction"] = _AAPI.InfVeh_idJunction_set
    __swig_getmethods__["idJunction"] = _AAPI.InfVeh_idJunction_get
    if _newclass:
        idJunction = _swig_property(_AAPI.InfVeh_idJunction_get, _AAPI.InfVeh_idJunction_set)
    __swig_setmethods__["idSectionFrom"] = _AAPI.InfVeh_idSectionFrom_set
    __swig_getmethods__["idSectionFrom"] = _AAPI.InfVeh_idSectionFrom_get
    if _newclass:
        idSectionFrom = _swig_property(_AAPI.InfVeh_idSectionFrom_get, _AAPI.InfVeh_idSectionFrom_set)
    __swig_setmethods__["idLaneFrom"] = _AAPI.InfVeh_idLaneFrom_set
    __swig_getmethods__["idLaneFrom"] = _AAPI.InfVeh_idLaneFrom_get
    if _newclass:
        idLaneFrom = _swig_property(_AAPI.InfVeh_idLaneFrom_get, _AAPI.InfVeh_idLaneFrom_set)
    __swig_setmethods__["idSectionTo"] = _AAPI.InfVeh_idSectionTo_set
    __swig_getmethods__["idSectionTo"] = _AAPI.InfVeh_idSectionTo_get
    if _newclass:
        idSectionTo = _swig_property(_AAPI.InfVeh_idSectionTo_get, _AAPI.InfVeh_idSectionTo_set)
    __swig_setmethods__["idLaneTo"] = _AAPI.InfVeh_idLaneTo_set
    __swig_getmethods__["idLaneTo"] = _AAPI.InfVeh_idLaneTo_get
    if _newclass:
        idLaneTo = _swig_property(_AAPI.InfVeh_idLaneTo_get, _AAPI.InfVeh_idLaneTo_set)
    __swig_setmethods__["CurrentPos"] = _AAPI.InfVeh_CurrentPos_set
    __swig_getmethods__["CurrentPos"] = _AAPI.InfVeh_CurrentPos_get
    if _newclass:
        CurrentPos = _swig_property(_AAPI.InfVeh_CurrentPos_get, _AAPI.InfVeh_CurrentPos_set)
    __swig_setmethods__["distance2End"] = _AAPI.InfVeh_distance2End_set
    __swig_getmethods__["distance2End"] = _AAPI.InfVeh_distance2End_get
    if _newclass:
        distance2End = _swig_property(_AAPI.InfVeh_distance2End_get, _AAPI.InfVeh_distance2End_set)
    __swig_setmethods__["xCurrentPos"] = _AAPI.InfVeh_xCurrentPos_set
    __swig_getmethods__["xCurrentPos"] = _AAPI.InfVeh_xCurrentPos_get
    if _newclass:
        xCurrentPos = _swig_property(_AAPI.InfVeh_xCurrentPos_get, _AAPI.InfVeh_xCurrentPos_set)
    __swig_setmethods__["yCurrentPos"] = _AAPI.InfVeh_yCurrentPos_set
    __swig_getmethods__["yCurrentPos"] = _AAPI.InfVeh_yCurrentPos_get
    if _newclass:
        yCurrentPos = _swig_property(_AAPI.InfVeh_yCurrentPos_get, _AAPI.InfVeh_yCurrentPos_set)
    __swig_setmethods__["zCurrentPos"] = _AAPI.InfVeh_zCurrentPos_set
    __swig_getmethods__["zCurrentPos"] = _AAPI.InfVeh_zCurrentPos_get
    if _newclass:
        zCurrentPos = _swig_property(_AAPI.InfVeh_zCurrentPos_get, _AAPI.InfVeh_zCurrentPos_set)
    __swig_setmethods__["xCurrentPosBack"] = _AAPI.InfVeh_xCurrentPosBack_set
    __swig_getmethods__["xCurrentPosBack"] = _AAPI.InfVeh_xCurrentPosBack_get
    if _newclass:
        xCurrentPosBack = _swig_property(_AAPI.InfVeh_xCurrentPosBack_get, _AAPI.InfVeh_xCurrentPosBack_set)
    __swig_setmethods__["yCurrentPosBack"] = _AAPI.InfVeh_yCurrentPosBack_set
    __swig_getmethods__["yCurrentPosBack"] = _AAPI.InfVeh_yCurrentPosBack_get
    if _newclass:
        yCurrentPosBack = _swig_property(_AAPI.InfVeh_yCurrentPosBack_get, _AAPI.InfVeh_yCurrentPosBack_set)
    __swig_setmethods__["zCurrentPosBack"] = _AAPI.InfVeh_zCurrentPosBack_set
    __swig_getmethods__["zCurrentPosBack"] = _AAPI.InfVeh_zCurrentPosBack_get
    if _newclass:
        zCurrentPosBack = _swig_property(_AAPI.InfVeh_zCurrentPosBack_get, _AAPI.InfVeh_zCurrentPosBack_set)
    __swig_setmethods__["CurrentSpeed"] = _AAPI.InfVeh_CurrentSpeed_set
    __swig_getmethods__["CurrentSpeed"] = _AAPI.InfVeh_CurrentSpeed_get
    if _newclass:
        CurrentSpeed = _swig_property(_AAPI.InfVeh_CurrentSpeed_get, _AAPI.InfVeh_CurrentSpeed_set)
    __swig_setmethods__["PreviousSpeed"] = _AAPI.InfVeh_PreviousSpeed_set
    __swig_getmethods__["PreviousSpeed"] = _AAPI.InfVeh_PreviousSpeed_get
    if _newclass:
        PreviousSpeed = _swig_property(_AAPI.InfVeh_PreviousSpeed_get, _AAPI.InfVeh_PreviousSpeed_set)
    __swig_setmethods__["TotalDistance"] = _AAPI.InfVeh_TotalDistance_set
    __swig_getmethods__["TotalDistance"] = _AAPI.InfVeh_TotalDistance_get
    if _newclass:
        TotalDistance = _swig_property(_AAPI.InfVeh_TotalDistance_get, _AAPI.InfVeh_TotalDistance_set)
    __swig_setmethods__["SystemGenerationT"] = _AAPI.InfVeh_SystemGenerationT_set
    __swig_getmethods__["SystemGenerationT"] = _AAPI.InfVeh_SystemGenerationT_get
    if _newclass:
        SystemGenerationT = _swig_property(_AAPI.InfVeh_SystemGenerationT_get, _AAPI.InfVeh_SystemGenerationT_set)
    __swig_setmethods__["SystemEntranceT"] = _AAPI.InfVeh_SystemEntranceT_set
    __swig_getmethods__["SystemEntranceT"] = _AAPI.InfVeh_SystemEntranceT_get
    if _newclass:
        SystemEntranceT = _swig_property(_AAPI.InfVeh_SystemEntranceT_get, _AAPI.InfVeh_SystemEntranceT_set)
    __swig_setmethods__["SectionEntranceT"] = _AAPI.InfVeh_SectionEntranceT_set
    __swig_getmethods__["SectionEntranceT"] = _AAPI.InfVeh_SectionEntranceT_get
    if _newclass:
        SectionEntranceT = _swig_property(_AAPI.InfVeh_SectionEntranceT_get, _AAPI.InfVeh_SectionEntranceT_set)
    __swig_setmethods__["CurrentStopTime"] = _AAPI.InfVeh_CurrentStopTime_set
    __swig_getmethods__["CurrentStopTime"] = _AAPI.InfVeh_CurrentStopTime_get
    if _newclass:
        CurrentStopTime = _swig_property(_AAPI.InfVeh_CurrentStopTime_get, _AAPI.InfVeh_CurrentStopTime_set)
    __swig_setmethods__["stopped"] = _AAPI.InfVeh_stopped_set
    __swig_getmethods__["stopped"] = _AAPI.InfVeh_stopped_get
    if _newclass:
        stopped = _swig_property(_AAPI.InfVeh_stopped_get, _AAPI.InfVeh_stopped_set)

    def __init__(self):
        this = _AAPI.new_InfVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_InfVeh
    __del__ = lambda self: None
InfVeh_swigregister = _AAPI.InfVeh_swigregister
InfVeh_swigregister(InfVeh)

class StaticInfVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StaticInfVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StaticInfVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StaticInfVeh_report_set
    __swig_getmethods__["report"] = _AAPI.StaticInfVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.StaticInfVeh_report_get, _AAPI.StaticInfVeh_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.StaticInfVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.StaticInfVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.StaticInfVeh_idVeh_get, _AAPI.StaticInfVeh_idVeh_set)
    __swig_setmethods__["type"] = _AAPI.StaticInfVeh_type_set
    __swig_getmethods__["type"] = _AAPI.StaticInfVeh_type_get
    if _newclass:
        type = _swig_property(_AAPI.StaticInfVeh_type_get, _AAPI.StaticInfVeh_type_set)
    __swig_setmethods__["length"] = _AAPI.StaticInfVeh_length_set
    __swig_getmethods__["length"] = _AAPI.StaticInfVeh_length_get
    if _newclass:
        length = _swig_property(_AAPI.StaticInfVeh_length_get, _AAPI.StaticInfVeh_length_set)
    __swig_setmethods__["width"] = _AAPI.StaticInfVeh_width_set
    __swig_getmethods__["width"] = _AAPI.StaticInfVeh_width_get
    if _newclass:
        width = _swig_property(_AAPI.StaticInfVeh_width_get, _AAPI.StaticInfVeh_width_set)
    __swig_setmethods__["maxDesiredSpeed"] = _AAPI.StaticInfVeh_maxDesiredSpeed_set
    __swig_getmethods__["maxDesiredSpeed"] = _AAPI.StaticInfVeh_maxDesiredSpeed_get
    if _newclass:
        maxDesiredSpeed = _swig_property(_AAPI.StaticInfVeh_maxDesiredSpeed_get, _AAPI.StaticInfVeh_maxDesiredSpeed_set)
    __swig_setmethods__["maxAcceleration"] = _AAPI.StaticInfVeh_maxAcceleration_set
    __swig_getmethods__["maxAcceleration"] = _AAPI.StaticInfVeh_maxAcceleration_get
    if _newclass:
        maxAcceleration = _swig_property(_AAPI.StaticInfVeh_maxAcceleration_get, _AAPI.StaticInfVeh_maxAcceleration_set)
    __swig_setmethods__["normalDeceleration"] = _AAPI.StaticInfVeh_normalDeceleration_set
    __swig_getmethods__["normalDeceleration"] = _AAPI.StaticInfVeh_normalDeceleration_get
    if _newclass:
        normalDeceleration = _swig_property(_AAPI.StaticInfVeh_normalDeceleration_get, _AAPI.StaticInfVeh_normalDeceleration_set)
    __swig_setmethods__["maxDeceleration"] = _AAPI.StaticInfVeh_maxDeceleration_set
    __swig_getmethods__["maxDeceleration"] = _AAPI.StaticInfVeh_maxDeceleration_get
    if _newclass:
        maxDeceleration = _swig_property(_AAPI.StaticInfVeh_maxDeceleration_get, _AAPI.StaticInfVeh_maxDeceleration_set)
    __swig_setmethods__["speedAcceptance"] = _AAPI.StaticInfVeh_speedAcceptance_set
    __swig_getmethods__["speedAcceptance"] = _AAPI.StaticInfVeh_speedAcceptance_get
    if _newclass:
        speedAcceptance = _swig_property(_AAPI.StaticInfVeh_speedAcceptance_get, _AAPI.StaticInfVeh_speedAcceptance_set)
    __swig_setmethods__["minDistanceVeh"] = _AAPI.StaticInfVeh_minDistanceVeh_set
    __swig_getmethods__["minDistanceVeh"] = _AAPI.StaticInfVeh_minDistanceVeh_get
    if _newclass:
        minDistanceVeh = _swig_property(_AAPI.StaticInfVeh_minDistanceVeh_get, _AAPI.StaticInfVeh_minDistanceVeh_set)
    __swig_setmethods__["minSafetyDistance"] = _AAPI.StaticInfVeh_minSafetyDistance_set
    __swig_getmethods__["minSafetyDistance"] = _AAPI.StaticInfVeh_minSafetyDistance_get
    if _newclass:
        minSafetyDistance = _swig_property(_AAPI.StaticInfVeh_minSafetyDistance_get, _AAPI.StaticInfVeh_minSafetyDistance_set)
    __swig_setmethods__["giveWayTime"] = _AAPI.StaticInfVeh_giveWayTime_set
    __swig_getmethods__["giveWayTime"] = _AAPI.StaticInfVeh_giveWayTime_get
    if _newclass:
        giveWayTime = _swig_property(_AAPI.StaticInfVeh_giveWayTime_get, _AAPI.StaticInfVeh_giveWayTime_set)
    __swig_setmethods__["guidanceAcceptance"] = _AAPI.StaticInfVeh_guidanceAcceptance_set
    __swig_getmethods__["guidanceAcceptance"] = _AAPI.StaticInfVeh_guidanceAcceptance_get
    if _newclass:
        guidanceAcceptance = _swig_property(_AAPI.StaticInfVeh_guidanceAcceptance_get, _AAPI.StaticInfVeh_guidanceAcceptance_set)
    __swig_setmethods__["enrouted"] = _AAPI.StaticInfVeh_enrouted_set
    __swig_getmethods__["enrouted"] = _AAPI.StaticInfVeh_enrouted_get
    if _newclass:
        enrouted = _swig_property(_AAPI.StaticInfVeh_enrouted_get, _AAPI.StaticInfVeh_enrouted_set)
    __swig_setmethods__["equipped"] = _AAPI.StaticInfVeh_equipped_set
    __swig_getmethods__["equipped"] = _AAPI.StaticInfVeh_equipped_get
    if _newclass:
        equipped = _swig_property(_AAPI.StaticInfVeh_equipped_get, _AAPI.StaticInfVeh_equipped_set)
    __swig_setmethods__["tracked"] = _AAPI.StaticInfVeh_tracked_set
    __swig_getmethods__["tracked"] = _AAPI.StaticInfVeh_tracked_get
    if _newclass:
        tracked = _swig_property(_AAPI.StaticInfVeh_tracked_get, _AAPI.StaticInfVeh_tracked_set)
    __swig_setmethods__["keepfastLane"] = _AAPI.StaticInfVeh_keepfastLane_set
    __swig_getmethods__["keepfastLane"] = _AAPI.StaticInfVeh_keepfastLane_get
    if _newclass:
        keepfastLane = _swig_property(_AAPI.StaticInfVeh_keepfastLane_get, _AAPI.StaticInfVeh_keepfastLane_set)
    __swig_setmethods__["headwayMin"] = _AAPI.StaticInfVeh_headwayMin_set
    __swig_getmethods__["headwayMin"] = _AAPI.StaticInfVeh_headwayMin_get
    if _newclass:
        headwayMin = _swig_property(_AAPI.StaticInfVeh_headwayMin_get, _AAPI.StaticInfVeh_headwayMin_set)
    __swig_setmethods__["sensitivityFactor"] = _AAPI.StaticInfVeh_sensitivityFactor_set
    __swig_getmethods__["sensitivityFactor"] = _AAPI.StaticInfVeh_sensitivityFactor_get
    if _newclass:
        sensitivityFactor = _swig_property(_AAPI.StaticInfVeh_sensitivityFactor_get, _AAPI.StaticInfVeh_sensitivityFactor_set)
    __swig_setmethods__["reactionTime"] = _AAPI.StaticInfVeh_reactionTime_set
    __swig_getmethods__["reactionTime"] = _AAPI.StaticInfVeh_reactionTime_get
    if _newclass:
        reactionTime = _swig_property(_AAPI.StaticInfVeh_reactionTime_get, _AAPI.StaticInfVeh_reactionTime_set)
    __swig_setmethods__["reactionTimeAtStop"] = _AAPI.StaticInfVeh_reactionTimeAtStop_set
    __swig_getmethods__["reactionTimeAtStop"] = _AAPI.StaticInfVeh_reactionTimeAtStop_get
    if _newclass:
        reactionTimeAtStop = _swig_property(_AAPI.StaticInfVeh_reactionTimeAtStop_get, _AAPI.StaticInfVeh_reactionTimeAtStop_set)
    __swig_setmethods__["reactionTimeAtTrafficLight"] = _AAPI.StaticInfVeh_reactionTimeAtTrafficLight_set
    __swig_getmethods__["reactionTimeAtTrafficLight"] = _AAPI.StaticInfVeh_reactionTimeAtTrafficLight_get
    if _newclass:
        reactionTimeAtTrafficLight = _swig_property(_AAPI.StaticInfVeh_reactionTimeAtTrafficLight_get, _AAPI.StaticInfVeh_reactionTimeAtTrafficLight_set)
    __swig_setmethods__["centroidOrigin"] = _AAPI.StaticInfVeh_centroidOrigin_set
    __swig_getmethods__["centroidOrigin"] = _AAPI.StaticInfVeh_centroidOrigin_get
    if _newclass:
        centroidOrigin = _swig_property(_AAPI.StaticInfVeh_centroidOrigin_get, _AAPI.StaticInfVeh_centroidOrigin_set)
    __swig_setmethods__["centroidDest"] = _AAPI.StaticInfVeh_centroidDest_set
    __swig_getmethods__["centroidDest"] = _AAPI.StaticInfVeh_centroidDest_get
    if _newclass:
        centroidDest = _swig_property(_AAPI.StaticInfVeh_centroidDest_get, _AAPI.StaticInfVeh_centroidDest_set)
    __swig_setmethods__["idsectionExit"] = _AAPI.StaticInfVeh_idsectionExit_set
    __swig_getmethods__["idsectionExit"] = _AAPI.StaticInfVeh_idsectionExit_get
    if _newclass:
        idsectionExit = _swig_property(_AAPI.StaticInfVeh_idsectionExit_get, _AAPI.StaticInfVeh_idsectionExit_set)
    __swig_setmethods__["idLine"] = _AAPI.StaticInfVeh_idLine_set
    __swig_getmethods__["idLine"] = _AAPI.StaticInfVeh_idLine_get
    if _newclass:
        idLine = _swig_property(_AAPI.StaticInfVeh_idLine_get, _AAPI.StaticInfVeh_idLine_set)
    __swig_setmethods__["internalInfo"] = _AAPI.StaticInfVeh_internalInfo_set
    __swig_getmethods__["internalInfo"] = _AAPI.StaticInfVeh_internalInfo_get
    if _newclass:
        internalInfo = _swig_property(_AAPI.StaticInfVeh_internalInfo_get, _AAPI.StaticInfVeh_internalInfo_set)
    __swig_setmethods__["margin2Overtake"] = _AAPI.StaticInfVeh_margin2Overtake_set
    __swig_getmethods__["margin2Overtake"] = _AAPI.StaticInfVeh_margin2Overtake_get
    if _newclass:
        margin2Overtake = _swig_property(_AAPI.StaticInfVeh_margin2Overtake_get, _AAPI.StaticInfVeh_margin2Overtake_set)
    __swig_setmethods__["TM"] = _AAPI.StaticInfVeh_TM_set
    __swig_getmethods__["TM"] = _AAPI.StaticInfVeh_TM_get
    if _newclass:
        TM = _swig_property(_AAPI.StaticInfVeh_TM_get, _AAPI.StaticInfVeh_TM_set)
    __swig_setmethods__["TA"] = _AAPI.StaticInfVeh_TA_set
    __swig_getmethods__["TA"] = _AAPI.StaticInfVeh_TA_get
    if _newclass:
        TA = _swig_property(_AAPI.StaticInfVeh_TA_get, _AAPI.StaticInfVeh_TA_set)
    __swig_setmethods__["TC"] = _AAPI.StaticInfVeh_TC_set
    __swig_getmethods__["TC"] = _AAPI.StaticInfVeh_TC_get
    if _newclass:
        TC = _swig_property(_AAPI.StaticInfVeh_TC_get, _AAPI.StaticInfVeh_TC_set)
    __swig_setmethods__["TS"] = _AAPI.StaticInfVeh_TS_set
    __swig_getmethods__["TS"] = _AAPI.StaticInfVeh_TS_get
    if _newclass:
        TS = _swig_property(_AAPI.StaticInfVeh_TS_get, _AAPI.StaticInfVeh_TS_set)
    __swig_setmethods__["VelMaxOvertaking"] = _AAPI.StaticInfVeh_VelMaxOvertaking_set
    __swig_getmethods__["VelMaxOvertaking"] = _AAPI.StaticInfVeh_VelMaxOvertaking_get
    if _newclass:
        VelMaxOvertaking = _swig_property(_AAPI.StaticInfVeh_VelMaxOvertaking_get, _AAPI.StaticInfVeh_VelMaxOvertaking_set)
    __swig_setmethods__["AStateFactor"] = _AAPI.StaticInfVeh_AStateFactor_set
    __swig_getmethods__["AStateFactor"] = _AAPI.StaticInfVeh_AStateFactor_get
    if _newclass:
        AStateFactor = _swig_property(_AAPI.StaticInfVeh_AStateFactor_get, _AAPI.StaticInfVeh_AStateFactor_set)
    __swig_setmethods__["BStateFactor"] = _AAPI.StaticInfVeh_BStateFactor_set
    __swig_getmethods__["BStateFactor"] = _AAPI.StaticInfVeh_BStateFactor_get
    if _newclass:
        BStateFactor = _swig_property(_AAPI.StaticInfVeh_BStateFactor_get, _AAPI.StaticInfVeh_BStateFactor_set)

    def __init__(self):
        this = _AAPI.new_StaticInfVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StaticInfVeh
    __del__ = lambda self: None
StaticInfVeh_swigregister = _AAPI.StaticInfVeh_swigregister
StaticInfVeh_swigregister(StaticInfVeh)

class VehPos(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VehPos, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VehPos, name)
    __repr__ = _swig_repr
    __swig_setmethods__["xPos"] = _AAPI.VehPos_xPos_set
    __swig_getmethods__["xPos"] = _AAPI.VehPos_xPos_get
    if _newclass:
        xPos = _swig_property(_AAPI.VehPos_xPos_get, _AAPI.VehPos_xPos_set)
    __swig_setmethods__["yPos"] = _AAPI.VehPos_yPos_set
    __swig_getmethods__["yPos"] = _AAPI.VehPos_yPos_get
    if _newclass:
        yPos = _swig_property(_AAPI.VehPos_yPos_get, _AAPI.VehPos_yPos_set)
    __swig_setmethods__["zPos"] = _AAPI.VehPos_zPos_set
    __swig_getmethods__["zPos"] = _AAPI.VehPos_zPos_get
    if _newclass:
        zPos = _swig_property(_AAPI.VehPos_zPos_get, _AAPI.VehPos_zPos_set)
    __swig_setmethods__["xPosBack"] = _AAPI.VehPos_xPosBack_set
    __swig_getmethods__["xPosBack"] = _AAPI.VehPos_xPosBack_get
    if _newclass:
        xPosBack = _swig_property(_AAPI.VehPos_xPosBack_get, _AAPI.VehPos_xPosBack_set)
    __swig_setmethods__["yPosBack"] = _AAPI.VehPos_yPosBack_set
    __swig_getmethods__["yPosBack"] = _AAPI.VehPos_yPosBack_get
    if _newclass:
        yPosBack = _swig_property(_AAPI.VehPos_yPosBack_get, _AAPI.VehPos_yPosBack_set)
    __swig_setmethods__["zPosBack"] = _AAPI.VehPos_zPosBack_set
    __swig_getmethods__["zPosBack"] = _AAPI.VehPos_zPosBack_get
    if _newclass:
        zPosBack = _swig_property(_AAPI.VehPos_zPosBack_get, _AAPI.VehPos_zPosBack_set)

    def __init__(self):
        this = _AAPI.new_VehPos()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_VehPos
    __del__ = lambda self: None
VehPos_swigregister = _AAPI.VehPos_swigregister
VehPos_swigregister(VehPos)

class InfVehPos(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InfVehPos, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InfVehPos, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.InfVehPos_report_set
    __swig_getmethods__["report"] = _AAPI.InfVehPos_report_get
    if _newclass:
        report = _swig_property(_AAPI.InfVehPos_report_get, _AAPI.InfVehPos_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.InfVehPos_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.InfVehPos_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.InfVehPos_idVeh_get, _AAPI.InfVehPos_idVeh_set)
    __swig_setmethods__["Npos"] = _AAPI.InfVehPos_Npos_set
    __swig_getmethods__["Npos"] = _AAPI.InfVehPos_Npos_get
    if _newclass:
        Npos = _swig_property(_AAPI.InfVehPos_Npos_get, _AAPI.InfVehPos_Npos_set)
    __swig_setmethods__["vehiclePos"] = _AAPI.InfVehPos_vehiclePos_set
    __swig_getmethods__["vehiclePos"] = _AAPI.InfVehPos_vehiclePos_get
    if _newclass:
        vehiclePos = _swig_property(_AAPI.InfVehPos_vehiclePos_get, _AAPI.InfVehPos_vehiclePos_set)

    def __init__(self):
        this = _AAPI.new_InfVehPos()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_InfVehPos
    __del__ = lambda self: None
InfVehPos_swigregister = _AAPI.InfVehPos_swigregister
InfVehPos_swigregister(InfVehPos)

class DynInfVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DynInfVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DynInfVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["xCurrentPos"] = _AAPI.DynInfVeh_xCurrentPos_set
    __swig_getmethods__["xCurrentPos"] = _AAPI.DynInfVeh_xCurrentPos_get
    if _newclass:
        xCurrentPos = _swig_property(_AAPI.DynInfVeh_xCurrentPos_get, _AAPI.DynInfVeh_xCurrentPos_set)
    __swig_setmethods__["yCurrentPos"] = _AAPI.DynInfVeh_yCurrentPos_set
    __swig_getmethods__["yCurrentPos"] = _AAPI.DynInfVeh_yCurrentPos_get
    if _newclass:
        yCurrentPos = _swig_property(_AAPI.DynInfVeh_yCurrentPos_get, _AAPI.DynInfVeh_yCurrentPos_set)
    __swig_setmethods__["xCurrentPosBack"] = _AAPI.DynInfVeh_xCurrentPosBack_set
    __swig_getmethods__["xCurrentPosBack"] = _AAPI.DynInfVeh_xCurrentPosBack_get
    if _newclass:
        xCurrentPosBack = _swig_property(_AAPI.DynInfVeh_xCurrentPosBack_get, _AAPI.DynInfVeh_xCurrentPosBack_set)
    __swig_setmethods__["yCurrentPosBack"] = _AAPI.DynInfVeh_yCurrentPosBack_set
    __swig_getmethods__["yCurrentPosBack"] = _AAPI.DynInfVeh_yCurrentPosBack_get
    if _newclass:
        yCurrentPosBack = _swig_property(_AAPI.DynInfVeh_yCurrentPosBack_get, _AAPI.DynInfVeh_yCurrentPosBack_set)
    __swig_setmethods__["currentSpeed"] = _AAPI.DynInfVeh_currentSpeed_set
    __swig_getmethods__["currentSpeed"] = _AAPI.DynInfVeh_currentSpeed_get
    if _newclass:
        currentSpeed = _swig_property(_AAPI.DynInfVeh_currentSpeed_get, _AAPI.DynInfVeh_currentSpeed_set)
    __swig_setmethods__["turning"] = _AAPI.DynInfVeh_turning_set
    __swig_getmethods__["turning"] = _AAPI.DynInfVeh_turning_get
    if _newclass:
        turning = _swig_property(_AAPI.DynInfVeh_turning_get, _AAPI.DynInfVeh_turning_set)

    def __init__(self):
        this = _AAPI.new_DynInfVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_DynInfVeh
    __del__ = lambda self: None
DynInfVeh_swigregister = _AAPI.DynInfVeh_swigregister
DynInfVeh_swigregister(DynInfVeh)

class GraphicInfVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GraphicInfVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GraphicInfVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.GraphicInfVeh_report_set
    __swig_getmethods__["report"] = _AAPI.GraphicInfVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.GraphicInfVeh_report_get, _AAPI.GraphicInfVeh_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.GraphicInfVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.GraphicInfVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.GraphicInfVeh_idVeh_get, _AAPI.GraphicInfVeh_idVeh_set)
    __swig_setmethods__["leftTurnSignal"] = _AAPI.GraphicInfVeh_leftTurnSignal_set
    __swig_getmethods__["leftTurnSignal"] = _AAPI.GraphicInfVeh_leftTurnSignal_get
    if _newclass:
        leftTurnSignal = _swig_property(_AAPI.GraphicInfVeh_leftTurnSignal_get, _AAPI.GraphicInfVeh_leftTurnSignal_set)
    __swig_setmethods__["rightTurnSignal"] = _AAPI.GraphicInfVeh_rightTurnSignal_set
    __swig_getmethods__["rightTurnSignal"] = _AAPI.GraphicInfVeh_rightTurnSignal_get
    if _newclass:
        rightTurnSignal = _swig_property(_AAPI.GraphicInfVeh_rightTurnSignal_get, _AAPI.GraphicInfVeh_rightTurnSignal_set)
    __swig_setmethods__["brakeLight"] = _AAPI.GraphicInfVeh_brakeLight_set
    __swig_getmethods__["brakeLight"] = _AAPI.GraphicInfVeh_brakeLight_get
    if _newclass:
        brakeLight = _swig_property(_AAPI.GraphicInfVeh_brakeLight_get, _AAPI.GraphicInfVeh_brakeLight_set)
    __swig_setmethods__["drivingBackwards"] = _AAPI.GraphicInfVeh_drivingBackwards_set
    __swig_getmethods__["drivingBackwards"] = _AAPI.GraphicInfVeh_drivingBackwards_get
    if _newclass:
        drivingBackwards = _swig_property(_AAPI.GraphicInfVeh_drivingBackwards_get, _AAPI.GraphicInfVeh_drivingBackwards_set)

    def __init__(self):
        this = _AAPI.new_GraphicInfVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_GraphicInfVeh
    __del__ = lambda self: None
GraphicInfVeh_swigregister = _AAPI.GraphicInfVeh_swigregister
GraphicInfVeh_swigregister(GraphicInfVeh)


def AKIRemoveVehicle(aidSec, indexveh):
    return _AAPI.AKIRemoveVehicle(aidSec, indexveh)
AKIRemoveVehicle = _AAPI.AKIRemoveVehicle

def AKIVehEnableGraphicalInf(always=False):
    return _AAPI.AKIVehEnableGraphicalInf(always)
AKIVehEnableGraphicalInf = _AAPI.AKIVehEnableGraphicalInf

def AKIVehDisableGraphicalInf():
    return _AAPI.AKIVehDisableGraphicalInf()
AKIVehDisableGraphicalInf = _AAPI.AKIVehDisableGraphicalInf

def AKIVehStateGetNbVehiclesSection(aidSec, considerAllSegments):
    return _AAPI.AKIVehStateGetNbVehiclesSection(aidSec, considerAllSegments)
AKIVehStateGetNbVehiclesSection = _AAPI.AKIVehStateGetNbVehiclesSection

def AKIVehStateGetVehicleInfSection(aidSec, indexveh):
    return _AAPI.AKIVehStateGetVehicleInfSection(aidSec, indexveh)
AKIVehStateGetVehicleInfSection = _AAPI.AKIVehStateGetVehicleInfSection

def AKIVehGetVehicleStaticInfSection(aidSec, indexveh):
    return _AAPI.AKIVehGetVehicleStaticInfSection(aidSec, indexveh)
AKIVehGetVehicleStaticInfSection = _AAPI.AKIVehGetVehicleStaticInfSection

def AKIVehSetVehicleStaticInfSection(aidSec, indexveh, staticinfVeh):
    return _AAPI.AKIVehSetVehicleStaticInfSection(aidSec, indexveh, staticinfVeh)
AKIVehSetVehicleStaticInfSection = _AAPI.AKIVehSetVehicleStaticInfSection

def AKIVehGetVehicleGetPosSection(asect, indexveh, nbPos):
    return _AAPI.AKIVehGetVehicleGetPosSection(asect, indexveh, nbPos)
AKIVehGetVehicleGetPosSection = _AAPI.AKIVehGetVehicleGetPosSection

def AKIVehGetVehicleGetPosSectionWithStruct(asect, indexveh, nbPos, pinfVehPos):
    return _AAPI.AKIVehGetVehicleGetPosSectionWithStruct(asect, indexveh, nbPos, pinfVehPos)
AKIVehGetVehicleGetPosSectionWithStruct = _AAPI.AKIVehGetVehicleGetPosSectionWithStruct

def AKIVehGetVehicleGraphicInfSection(asect, indexveh):
    return _AAPI.AKIVehGetVehicleGraphicInfSection(asect, indexveh)
AKIVehGetVehicleGraphicInfSection = _AAPI.AKIVehGetVehicleGraphicInfSection

def AKIVehSetDrivingBackwards(aidSec, indexveh, value):
    return _AAPI.AKIVehSetDrivingBackwards(aidSec, indexveh, value)
AKIVehSetDrivingBackwards = _AAPI.AKIVehSetDrivingBackwards

def AKIVehStateGetNbVehiclesJunction(ajunction):
    return _AAPI.AKIVehStateGetNbVehiclesJunction(ajunction)
AKIVehStateGetNbVehiclesJunction = _AAPI.AKIVehStateGetNbVehiclesJunction

def AKIVehStateGetVehicleInfJunction(ajunction, indexveh):
    return _AAPI.AKIVehStateGetVehicleInfJunction(ajunction, indexveh)
AKIVehStateGetVehicleInfJunction = _AAPI.AKIVehStateGetVehicleInfJunction

def AKIVehGetVehicleStaticInfJunction(ajunction, indexveh):
    return _AAPI.AKIVehGetVehicleStaticInfJunction(ajunction, indexveh)
AKIVehGetVehicleStaticInfJunction = _AAPI.AKIVehGetVehicleStaticInfJunction

def AKIVehSetVehicleStaticInfJunction(ajunction, indexveh, staticinfVeh):
    return _AAPI.AKIVehSetVehicleStaticInfJunction(ajunction, indexveh, staticinfVeh)
AKIVehSetVehicleStaticInfJunction = _AAPI.AKIVehSetVehicleStaticInfJunction

def AKIVehGetVehicleGetPosJunction(ajunction, indexveh, nbPos):
    return _AAPI.AKIVehGetVehicleGetPosJunction(ajunction, indexveh, nbPos)
AKIVehGetVehicleGetPosJunction = _AAPI.AKIVehGetVehicleGetPosJunction

def AKIVehGetVehicleGetPosJunctionWithStruct(ajunction, indexveh, nbPos, pinfVehPos):
    return _AAPI.AKIVehGetVehicleGetPosJunctionWithStruct(ajunction, indexveh, nbPos, pinfVehPos)
AKIVehGetVehicleGetPosJunctionWithStruct = _AAPI.AKIVehGetVehicleGetPosJunctionWithStruct

def AKIVehGetVehicleGraphicInfJunction(ajunction, indexveh):
    return _AAPI.AKIVehGetVehicleGraphicInfJunction(ajunction, indexveh)
AKIVehGetVehicleGraphicInfJunction = _AAPI.AKIVehGetVehicleGraphicInfJunction

def AKIVehGetInf(aidVeh):
    return _AAPI.AKIVehGetInf(aidVeh)
AKIVehGetInf = _AAPI.AKIVehGetInf

def AKIVehGetStaticInf(aidVeh):
    return _AAPI.AKIVehGetStaticInf(aidVeh)
AKIVehGetStaticInf = _AAPI.AKIVehGetStaticInf

def AKIVehSetStaticInf(aidVeh, staticinfVeh):
    return _AAPI.AKIVehSetStaticInf(aidVeh, staticinfVeh)
AKIVehSetStaticInf = _AAPI.AKIVehSetStaticInf

def AKIVehGetNbVehTypes():
    return _AAPI.AKIVehGetNbVehTypes()
AKIVehGetNbVehTypes = _AAPI.AKIVehGetNbVehTypes

def AKIVehTypeGetIdVehTypeANG(vehTypePos):
    return _AAPI.AKIVehTypeGetIdVehTypeANG(vehTypePos)
AKIVehTypeGetIdVehTypeANG = _AAPI.AKIVehTypeGetIdVehTypeANG

def AKIVehGetMinLengthVehType(vehTypePos):
    return _AAPI.AKIVehGetMinLengthVehType(vehTypePos)
AKIVehGetMinLengthVehType = _AAPI.AKIVehGetMinLengthVehType

def AKIVehGetMaxLengthVehType(vehTypePos):
    return _AAPI.AKIVehGetMaxLengthVehType(vehTypePos)
AKIVehGetMaxLengthVehType = _AAPI.AKIVehGetMaxLengthVehType

def AKIVehGetVehTypeName(vehTypePos):
    return _AAPI.AKIVehGetVehTypeName(vehTypePos)
AKIVehGetVehTypeName = _AAPI.AKIVehGetVehTypeName

def AKIVehGetVehTypeInternalPosition(aimsunVehicleTypeId):
    return _AAPI.AKIVehGetVehTypeInternalPosition(aimsunVehicleTypeId)
AKIVehGetVehTypeInternalPosition = _AAPI.AKIVehGetVehTypeInternalPosition

def AKIVehTypeGetImprudentLaneChanging(idVehicleType):
    return _AAPI.AKIVehTypeGetImprudentLaneChanging(idVehicleType)
AKIVehTypeGetImprudentLaneChanging = _AAPI.AKIVehTypeGetImprudentLaneChanging

def AKIVehTypeSetImprudentLaneChanging(idVehicleType, value):
    return _AAPI.AKIVehTypeSetImprudentLaneChanging(idVehicleType, value)
AKIVehTypeSetImprudentLaneChanging = _AAPI.AKIVehTypeSetImprudentLaneChanging

def AKIVehTypeGetPercentageForStayingInFastLane(idVehicleType):
    return _AAPI.AKIVehTypeGetPercentageForStayingInFastLane(idVehicleType)
AKIVehTypeGetPercentageForStayingInFastLane = _AAPI.AKIVehTypeGetPercentageForStayingInFastLane

def AKIVehTypeSetPercentageForStayingInFastLane(idVehicleType, newPercentage):
    return _AAPI.AKIVehTypeSetPercentageForStayingInFastLane(idVehicleType, newPercentage)
AKIVehTypeSetPercentageForStayingInFastLane = _AAPI.AKIVehTypeSetPercentageForStayingInFastLane

def AKIVehTypeGetPercentageForUndertaking(idVehicleType):
    return _AAPI.AKIVehTypeGetPercentageForUndertaking(idVehicleType)
AKIVehTypeGetPercentageForUndertaking = _AAPI.AKIVehTypeGetPercentageForUndertaking

def AKIVehTypeSetPercentageForUndertaking(idVehicleType, newPercentage):
    return _AAPI.AKIVehTypeSetPercentageForUndertaking(idVehicleType, newPercentage)
AKIVehTypeSetPercentageForUndertaking = _AAPI.AKIVehTypeSetPercentageForUndertaking

def AKIVehStateGetNbSectionsVehiclePathJunction(aidJunction, indexveh, idsection):
    return _AAPI.AKIVehStateGetNbSectionsVehiclePathJunction(aidJunction, indexveh, idsection)
AKIVehStateGetNbSectionsVehiclePathJunction = _AAPI.AKIVehStateGetNbSectionsVehiclePathJunction

def AKIVehStateGetIdSectionVehiclePathJunction(aidJunction, indexveh, idsection, indexsection):
    return _AAPI.AKIVehStateGetIdSectionVehiclePathJunction(aidJunction, indexveh, idsection, indexsection)
AKIVehStateGetIdSectionVehiclePathJunction = _AAPI.AKIVehStateGetIdSectionVehiclePathJunction

def AKIVehStateGetNbSectionsVehiclePathSection(idSect, indexveh, idsection):
    return _AAPI.AKIVehStateGetNbSectionsVehiclePathSection(idSect, indexveh, idsection)
AKIVehStateGetNbSectionsVehiclePathSection = _AAPI.AKIVehStateGetNbSectionsVehiclePathSection

def AKIVehStateGetIdSectionVehiclePathSection(idSect, indexveh, idsection, indexsection):
    return _AAPI.AKIVehStateGetIdSectionVehiclePathSection(idSect, indexveh, idsection, indexsection)
AKIVehStateGetIdSectionVehiclePathSection = _AAPI.AKIVehStateGetIdSectionVehiclePathSection

def AKIVehTrackedGetNbSectionsVehiclePath(idveh):
    return _AAPI.AKIVehTrackedGetNbSectionsVehiclePath(idveh)
AKIVehTrackedGetNbSectionsVehiclePath = _AAPI.AKIVehTrackedGetNbSectionsVehiclePath

def AKIVehTrackedGetIdSectionVehiclePath(idveh, indexsection):
    return _AAPI.AKIVehTrackedGetIdSectionVehiclePath(idveh, indexsection)
AKIVehTrackedGetIdSectionVehiclePath = _AAPI.AKIVehTrackedGetIdSectionVehiclePath

def AKIRemoveVehicleJunction(idJunction, indexveh):
    return _AAPI.AKIRemoveVehicleJunction(idJunction, indexveh)
AKIRemoveVehicleJunction = _AAPI.AKIRemoveVehicleJunction

def AKIVehTrackedRemove(idveh):
    return _AAPI.AKIVehTrackedRemove(idveh)
AKIVehTrackedRemove = _AAPI.AKIVehTrackedRemove
class structA2KDetector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, structA2KDetector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, structA2KDetector, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.structA2KDetector_report_set
    __swig_getmethods__["report"] = _AAPI.structA2KDetector_report_get
    if _newclass:
        report = _swig_property(_AAPI.structA2KDetector_report_get, _AAPI.structA2KDetector_report_set)
    __swig_setmethods__["Id"] = _AAPI.structA2KDetector_Id_set
    __swig_getmethods__["Id"] = _AAPI.structA2KDetector_Id_get
    if _newclass:
        Id = _swig_property(_AAPI.structA2KDetector_Id_get, _AAPI.structA2KDetector_Id_set)
    __swig_setmethods__["IdSection"] = _AAPI.structA2KDetector_IdSection_set
    __swig_getmethods__["IdSection"] = _AAPI.structA2KDetector_IdSection_get
    if _newclass:
        IdSection = _swig_property(_AAPI.structA2KDetector_IdSection_get, _AAPI.structA2KDetector_IdSection_set)
    __swig_setmethods__["IdFirstLane"] = _AAPI.structA2KDetector_IdFirstLane_set
    __swig_getmethods__["IdFirstLane"] = _AAPI.structA2KDetector_IdFirstLane_get
    if _newclass:
        IdFirstLane = _swig_property(_AAPI.structA2KDetector_IdFirstLane_get, _AAPI.structA2KDetector_IdFirstLane_set)
    __swig_setmethods__["IdLastLane"] = _AAPI.structA2KDetector_IdLastLane_set
    __swig_getmethods__["IdLastLane"] = _AAPI.structA2KDetector_IdLastLane_get
    if _newclass:
        IdLastLane = _swig_property(_AAPI.structA2KDetector_IdLastLane_get, _AAPI.structA2KDetector_IdLastLane_set)
    __swig_setmethods__["Capabilities"] = _AAPI.structA2KDetector_Capabilities_set
    __swig_getmethods__["Capabilities"] = _AAPI.structA2KDetector_Capabilities_get
    if _newclass:
        Capabilities = _swig_property(_AAPI.structA2KDetector_Capabilities_get, _AAPI.structA2KDetector_Capabilities_set)
    __swig_setmethods__["InitialPosition"] = _AAPI.structA2KDetector_InitialPosition_set
    __swig_getmethods__["InitialPosition"] = _AAPI.structA2KDetector_InitialPosition_get
    if _newclass:
        InitialPosition = _swig_property(_AAPI.structA2KDetector_InitialPosition_get, _AAPI.structA2KDetector_InitialPosition_set)
    __swig_setmethods__["FinalPosition"] = _AAPI.structA2KDetector_FinalPosition_set
    __swig_getmethods__["FinalPosition"] = _AAPI.structA2KDetector_FinalPosition_get
    if _newclass:
        FinalPosition = _swig_property(_AAPI.structA2KDetector_FinalPosition_get, _AAPI.structA2KDetector_FinalPosition_set)

    def __init__(self):
        this = _AAPI.new_structA2KDetector()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_structA2KDetector
    __del__ = lambda self: None
structA2KDetector_swigregister = _AAPI.structA2KDetector_swigregister
structA2KDetector_swigregister(structA2KDetector)

class EquippedInfVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EquippedInfVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EquippedInfVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.EquippedInfVeh_report_set
    __swig_getmethods__["report"] = _AAPI.EquippedInfVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.EquippedInfVeh_report_get, _AAPI.EquippedInfVeh_report_set)
    __swig_setmethods__["timedetected"] = _AAPI.EquippedInfVeh_timedetected_set
    __swig_getmethods__["timedetected"] = _AAPI.EquippedInfVeh_timedetected_get
    if _newclass:
        timedetected = _swig_property(_AAPI.EquippedInfVeh_timedetected_get, _AAPI.EquippedInfVeh_timedetected_set)
    __swig_setmethods__["idVeh"] = _AAPI.EquippedInfVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.EquippedInfVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.EquippedInfVeh_idVeh_get, _AAPI.EquippedInfVeh_idVeh_set)
    __swig_setmethods__["vehType"] = _AAPI.EquippedInfVeh_vehType_set
    __swig_getmethods__["vehType"] = _AAPI.EquippedInfVeh_vehType_get
    if _newclass:
        vehType = _swig_property(_AAPI.EquippedInfVeh_vehType_get, _AAPI.EquippedInfVeh_vehType_set)
    __swig_setmethods__["speed"] = _AAPI.EquippedInfVeh_speed_set
    __swig_getmethods__["speed"] = _AAPI.EquippedInfVeh_speed_get
    if _newclass:
        speed = _swig_property(_AAPI.EquippedInfVeh_speed_get, _AAPI.EquippedInfVeh_speed_set)
    __swig_setmethods__["headway"] = _AAPI.EquippedInfVeh_headway_set
    __swig_getmethods__["headway"] = _AAPI.EquippedInfVeh_headway_get
    if _newclass:
        headway = _swig_property(_AAPI.EquippedInfVeh_headway_get, _AAPI.EquippedInfVeh_headway_set)
    __swig_setmethods__["idptline"] = _AAPI.EquippedInfVeh_idptline_set
    __swig_getmethods__["idptline"] = _AAPI.EquippedInfVeh_idptline_get
    if _newclass:
        idptline = _swig_property(_AAPI.EquippedInfVeh_idptline_get, _AAPI.EquippedInfVeh_idptline_set)

    def __init__(self):
        this = _AAPI.new_EquippedInfVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_EquippedInfVeh
    __del__ = lambda self: None
EquippedInfVeh_swigregister = _AAPI.EquippedInfVeh_swigregister
EquippedInfVeh_swigregister(EquippedInfVeh)


def AKIDetGetNumberDetectors():
    return _AAPI.AKIDetGetNumberDetectors()
AKIDetGetNumberDetectors = _AAPI.AKIDetGetNumberDetectors

def AKIDetGetIdDetector(nbdet):
    return _AAPI.AKIDetGetIdDetector(nbdet)
AKIDetGetIdDetector = _AAPI.AKIDetGetIdDetector

def AKIDetGetPropertiesDetector(nbdet):
    return _AAPI.AKIDetGetPropertiesDetector(nbdet)
AKIDetGetPropertiesDetector = _AAPI.AKIDetGetPropertiesDetector

def AKIDetGetPropertiesDetectorById(iddet):
    return _AAPI.AKIDetGetPropertiesDetectorById(iddet)
AKIDetGetPropertiesDetectorById = _AAPI.AKIDetGetPropertiesDetectorById

def AKIDetIsCountGather(Capability):
    return _AAPI.AKIDetIsCountGather(Capability)
AKIDetIsCountGather = _AAPI.AKIDetIsCountGather

def AKIDetIsPresenceGather(Capability):
    return _AAPI.AKIDetIsPresenceGather(Capability)
AKIDetIsPresenceGather = _AAPI.AKIDetIsPresenceGather

def AKIDetIsSpeedGather(Capability):
    return _AAPI.AKIDetIsSpeedGather(Capability)
AKIDetIsSpeedGather = _AAPI.AKIDetIsSpeedGather

def AKIDetIsOccupancyGather(Capability):
    return _AAPI.AKIDetIsOccupancyGather(Capability)
AKIDetIsOccupancyGather = _AAPI.AKIDetIsOccupancyGather

def AKIDetIsHeadwayGather(Capability):
    return _AAPI.AKIDetIsHeadwayGather(Capability)
AKIDetIsHeadwayGather = _AAPI.AKIDetIsHeadwayGather

def AKIDetIsDensityGather(Capability):
    return _AAPI.AKIDetIsDensityGather(Capability)
AKIDetIsDensityGather = _AAPI.AKIDetIsDensityGather

def AKIDetIsInfEquippedVehGather(Capability):
    return _AAPI.AKIDetIsInfEquippedVehGather(Capability)
AKIDetIsInfEquippedVehGather = _AAPI.AKIDetIsInfEquippedVehGather

def AKIDetGetIntervalDetection():
    return _AAPI.AKIDetGetIntervalDetection()
AKIDetGetIntervalDetection = _AAPI.AKIDetGetIntervalDetection

def AKIDetGetCycleInstantDetection():
    return _AAPI.AKIDetGetCycleInstantDetection()
AKIDetGetCycleInstantDetection = _AAPI.AKIDetGetCycleInstantDetection

def AKIDetGetNbMeasuresAvailableInstantDetection():
    return _AAPI.AKIDetGetNbMeasuresAvailableInstantDetection()
AKIDetGetNbMeasuresAvailableInstantDetection = _AAPI.AKIDetGetNbMeasuresAvailableInstantDetection

def AKIDetGetEndTimeMeasureAvailableInstantDetection(elem):
    return _AAPI.AKIDetGetEndTimeMeasureAvailableInstantDetection(elem)
AKIDetGetEndTimeMeasureAvailableInstantDetection = _AAPI.AKIDetGetEndTimeMeasureAvailableInstantDetection

def AKIDetGetSCOOTOccupancyCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetSCOOTOccupancyCyclebyId(iddet, vehTypePos)
AKIDetGetSCOOTOccupancyCyclebyId = _AAPI.AKIDetGetSCOOTOccupancyCyclebyId

def AKIDetGetFinTimeOccupedCyclebyId(iddet, elem, vehTypePos):
    return _AAPI.AKIDetGetFinTimeOccupedCyclebyId(iddet, elem, vehTypePos)
AKIDetGetFinTimeOccupedCyclebyId = _AAPI.AKIDetGetFinTimeOccupedCyclebyId

def AKIDetGetIniTimeOccupedCyclebyId(iddet, elem, vehTypePos):
    return _AAPI.AKIDetGetIniTimeOccupedCyclebyId(iddet, elem, vehTypePos)
AKIDetGetIniTimeOccupedCyclebyId = _AAPI.AKIDetGetIniTimeOccupedCyclebyId

def AKIDetGetNbintervalsOccupedCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetNbintervalsOccupedCyclebyId(iddet, vehTypePos)
AKIDetGetNbintervalsOccupedCyclebyId = _AAPI.AKIDetGetNbintervalsOccupedCyclebyId

def AKIDetGetCounterCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetCounterCyclebyId(iddet, vehTypePos)
AKIDetGetCounterCyclebyId = _AAPI.AKIDetGetCounterCyclebyId

def AKIDetGetSpeedCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetSpeedCyclebyId(iddet, vehTypePos)
AKIDetGetSpeedCyclebyId = _AAPI.AKIDetGetSpeedCyclebyId

def AKIDetGetTimeOccupedCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetTimeOccupedCyclebyId(iddet, vehTypePos)
AKIDetGetTimeOccupedCyclebyId = _AAPI.AKIDetGetTimeOccupedCyclebyId

def AKIDetGetPresenceCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetPresenceCyclebyId(iddet, vehTypePos)
AKIDetGetPresenceCyclebyId = _AAPI.AKIDetGetPresenceCyclebyId

def AKIDetGetHeadwayCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetHeadwayCyclebyId(iddet, vehTypePos)
AKIDetGetHeadwayCyclebyId = _AAPI.AKIDetGetHeadwayCyclebyId

def AKIDetGetDensityCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetDensityCyclebyId(iddet, vehTypePos)
AKIDetGetDensityCyclebyId = _AAPI.AKIDetGetDensityCyclebyId

def AKIDetGetNbVehsEquippedInDetectionCyclebyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetNbVehsEquippedInDetectionCyclebyId(iddet, vehTypePos)
AKIDetGetNbVehsEquippedInDetectionCyclebyId = _AAPI.AKIDetGetNbVehsEquippedInDetectionCyclebyId

def AKIDetGetInfVehInDetectionStaticInfVehCyclebyId(iddet, elem, vehTypePos):
    return _AAPI.AKIDetGetInfVehInDetectionStaticInfVehCyclebyId(iddet, elem, vehTypePos)
AKIDetGetInfVehInDetectionStaticInfVehCyclebyId = _AAPI.AKIDetGetInfVehInDetectionStaticInfVehCyclebyId

def AKIDetGetInfVehInDetectionInfVehCyclebyId(iddet, elem, vehTypePos):
    return _AAPI.AKIDetGetInfVehInDetectionInfVehCyclebyId(iddet, elem, vehTypePos)
AKIDetGetInfVehInDetectionInfVehCyclebyId = _AAPI.AKIDetGetInfVehInDetectionInfVehCyclebyId

def AKIDetGetSCOOTOccupancyInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetSCOOTOccupancyInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetSCOOTOccupancyInstantDetectionbyId = _AAPI.AKIDetGetSCOOTOccupancyInstantDetectionbyId

def AKIDetGetIniTimeOccupedInstantDetectionbyId(iddet, elem, vehTypePos, endtime):
    return _AAPI.AKIDetGetIniTimeOccupedInstantDetectionbyId(iddet, elem, vehTypePos, endtime)
AKIDetGetIniTimeOccupedInstantDetectionbyId = _AAPI.AKIDetGetIniTimeOccupedInstantDetectionbyId

def AKIDetGetEndTimeOccupedInstantDetectionbyId(iddet, elem, vehTypePos, endtime):
    return _AAPI.AKIDetGetEndTimeOccupedInstantDetectionbyId(iddet, elem, vehTypePos, endtime)
AKIDetGetEndTimeOccupedInstantDetectionbyId = _AAPI.AKIDetGetEndTimeOccupedInstantDetectionbyId

def AKIDetGetNbintervalsOccupedInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetNbintervalsOccupedInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetNbintervalsOccupedInstantDetectionbyId = _AAPI.AKIDetGetNbintervalsOccupedInstantDetectionbyId

def AKIDetGetCounterInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetCounterInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetCounterInstantDetectionbyId = _AAPI.AKIDetGetCounterInstantDetectionbyId

def AKIDetGetSpeedInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetSpeedInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetSpeedInstantDetectionbyId = _AAPI.AKIDetGetSpeedInstantDetectionbyId

def AKIDetGetTimeOccupedInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetTimeOccupedInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetTimeOccupedInstantDetectionbyId = _AAPI.AKIDetGetTimeOccupedInstantDetectionbyId

def AKIDetGetPresenceInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetPresenceInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetPresenceInstantDetectionbyId = _AAPI.AKIDetGetPresenceInstantDetectionbyId

def AKIDetGetHeadwayInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetHeadwayInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetHeadwayInstantDetectionbyId = _AAPI.AKIDetGetHeadwayInstantDetectionbyId

def AKIDetGetDensityInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetDensityInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetDensityInstantDetectionbyId = _AAPI.AKIDetGetDensityInstantDetectionbyId

def AKIDetGetNbVehsEquippedInDetectionInstantDetectionbyId(iddet, vehTypePos, endtime):
    return _AAPI.AKIDetGetNbVehsEquippedInDetectionInstantDetectionbyId(iddet, vehTypePos, endtime)
AKIDetGetNbVehsEquippedInDetectionInstantDetectionbyId = _AAPI.AKIDetGetNbVehsEquippedInDetectionInstantDetectionbyId

def AKIDetGetInfVehInDetectionStaticInfVehInstantDetectionbyId(iddet, elem, vehTypePos, endtime):
    return _AAPI.AKIDetGetInfVehInDetectionStaticInfVehInstantDetectionbyId(iddet, elem, vehTypePos, endtime)
AKIDetGetInfVehInDetectionStaticInfVehInstantDetectionbyId = _AAPI.AKIDetGetInfVehInDetectionStaticInfVehInstantDetectionbyId

def AKIDetGetInfVehInDetectionInfVehInstantDetectionbyId(iddet, elem, vehTypePos, endtime):
    return _AAPI.AKIDetGetInfVehInDetectionInfVehInstantDetectionbyId(iddet, elem, vehTypePos, endtime)
AKIDetGetInfVehInDetectionInfVehInstantDetectionbyId = _AAPI.AKIDetGetInfVehInDetectionInfVehInstantDetectionbyId

def AKIDetGetCounterAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetCounterAggregatedbyId(iddet, vehTypePos)
AKIDetGetCounterAggregatedbyId = _AAPI.AKIDetGetCounterAggregatedbyId

def AKIDetGetSpeedAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetSpeedAggregatedbyId(iddet, vehTypePos)
AKIDetGetSpeedAggregatedbyId = _AAPI.AKIDetGetSpeedAggregatedbyId

def AKIDetGetTimeOccupedAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetTimeOccupedAggregatedbyId(iddet, vehTypePos)
AKIDetGetTimeOccupedAggregatedbyId = _AAPI.AKIDetGetTimeOccupedAggregatedbyId

def AKIDetGetPresenceAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetPresenceAggregatedbyId(iddet, vehTypePos)
AKIDetGetPresenceAggregatedbyId = _AAPI.AKIDetGetPresenceAggregatedbyId

def AKIDetGetDensityAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetDensityAggregatedbyId(iddet, vehTypePos)
AKIDetGetDensityAggregatedbyId = _AAPI.AKIDetGetDensityAggregatedbyId

def AKIDetGetHeadwayAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetHeadwayAggregatedbyId(iddet, vehTypePos)
AKIDetGetHeadwayAggregatedbyId = _AAPI.AKIDetGetHeadwayAggregatedbyId

def AKIDetGetNbVehsInDetectionAggregatedbyId(iddet, vehTypePos):
    return _AAPI.AKIDetGetNbVehsInDetectionAggregatedbyId(iddet, vehTypePos)
AKIDetGetNbVehsInDetectionAggregatedbyId = _AAPI.AKIDetGetNbVehsInDetectionAggregatedbyId

def AKIDetGetInfVehInDetectionAggregatedbyId(iddet, vehTypePos, elem):
    return _AAPI.AKIDetGetInfVehInDetectionAggregatedbyId(iddet, vehTypePos, elem)
AKIDetGetInfVehInDetectionAggregatedbyId = _AAPI.AKIDetGetInfVehInDetectionAggregatedbyId

def AKIDetectorEventsEnable():
    return _AAPI.AKIDetectorEventsEnable()
AKIDetectorEventsEnable = _AAPI.AKIDetectorEventsEnable

def AKIDetectorEventsDisable():
    return _AAPI.AKIDetectorEventsDisable()
AKIDetectorEventsDisable = _AAPI.AKIDetectorEventsDisable

def AKIDetectorEventsAddEvent(iddet, aIniTime, aEndTime, vehTypePos, speed, length, idPTline):
    return _AAPI.AKIDetectorEventsAddEvent(iddet, aIniTime, aEndTime, vehTypePos, speed, length, idPTline)
AKIDetectorEventsAddEvent = _AAPI.AKIDetectorEventsAddEvent

def AKIDetectorEventsClear():
    return _AAPI.AKIDetectorEventsClear()
AKIDetectorEventsClear = _AAPI.AKIDetectorEventsClear
class A2KSectionInf(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A2KSectionInf, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A2KSectionInf, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.A2KSectionInf_report_set
    __swig_getmethods__["report"] = _AAPI.A2KSectionInf_report_get
    if _newclass:
        report = _swig_property(_AAPI.A2KSectionInf_report_get, _AAPI.A2KSectionInf_report_set)
    __swig_setmethods__["id"] = _AAPI.A2KSectionInf_id_set
    __swig_getmethods__["id"] = _AAPI.A2KSectionInf_id_get
    if _newclass:
        id = _swig_property(_AAPI.A2KSectionInf_id_get, _AAPI.A2KSectionInf_id_set)
    __swig_setmethods__["angId"] = _AAPI.A2KSectionInf_angId_set
    __swig_getmethods__["angId"] = _AAPI.A2KSectionInf_angId_get
    if _newclass:
        angId = _swig_property(_AAPI.A2KSectionInf_angId_get, _AAPI.A2KSectionInf_angId_set)
    __swig_setmethods__["nbCentralLanes"] = _AAPI.A2KSectionInf_nbCentralLanes_set
    __swig_getmethods__["nbCentralLanes"] = _AAPI.A2KSectionInf_nbCentralLanes_get
    if _newclass:
        nbCentralLanes = _swig_property(_AAPI.A2KSectionInf_nbCentralLanes_get, _AAPI.A2KSectionInf_nbCentralLanes_set)
    __swig_setmethods__["nbSideLanes"] = _AAPI.A2KSectionInf_nbSideLanes_set
    __swig_getmethods__["nbSideLanes"] = _AAPI.A2KSectionInf_nbSideLanes_get
    if _newclass:
        nbSideLanes = _swig_property(_AAPI.A2KSectionInf_nbSideLanes_get, _AAPI.A2KSectionInf_nbSideLanes_set)
    __swig_setmethods__["speedLimit"] = _AAPI.A2KSectionInf_speedLimit_set
    __swig_getmethods__["speedLimit"] = _AAPI.A2KSectionInf_speedLimit_get
    if _newclass:
        speedLimit = _swig_property(_AAPI.A2KSectionInf_speedLimit_get, _AAPI.A2KSectionInf_speedLimit_set)
    __swig_setmethods__["reservedLanesVisibilityDistance"] = _AAPI.A2KSectionInf_reservedLanesVisibilityDistance_set
    __swig_getmethods__["reservedLanesVisibilityDistance"] = _AAPI.A2KSectionInf_reservedLanesVisibilityDistance_get
    if _newclass:
        reservedLanesVisibilityDistance = _swig_property(_AAPI.A2KSectionInf_reservedLanesVisibilityDistance_get, _AAPI.A2KSectionInf_reservedLanesVisibilityDistance_set)
    __swig_setmethods__["yellowBoxSpeed"] = _AAPI.A2KSectionInf_yellowBoxSpeed_set
    __swig_getmethods__["yellowBoxSpeed"] = _AAPI.A2KSectionInf_yellowBoxSpeed_get
    if _newclass:
        yellowBoxSpeed = _swig_property(_AAPI.A2KSectionInf_yellowBoxSpeed_get, _AAPI.A2KSectionInf_yellowBoxSpeed_set)
    __swig_setmethods__["capacity"] = _AAPI.A2KSectionInf_capacity_set
    __swig_getmethods__["capacity"] = _AAPI.A2KSectionInf_capacity_get
    if _newclass:
        capacity = _swig_property(_AAPI.A2KSectionInf_capacity_get, _AAPI.A2KSectionInf_capacity_set)
    __swig_setmethods__["distance_OnRamp"] = _AAPI.A2KSectionInf_distance_OnRamp_set
    __swig_getmethods__["distance_OnRamp"] = _AAPI.A2KSectionInf_distance_OnRamp_get
    if _newclass:
        distance_OnRamp = _swig_property(_AAPI.A2KSectionInf_distance_OnRamp_get, _AAPI.A2KSectionInf_distance_OnRamp_set)
    __swig_setmethods__["distance_OnRampMerge"] = _AAPI.A2KSectionInf_distance_OnRampMerge_set
    __swig_getmethods__["distance_OnRampMerge"] = _AAPI.A2KSectionInf_distance_OnRampMerge_get
    if _newclass:
        distance_OnRampMerge = _swig_property(_AAPI.A2KSectionInf_distance_OnRampMerge_get, _AAPI.A2KSectionInf_distance_OnRampMerge_set)
    __swig_setmethods__["cooperation_OnRamp"] = _AAPI.A2KSectionInf_cooperation_OnRamp_set
    __swig_getmethods__["cooperation_OnRamp"] = _AAPI.A2KSectionInf_cooperation_OnRamp_get
    if _newclass:
        cooperation_OnRamp = _swig_property(_AAPI.A2KSectionInf_cooperation_OnRamp_get, _AAPI.A2KSectionInf_cooperation_OnRamp_set)
    __swig_setmethods__["length"] = _AAPI.A2KSectionInf_length_set
    __swig_getmethods__["length"] = _AAPI.A2KSectionInf_length_get
    if _newclass:
        length = _swig_property(_AAPI.A2KSectionInf_length_get, _AAPI.A2KSectionInf_length_set)
    __swig_setmethods__["nbSegments"] = _AAPI.A2KSectionInf_nbSegments_set
    __swig_getmethods__["nbSegments"] = _AAPI.A2KSectionInf_nbSegments_get
    if _newclass:
        nbSegments = _swig_property(_AAPI.A2KSectionInf_nbSegments_get, _AAPI.A2KSectionInf_nbSegments_set)
    __swig_setmethods__["slopePercentages"] = _AAPI.A2KSectionInf_slopePercentages_set
    __swig_getmethods__["slopePercentages"] = _AAPI.A2KSectionInf_slopePercentages_get
    if _newclass:
        slopePercentages = _swig_property(_AAPI.A2KSectionInf_slopePercentages_get, _AAPI.A2KSectionInf_slopePercentages_set)
    __swig_setmethods__["userDefinedCost"] = _AAPI.A2KSectionInf_userDefinedCost_set
    __swig_getmethods__["userDefinedCost"] = _AAPI.A2KSectionInf_userDefinedCost_get
    if _newclass:
        userDefinedCost = _swig_property(_AAPI.A2KSectionInf_userDefinedCost_get, _AAPI.A2KSectionInf_userDefinedCost_set)
    __swig_setmethods__["reactionTimeVariation"] = _AAPI.A2KSectionInf_reactionTimeVariation_set
    __swig_getmethods__["reactionTimeVariation"] = _AAPI.A2KSectionInf_reactionTimeVariation_get
    if _newclass:
        reactionTimeVariation = _swig_property(_AAPI.A2KSectionInf_reactionTimeVariation_get, _AAPI.A2KSectionInf_reactionTimeVariation_set)
    __swig_setmethods__["reactionTimeAtTrafficLightVariation"] = _AAPI.A2KSectionInf_reactionTimeAtTrafficLightVariation_set
    __swig_getmethods__["reactionTimeAtTrafficLightVariation"] = _AAPI.A2KSectionInf_reactionTimeAtTrafficLightVariation_get
    if _newclass:
        reactionTimeAtTrafficLightVariation = _swig_property(_AAPI.A2KSectionInf_reactionTimeAtTrafficLightVariation_get, _AAPI.A2KSectionInf_reactionTimeAtTrafficLightVariation_set)
    __swig_setmethods__["reactionTimeAtStopVariation"] = _AAPI.A2KSectionInf_reactionTimeAtStopVariation_set
    __swig_getmethods__["reactionTimeAtStopVariation"] = _AAPI.A2KSectionInf_reactionTimeAtStopVariation_get
    if _newclass:
        reactionTimeAtStopVariation = _swig_property(_AAPI.A2KSectionInf_reactionTimeAtStopVariation_get, _AAPI.A2KSectionInf_reactionTimeAtStopVariation_set)
    __swig_setmethods__["imprudentLaneChanging"] = _AAPI.A2KSectionInf_imprudentLaneChanging_set
    __swig_getmethods__["imprudentLaneChanging"] = _AAPI.A2KSectionInf_imprudentLaneChanging_get
    if _newclass:
        imprudentLaneChanging = _swig_property(_AAPI.A2KSectionInf_imprudentLaneChanging_get, _AAPI.A2KSectionInf_imprudentLaneChanging_set)
    __swig_setmethods__["nbTurnings"] = _AAPI.A2KSectionInf_nbTurnings_set
    __swig_getmethods__["nbTurnings"] = _AAPI.A2KSectionInf_nbTurnings_get
    if _newclass:
        nbTurnings = _swig_property(_AAPI.A2KSectionInf_nbTurnings_get, _AAPI.A2KSectionInf_nbTurnings_set)
    __swig_setmethods__["capacityDropModel"] = _AAPI.A2KSectionInf_capacityDropModel_set
    __swig_getmethods__["capacityDropModel"] = _AAPI.A2KSectionInf_capacityDropModel_get
    if _newclass:
        capacityDropModel = _swig_property(_AAPI.A2KSectionInf_capacityDropModel_get, _AAPI.A2KSectionInf_capacityDropModel_set)

    def __init__(self):
        this = _AAPI.new_A2KSectionInf()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_A2KSectionInf
    __del__ = lambda self: None
A2KSectionInf_swigregister = _AAPI.A2KSectionInf_swigregister
A2KSectionInf_swigregister(A2KSectionInf)

class A2KSectionBehaviourParam(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A2KSectionBehaviourParam, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A2KSectionBehaviourParam, name)
    __repr__ = _swig_repr
    __swig_setmethods__["speedLimit"] = _AAPI.A2KSectionBehaviourParam_speedLimit_set
    __swig_getmethods__["speedLimit"] = _AAPI.A2KSectionBehaviourParam_speedLimit_get
    if _newclass:
        speedLimit = _swig_property(_AAPI.A2KSectionBehaviourParam_speedLimit_get, _AAPI.A2KSectionBehaviourParam_speedLimit_set)
    __swig_setmethods__["reservedLanesVisibilityDistance"] = _AAPI.A2KSectionBehaviourParam_reservedLanesVisibilityDistance_set
    __swig_getmethods__["reservedLanesVisibilityDistance"] = _AAPI.A2KSectionBehaviourParam_reservedLanesVisibilityDistance_get
    if _newclass:
        reservedLanesVisibilityDistance = _swig_property(_AAPI.A2KSectionBehaviourParam_reservedLanesVisibilityDistance_get, _AAPI.A2KSectionBehaviourParam_reservedLanesVisibilityDistance_set)
    __swig_setmethods__["yellowBoxSpeed"] = _AAPI.A2KSectionBehaviourParam_yellowBoxSpeed_set
    __swig_getmethods__["yellowBoxSpeed"] = _AAPI.A2KSectionBehaviourParam_yellowBoxSpeed_get
    if _newclass:
        yellowBoxSpeed = _swig_property(_AAPI.A2KSectionBehaviourParam_yellowBoxSpeed_get, _AAPI.A2KSectionBehaviourParam_yellowBoxSpeed_set)
    __swig_setmethods__["capacity"] = _AAPI.A2KSectionBehaviourParam_capacity_set
    __swig_getmethods__["capacity"] = _AAPI.A2KSectionBehaviourParam_capacity_get
    if _newclass:
        capacity = _swig_property(_AAPI.A2KSectionBehaviourParam_capacity_get, _AAPI.A2KSectionBehaviourParam_capacity_set)
    __swig_setmethods__["distance_OnRamp"] = _AAPI.A2KSectionBehaviourParam_distance_OnRamp_set
    __swig_getmethods__["distance_OnRamp"] = _AAPI.A2KSectionBehaviourParam_distance_OnRamp_get
    if _newclass:
        distance_OnRamp = _swig_property(_AAPI.A2KSectionBehaviourParam_distance_OnRamp_get, _AAPI.A2KSectionBehaviourParam_distance_OnRamp_set)
    __swig_setmethods__["distance_OnRampMerge"] = _AAPI.A2KSectionBehaviourParam_distance_OnRampMerge_set
    __swig_getmethods__["distance_OnRampMerge"] = _AAPI.A2KSectionBehaviourParam_distance_OnRampMerge_get
    if _newclass:
        distance_OnRampMerge = _swig_property(_AAPI.A2KSectionBehaviourParam_distance_OnRampMerge_get, _AAPI.A2KSectionBehaviourParam_distance_OnRampMerge_set)
    __swig_setmethods__["cooperation_OnRamp"] = _AAPI.A2KSectionBehaviourParam_cooperation_OnRamp_set
    __swig_getmethods__["cooperation_OnRamp"] = _AAPI.A2KSectionBehaviourParam_cooperation_OnRamp_get
    if _newclass:
        cooperation_OnRamp = _swig_property(_AAPI.A2KSectionBehaviourParam_cooperation_OnRamp_get, _AAPI.A2KSectionBehaviourParam_cooperation_OnRamp_set)
    __swig_setmethods__["userDefinedCost"] = _AAPI.A2KSectionBehaviourParam_userDefinedCost_set
    __swig_getmethods__["userDefinedCost"] = _AAPI.A2KSectionBehaviourParam_userDefinedCost_get
    if _newclass:
        userDefinedCost = _swig_property(_AAPI.A2KSectionBehaviourParam_userDefinedCost_get, _AAPI.A2KSectionBehaviourParam_userDefinedCost_set)
    __swig_setmethods__["reactionTimeVariation"] = _AAPI.A2KSectionBehaviourParam_reactionTimeVariation_set
    __swig_getmethods__["reactionTimeVariation"] = _AAPI.A2KSectionBehaviourParam_reactionTimeVariation_get
    if _newclass:
        reactionTimeVariation = _swig_property(_AAPI.A2KSectionBehaviourParam_reactionTimeVariation_get, _AAPI.A2KSectionBehaviourParam_reactionTimeVariation_set)
    __swig_setmethods__["reactionTimeAtTrafficLightVariation"] = _AAPI.A2KSectionBehaviourParam_reactionTimeAtTrafficLightVariation_set
    __swig_getmethods__["reactionTimeAtTrafficLightVariation"] = _AAPI.A2KSectionBehaviourParam_reactionTimeAtTrafficLightVariation_get
    if _newclass:
        reactionTimeAtTrafficLightVariation = _swig_property(_AAPI.A2KSectionBehaviourParam_reactionTimeAtTrafficLightVariation_get, _AAPI.A2KSectionBehaviourParam_reactionTimeAtTrafficLightVariation_set)
    __swig_setmethods__["reactionTimeAtStopVariation"] = _AAPI.A2KSectionBehaviourParam_reactionTimeAtStopVariation_set
    __swig_getmethods__["reactionTimeAtStopVariation"] = _AAPI.A2KSectionBehaviourParam_reactionTimeAtStopVariation_get
    if _newclass:
        reactionTimeAtStopVariation = _swig_property(_AAPI.A2KSectionBehaviourParam_reactionTimeAtStopVariation_get, _AAPI.A2KSectionBehaviourParam_reactionTimeAtStopVariation_set)
    __swig_setmethods__["imprudentLaneChanging"] = _AAPI.A2KSectionBehaviourParam_imprudentLaneChanging_set
    __swig_getmethods__["imprudentLaneChanging"] = _AAPI.A2KSectionBehaviourParam_imprudentLaneChanging_get
    if _newclass:
        imprudentLaneChanging = _swig_property(_AAPI.A2KSectionBehaviourParam_imprudentLaneChanging_get, _AAPI.A2KSectionBehaviourParam_imprudentLaneChanging_set)
    __swig_setmethods__["capacityDropModel"] = _AAPI.A2KSectionBehaviourParam_capacityDropModel_set
    __swig_getmethods__["capacityDropModel"] = _AAPI.A2KSectionBehaviourParam_capacityDropModel_get
    if _newclass:
        capacityDropModel = _swig_property(_AAPI.A2KSectionBehaviourParam_capacityDropModel_get, _AAPI.A2KSectionBehaviourParam_capacityDropModel_set)

    def __init__(self):
        this = _AAPI.new_A2KSectionBehaviourParam()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_A2KSectionBehaviourParam
    __del__ = lambda self: None
A2KSectionBehaviourParam_swigregister = _AAPI.A2KSectionBehaviourParam_swigregister
A2KSectionBehaviourParam_swigregister(A2KSectionBehaviourParam)

class A2KCentroidInf(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A2KCentroidInf, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A2KCentroidInf, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.A2KCentroidInf_report_set
    __swig_getmethods__["report"] = _AAPI.A2KCentroidInf_report_get
    if _newclass:
        report = _swig_property(_AAPI.A2KCentroidInf_report_get, _AAPI.A2KCentroidInf_report_set)
    __swig_setmethods__["id"] = _AAPI.A2KCentroidInf_id_set
    __swig_getmethods__["id"] = _AAPI.A2KCentroidInf_id_get
    if _newclass:
        id = _swig_property(_AAPI.A2KCentroidInf_id_get, _AAPI.A2KCentroidInf_id_set)
    __swig_setmethods__["AsDestConsider_percentage"] = _AAPI.A2KCentroidInf_AsDestConsider_percentage_set
    __swig_getmethods__["AsDestConsider_percentage"] = _AAPI.A2KCentroidInf_AsDestConsider_percentage_get
    if _newclass:
        AsDestConsider_percentage = _swig_property(_AAPI.A2KCentroidInf_AsDestConsider_percentage_get, _AAPI.A2KCentroidInf_AsDestConsider_percentage_set)
    __swig_setmethods__["AsOrigConsider_percentage"] = _AAPI.A2KCentroidInf_AsOrigConsider_percentage_set
    __swig_getmethods__["AsOrigConsider_percentage"] = _AAPI.A2KCentroidInf_AsOrigConsider_percentage_get
    if _newclass:
        AsOrigConsider_percentage = _swig_property(_AAPI.A2KCentroidInf_AsOrigConsider_percentage_get, _AAPI.A2KCentroidInf_AsOrigConsider_percentage_set)
    __swig_setmethods__["IsOrigin"] = _AAPI.A2KCentroidInf_IsOrigin_set
    __swig_getmethods__["IsOrigin"] = _AAPI.A2KCentroidInf_IsOrigin_get
    if _newclass:
        IsOrigin = _swig_property(_AAPI.A2KCentroidInf_IsOrigin_get, _AAPI.A2KCentroidInf_IsOrigin_set)
    __swig_setmethods__["IsDestination"] = _AAPI.A2KCentroidInf_IsDestination_set
    __swig_getmethods__["IsDestination"] = _AAPI.A2KCentroidInf_IsDestination_get
    if _newclass:
        IsDestination = _swig_property(_AAPI.A2KCentroidInf_IsDestination_get, _AAPI.A2KCentroidInf_IsDestination_set)
    __swig_setmethods__["NumConnecTo"] = _AAPI.A2KCentroidInf_NumConnecTo_set
    __swig_getmethods__["NumConnecTo"] = _AAPI.A2KCentroidInf_NumConnecTo_get
    if _newclass:
        NumConnecTo = _swig_property(_AAPI.A2KCentroidInf_NumConnecTo_get, _AAPI.A2KCentroidInf_NumConnecTo_set)
    __swig_setmethods__["NumConnecFrom"] = _AAPI.A2KCentroidInf_NumConnecFrom_set
    __swig_getmethods__["NumConnecFrom"] = _AAPI.A2KCentroidInf_NumConnecFrom_get
    if _newclass:
        NumConnecFrom = _swig_property(_AAPI.A2KCentroidInf_NumConnecFrom_get, _AAPI.A2KCentroidInf_NumConnecFrom_set)

    def __init__(self):
        this = _AAPI.new_A2KCentroidInf()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_A2KCentroidInf
    __del__ = lambda self: None
A2KCentroidInf_swigregister = _AAPI.A2KCentroidInf_swigregister
A2KCentroidInf_swigregister(A2KCentroidInf)

class A2KTurnInf(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A2KTurnInf, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A2KTurnInf, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.A2KTurnInf_report_set
    __swig_getmethods__["report"] = _AAPI.A2KTurnInf_report_get
    if _newclass:
        report = _swig_property(_AAPI.A2KTurnInf_report_get, _AAPI.A2KTurnInf_report_set)
    __swig_setmethods__["id"] = _AAPI.A2KTurnInf_id_set
    __swig_getmethods__["id"] = _AAPI.A2KTurnInf_id_get
    if _newclass:
        id = _swig_property(_AAPI.A2KTurnInf_id_get, _AAPI.A2KTurnInf_id_set)
    __swig_setmethods__["length"] = _AAPI.A2KTurnInf_length_set
    __swig_getmethods__["length"] = _AAPI.A2KTurnInf_length_get
    if _newclass:
        length = _swig_property(_AAPI.A2KTurnInf_length_get, _AAPI.A2KTurnInf_length_set)
    __swig_setmethods__["speedLimit"] = _AAPI.A2KTurnInf_speedLimit_set
    __swig_getmethods__["speedLimit"] = _AAPI.A2KTurnInf_speedLimit_get
    if _newclass:
        speedLimit = _swig_property(_AAPI.A2KTurnInf_speedLimit_get, _AAPI.A2KTurnInf_speedLimit_set)
    __swig_setmethods__["originSectionId"] = _AAPI.A2KTurnInf_originSectionId_set
    __swig_getmethods__["originSectionId"] = _AAPI.A2KTurnInf_originSectionId_get
    if _newclass:
        originSectionId = _swig_property(_AAPI.A2KTurnInf_originSectionId_get, _AAPI.A2KTurnInf_originSectionId_set)
    __swig_setmethods__["destinationSectionId"] = _AAPI.A2KTurnInf_destinationSectionId_set
    __swig_getmethods__["destinationSectionId"] = _AAPI.A2KTurnInf_destinationSectionId_get
    if _newclass:
        destinationSectionId = _swig_property(_AAPI.A2KTurnInf_destinationSectionId_get, _AAPI.A2KTurnInf_destinationSectionId_set)
    __swig_setmethods__["originFromLane"] = _AAPI.A2KTurnInf_originFromLane_set
    __swig_getmethods__["originFromLane"] = _AAPI.A2KTurnInf_originFromLane_get
    if _newclass:
        originFromLane = _swig_property(_AAPI.A2KTurnInf_originFromLane_get, _AAPI.A2KTurnInf_originFromLane_set)
    __swig_setmethods__["originToLane"] = _AAPI.A2KTurnInf_originToLane_set
    __swig_getmethods__["originToLane"] = _AAPI.A2KTurnInf_originToLane_get
    if _newclass:
        originToLane = _swig_property(_AAPI.A2KTurnInf_originToLane_get, _AAPI.A2KTurnInf_originToLane_set)
    __swig_setmethods__["destinationFromLane"] = _AAPI.A2KTurnInf_destinationFromLane_set
    __swig_getmethods__["destinationFromLane"] = _AAPI.A2KTurnInf_destinationFromLane_get
    if _newclass:
        destinationFromLane = _swig_property(_AAPI.A2KTurnInf_destinationFromLane_get, _AAPI.A2KTurnInf_destinationFromLane_set)
    __swig_setmethods__["destinationToLane"] = _AAPI.A2KTurnInf_destinationToLane_set
    __swig_getmethods__["destinationToLane"] = _AAPI.A2KTurnInf_destinationToLane_get
    if _newclass:
        destinationToLane = _swig_property(_AAPI.A2KTurnInf_destinationToLane_get, _AAPI.A2KTurnInf_destinationToLane_set)

    def __init__(self):
        this = _AAPI.new_A2KTurnInf()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_A2KTurnInf
    __del__ = lambda self: None
A2KTurnInf_swigregister = _AAPI.A2KTurnInf_swigregister
A2KTurnInf_swigregister(A2KTurnInf)

class A2KTurnBehaviourParam(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A2KTurnBehaviourParam, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A2KTurnBehaviourParam, name)
    __repr__ = _swig_repr
    __swig_setmethods__["speedLimit"] = _AAPI.A2KTurnBehaviourParam_speedLimit_set
    __swig_getmethods__["speedLimit"] = _AAPI.A2KTurnBehaviourParam_speedLimit_get
    if _newclass:
        speedLimit = _swig_property(_AAPI.A2KTurnBehaviourParam_speedLimit_get, _AAPI.A2KTurnBehaviourParam_speedLimit_set)
    __swig_setmethods__["yellowBoxSpeed"] = _AAPI.A2KTurnBehaviourParam_yellowBoxSpeed_set
    __swig_getmethods__["yellowBoxSpeed"] = _AAPI.A2KTurnBehaviourParam_yellowBoxSpeed_get
    if _newclass:
        yellowBoxSpeed = _swig_property(_AAPI.A2KTurnBehaviourParam_yellowBoxSpeed_get, _AAPI.A2KTurnBehaviourParam_yellowBoxSpeed_set)

    def __init__(self):
        this = _AAPI.new_A2KTurnBehaviourParam()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_A2KTurnBehaviourParam
    __del__ = lambda self: None
A2KTurnBehaviourParam_swigregister = _AAPI.A2KTurnBehaviourParam_swigregister
A2KTurnBehaviourParam_swigregister(A2KTurnBehaviourParam)


def AKIInfNetGetUnits():
    return _AAPI.AKIInfNetGetUnits()
AKIInfNetGetUnits = _AAPI.AKIInfNetGetUnits

def AKIInfNetGetWorldCoordinates(min_x, min_y, max_x, max_y):
    return _AAPI.AKIInfNetGetWorldCoordinates(min_x, min_y, max_x, max_y)
AKIInfNetGetWorldCoordinates = _AAPI.AKIInfNetGetWorldCoordinates

def AKIInfNetNbSectionsANG():
    return _AAPI.AKIInfNetNbSectionsANG()
AKIInfNetNbSectionsANG = _AAPI.AKIInfNetNbSectionsANG

def AKIInfNetGetSectionANGId(element):
    return _AAPI.AKIInfNetGetSectionANGId(element)
AKIInfNetGetSectionANGId = _AAPI.AKIInfNetGetSectionANGId

def AKIInfNetGetSectionANGInf(aid):
    return _AAPI.AKIInfNetGetSectionANGInf(aid)
AKIInfNetGetSectionANGInf = _AAPI.AKIInfNetGetSectionANGInf

def AKIInfNetGetIdSectionANGDestinationofTurning(aid, elem):
    return _AAPI.AKIInfNetGetIdSectionANGDestinationofTurning(aid, elem)
AKIInfNetGetIdSectionANGDestinationofTurning = _AAPI.AKIInfNetGetIdSectionANGDestinationofTurning

def AKIInfNetGetDestinationFromLaneofTurning(sectId, elem):
    return _AAPI.AKIInfNetGetDestinationFromLaneofTurning(sectId, elem)
AKIInfNetGetDestinationFromLaneofTurning = _AAPI.AKIInfNetGetDestinationFromLaneofTurning

def AKIInfNetGetDestinationToLaneofTurning(sectId, elem):
    return _AAPI.AKIInfNetGetDestinationToLaneofTurning(sectId, elem)
AKIInfNetGetDestinationToLaneofTurning = _AAPI.AKIInfNetGetDestinationToLaneofTurning

def AKIInfNetGetOriginFromLaneofTurning(sectId, elem):
    return _AAPI.AKIInfNetGetOriginFromLaneofTurning(sectId, elem)
AKIInfNetGetOriginFromLaneofTurning = _AAPI.AKIInfNetGetOriginFromLaneofTurning

def AKIInfNetGetOriginToLaneofTurning(sectId, elem):
    return _AAPI.AKIInfNetGetOriginToLaneofTurning(sectId, elem)
AKIInfNetGetOriginToLaneofTurning = _AAPI.AKIInfNetGetOriginToLaneofTurning

def AKIInfNetNbTurns():
    return _AAPI.AKIInfNetNbTurns()
AKIInfNetNbTurns = _AAPI.AKIInfNetNbTurns

def AKIInfNetGetTurnId(element):
    return _AAPI.AKIInfNetGetTurnId(element)
AKIInfNetGetTurnId = _AAPI.AKIInfNetGetTurnId

def AKIInfNetGetTurnInf(aid):
    return _AAPI.AKIInfNetGetTurnInf(aid)
AKIInfNetGetTurnInf = _AAPI.AKIInfNetGetTurnInf

def AKIInfNetGetNbTurnsInNode(idnode):
    return _AAPI.AKIInfNetGetNbTurnsInNode(idnode)
AKIInfNetGetNbTurnsInNode = _AAPI.AKIInfNetGetNbTurnsInNode

def AKIInfNetGetOriginSectionInTurn(idnode, index):
    return _AAPI.AKIInfNetGetOriginSectionInTurn(idnode, index)
AKIInfNetGetOriginSectionInTurn = _AAPI.AKIInfNetGetOriginSectionInTurn

def AKIInfNetGetDestinationSectionInTurn(idnode, index):
    return _AAPI.AKIInfNetGetDestinationSectionInTurn(idnode, index)
AKIInfNetGetDestinationSectionInTurn = _AAPI.AKIInfNetGetDestinationSectionInTurn

def AKIInfNetGetTurnInfo(idnode, index):
    return _AAPI.AKIInfNetGetTurnInfo(idnode, index)
AKIInfNetGetTurnInfo = _AAPI.AKIInfNetGetTurnInfo

def AKIInfNetGetTurningId(originSection, destinationSection):
    return _AAPI.AKIInfNetGetTurningId(originSection, destinationSection)
AKIInfNetGetTurningId = _AAPI.AKIInfNetGetTurningId

def AKIInfNetGetTurningDestinationFromLane(originSection, destinationSection):
    return _AAPI.AKIInfNetGetTurningDestinationFromLane(originSection, destinationSection)
AKIInfNetGetTurningDestinationFromLane = _AAPI.AKIInfNetGetTurningDestinationFromLane

def AKIInfNetGetTurningDestinationToLane(originSection, destinationSection):
    return _AAPI.AKIInfNetGetTurningDestinationToLane(originSection, destinationSection)
AKIInfNetGetTurningDestinationToLane = _AAPI.AKIInfNetGetTurningDestinationToLane

def AKIInfNetGetTurningOriginFromLane(originSection, destinationSection):
    return _AAPI.AKIInfNetGetTurningOriginFromLane(originSection, destinationSection)
AKIInfNetGetTurningOriginFromLane = _AAPI.AKIInfNetGetTurningOriginFromLane

def AKIInfNetGetTurningOriginToLane(originSection, destinationSection):
    return _AAPI.AKIInfNetGetTurningOriginToLane(originSection, destinationSection)
AKIInfNetGetTurningOriginToLane = _AAPI.AKIInfNetGetTurningOriginToLane

def AKIInfNetSetTurnBehaviouralParam(aid, behaviourParam):
    return _AAPI.AKIInfNetSetTurnBehaviouralParam(aid, behaviourParam)
AKIInfNetSetTurnBehaviouralParam = _AAPI.AKIInfNetSetTurnBehaviouralParam

def AKIInfNetGetTurnBehaviouralParam(idturn, report):
    return _AAPI.AKIInfNetGetTurnBehaviouralParam(idturn, report)
AKIInfNetGetTurnBehaviouralParam = _AAPI.AKIInfNetGetTurnBehaviouralParam

def AKIInfNetSetSectionBehaviouralParam(aid, behaviourParam, allsegments):
    return _AAPI.AKIInfNetSetSectionBehaviouralParam(aid, behaviourParam, allsegments)
AKIInfNetSetSectionBehaviouralParam = _AAPI.AKIInfNetSetSectionBehaviouralParam

def AKIInfNetGetSectionBehaviouralParam(idSection, report):
    return _AAPI.AKIInfNetGetSectionBehaviouralParam(idSection, report)
AKIInfNetGetSectionBehaviouralParam = _AAPI.AKIInfNetGetSectionBehaviouralParam

def AKISetSectionCapacity(aid, capacity):
    return _AAPI.AKISetSectionCapacity(aid, capacity)
AKISetSectionCapacity = _AAPI.AKISetSectionCapacity

def AKISetSectionUserDefinedCost(aid, userDefinedCost):
    return _AAPI.AKISetSectionUserDefinedCost(aid, userDefinedCost)
AKISetSectionUserDefinedCost = _AAPI.AKISetSectionUserDefinedCost

def AKISetSectionUserDefinedCost2(aid, userDefinedCost):
    return _AAPI.AKISetSectionUserDefinedCost2(aid, userDefinedCost)
AKISetSectionUserDefinedCost2 = _AAPI.AKISetSectionUserDefinedCost2

def AKISetSectionUserDefinedCost3(aid, userDefinedCost):
    return _AAPI.AKISetSectionUserDefinedCost3(aid, userDefinedCost)
AKISetSectionUserDefinedCost3 = _AAPI.AKISetSectionUserDefinedCost3

def AKIGetSectionCapacity(aid):
    return _AAPI.AKIGetSectionCapacity(aid)
AKIGetSectionCapacity = _AAPI.AKIGetSectionCapacity

def AKIGetSectionUserDefinedCost(aid):
    return _AAPI.AKIGetSectionUserDefinedCost(aid)
AKIGetSectionUserDefinedCost = _AAPI.AKIGetSectionUserDefinedCost

def AKIGetSectionUserDefinedCost2(aid):
    return _AAPI.AKIGetSectionUserDefinedCost2(aid)
AKIGetSectionUserDefinedCost2 = _AAPI.AKIGetSectionUserDefinedCost2

def AKIGetSectionUserDefinedCost3(aid):
    return _AAPI.AKIGetSectionUserDefinedCost3(aid)
AKIGetSectionUserDefinedCost3 = _AAPI.AKIGetSectionUserDefinedCost3

def AKIInfNetNbJunctions():
    return _AAPI.AKIInfNetNbJunctions()
AKIInfNetNbJunctions = _AAPI.AKIInfNetNbJunctions

def AKIInfNetGetJunctionId(element):
    return _AAPI.AKIInfNetGetJunctionId(element)
AKIInfNetGetJunctionId = _AAPI.AKIInfNetGetJunctionId

def AKIInfNetNbCentroids():
    return _AAPI.AKIInfNetNbCentroids()
AKIInfNetNbCentroids = _AAPI.AKIInfNetNbCentroids

def AKIInfNetGetCentroidId(element):
    return _AAPI.AKIInfNetGetCentroidId(element)
AKIInfNetGetCentroidId = _AAPI.AKIInfNetGetCentroidId

def AKIInfNetGetCentroidInf(aid):
    return _AAPI.AKIInfNetGetCentroidInf(aid)
AKIInfNetGetCentroidInf = _AAPI.AKIInfNetGetCentroidInf

def AKIInfNetGetIdObjectofOriginCentroidConnector(aid, elem, isSection):
    return _AAPI.AKIInfNetGetIdObjectofOriginCentroidConnector(aid, elem, isSection)
AKIInfNetGetIdObjectofOriginCentroidConnector = _AAPI.AKIInfNetGetIdObjectofOriginCentroidConnector

def AKIInfNetGetIdObjectofDestinationCentroidConnector(aid, elem, isSection):
    return _AAPI.AKIInfNetGetIdObjectofDestinationCentroidConnector(aid, elem, isSection)
AKIInfNetGetIdObjectofDestinationCentroidConnector = _AAPI.AKIInfNetGetIdObjectofDestinationCentroidConnector

def AKIInfNetGetIdObjectANGofOriginCentroidConnector(aid, elem, isSection):
    return _AAPI.AKIInfNetGetIdObjectANGofOriginCentroidConnector(aid, elem, isSection)
AKIInfNetGetIdObjectANGofOriginCentroidConnector = _AAPI.AKIInfNetGetIdObjectANGofOriginCentroidConnector

def AKIInfNetGetIdObjectANGofDestinationCentroidConnector(aid, elem, isSection):
    return _AAPI.AKIInfNetGetIdObjectANGofDestinationCentroidConnector(aid, elem, isSection)
AKIInfNetGetIdObjectANGofDestinationCentroidConnector = _AAPI.AKIInfNetGetIdObjectANGofDestinationCentroidConnector

def AKIInfNetGetShortestPathNbSections(fromSection, toSection, sectionColumnCost):
    return _AAPI.AKIInfNetGetShortestPathNbSections(fromSection, toSection, sectionColumnCost)
AKIInfNetGetShortestPathNbSections = _AAPI.AKIInfNetGetShortestPathNbSections

def AKIInfNetGetShortestPath(fromSection, toSection, sectionColumnCost, path):
    return _AAPI.AKIInfNetGetShortestPath(fromSection, toSection, sectionColumnCost, path)
AKIInfNetGetShortestPath = _AAPI.AKIInfNetGetShortestPath

def AKIInfNetGetNetworkPathA():
    return _AAPI.AKIInfNetGetNetworkPathA()
AKIInfNetGetNetworkPathA = _AAPI.AKIInfNetGetNetworkPathA

def AKIInfNetGetNetworkNameA():
    return _AAPI.AKIInfNetGetNetworkNameA()
AKIInfNetGetNetworkNameA = _AAPI.AKIInfNetGetNetworkNameA

def AKIInfNetGetTrafficDemandNameA():
    return _AAPI.AKIInfNetGetTrafficDemandNameA()
AKIInfNetGetTrafficDemandNameA = _AAPI.AKIInfNetGetTrafficDemandNameA

def AKIInfNetGetTrafficDemandType():
    return _AAPI.AKIInfNetGetTrafficDemandType()
AKIInfNetGetTrafficDemandType = _AAPI.AKIInfNetGetTrafficDemandType
class StructAkiEstadSystem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadSystem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadSystem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadSystem_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadSystem_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadSystem_report_get, _AAPI.StructAkiEstadSystem_report_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadSystem_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadSystem_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadSystem_Flow_get, _AAPI.StructAkiEstadSystem_Flow_set)
    __swig_setmethods__["TTa"] = _AAPI.StructAkiEstadSystem_TTa_set
    __swig_getmethods__["TTa"] = _AAPI.StructAkiEstadSystem_TTa_get
    if _newclass:
        TTa = _swig_property(_AAPI.StructAkiEstadSystem_TTa_get, _AAPI.StructAkiEstadSystem_TTa_set)
    __swig_setmethods__["TTd"] = _AAPI.StructAkiEstadSystem_TTd_set
    __swig_getmethods__["TTd"] = _AAPI.StructAkiEstadSystem_TTd_get
    if _newclass:
        TTd = _swig_property(_AAPI.StructAkiEstadSystem_TTd_get, _AAPI.StructAkiEstadSystem_TTd_set)
    __swig_setmethods__["DTa"] = _AAPI.StructAkiEstadSystem_DTa_set
    __swig_getmethods__["DTa"] = _AAPI.StructAkiEstadSystem_DTa_get
    if _newclass:
        DTa = _swig_property(_AAPI.StructAkiEstadSystem_DTa_get, _AAPI.StructAkiEstadSystem_DTa_set)
    __swig_setmethods__["DTd"] = _AAPI.StructAkiEstadSystem_DTd_set
    __swig_getmethods__["DTd"] = _AAPI.StructAkiEstadSystem_DTd_get
    if _newclass:
        DTd = _swig_property(_AAPI.StructAkiEstadSystem_DTd_get, _AAPI.StructAkiEstadSystem_DTd_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadSystem_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadSystem_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadSystem_Sa_get, _AAPI.StructAkiEstadSystem_Sa_set)
    __swig_setmethods__["Sd"] = _AAPI.StructAkiEstadSystem_Sd_set
    __swig_getmethods__["Sd"] = _AAPI.StructAkiEstadSystem_Sd_get
    if _newclass:
        Sd = _swig_property(_AAPI.StructAkiEstadSystem_Sd_get, _AAPI.StructAkiEstadSystem_Sd_set)
    __swig_setmethods__["SHa"] = _AAPI.StructAkiEstadSystem_SHa_set
    __swig_getmethods__["SHa"] = _AAPI.StructAkiEstadSystem_SHa_get
    if _newclass:
        SHa = _swig_property(_AAPI.StructAkiEstadSystem_SHa_get, _AAPI.StructAkiEstadSystem_SHa_set)
    __swig_setmethods__["SHd"] = _AAPI.StructAkiEstadSystem_SHd_set
    __swig_getmethods__["SHd"] = _AAPI.StructAkiEstadSystem_SHd_get
    if _newclass:
        SHd = _swig_property(_AAPI.StructAkiEstadSystem_SHd_get, _AAPI.StructAkiEstadSystem_SHd_set)
    __swig_setmethods__["Density"] = _AAPI.StructAkiEstadSystem_Density_set
    __swig_getmethods__["Density"] = _AAPI.StructAkiEstadSystem_Density_get
    if _newclass:
        Density = _swig_property(_AAPI.StructAkiEstadSystem_Density_get, _AAPI.StructAkiEstadSystem_Density_set)
    __swig_setmethods__["STa"] = _AAPI.StructAkiEstadSystem_STa_set
    __swig_getmethods__["STa"] = _AAPI.StructAkiEstadSystem_STa_get
    if _newclass:
        STa = _swig_property(_AAPI.StructAkiEstadSystem_STa_get, _AAPI.StructAkiEstadSystem_STa_set)
    __swig_setmethods__["STd"] = _AAPI.StructAkiEstadSystem_STd_set
    __swig_getmethods__["STd"] = _AAPI.StructAkiEstadSystem_STd_get
    if _newclass:
        STd = _swig_property(_AAPI.StructAkiEstadSystem_STd_get, _AAPI.StructAkiEstadSystem_STd_set)
    __swig_setmethods__["NumStops"] = _AAPI.StructAkiEstadSystem_NumStops_set
    __swig_getmethods__["NumStops"] = _AAPI.StructAkiEstadSystem_NumStops_get
    if _newclass:
        NumStops = _swig_property(_AAPI.StructAkiEstadSystem_NumStops_get, _AAPI.StructAkiEstadSystem_NumStops_set)
    __swig_setmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadSystem_LongQueueAvg_set
    __swig_getmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadSystem_LongQueueAvg_get
    if _newclass:
        LongQueueAvg = _swig_property(_AAPI.StructAkiEstadSystem_LongQueueAvg_get, _AAPI.StructAkiEstadSystem_LongQueueAvg_set)
    __swig_setmethods__["LongQueueMax"] = _AAPI.StructAkiEstadSystem_LongQueueMax_set
    __swig_getmethods__["LongQueueMax"] = _AAPI.StructAkiEstadSystem_LongQueueMax_get
    if _newclass:
        LongQueueMax = _swig_property(_AAPI.StructAkiEstadSystem_LongQueueMax_get, _AAPI.StructAkiEstadSystem_LongQueueMax_set)
    __swig_setmethods__["TotalTravel"] = _AAPI.StructAkiEstadSystem_TotalTravel_set
    __swig_getmethods__["TotalTravel"] = _AAPI.StructAkiEstadSystem_TotalTravel_get
    if _newclass:
        TotalTravel = _swig_property(_AAPI.StructAkiEstadSystem_TotalTravel_get, _AAPI.StructAkiEstadSystem_TotalTravel_set)
    __swig_setmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadSystem_TotalTravelTime_set
    __swig_getmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadSystem_TotalTravelTime_get
    if _newclass:
        TotalTravelTime = _swig_property(_AAPI.StructAkiEstadSystem_TotalTravelTime_get, _AAPI.StructAkiEstadSystem_TotalTravelTime_set)
    __swig_setmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadSystem_virtualQueueAvg_set
    __swig_getmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadSystem_virtualQueueAvg_get
    if _newclass:
        virtualQueueAvg = _swig_property(_AAPI.StructAkiEstadSystem_virtualQueueAvg_get, _AAPI.StructAkiEstadSystem_virtualQueueAvg_set)
    __swig_setmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadSystem_virtualQueueMax_set
    __swig_getmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadSystem_virtualQueueMax_get
    if _newclass:
        virtualQueueMax = _swig_property(_AAPI.StructAkiEstadSystem_virtualQueueMax_get, _AAPI.StructAkiEstadSystem_virtualQueueMax_set)
    __swig_setmethods__["count"] = _AAPI.StructAkiEstadSystem_count_set
    __swig_getmethods__["count"] = _AAPI.StructAkiEstadSystem_count_get
    if _newclass:
        count = _swig_property(_AAPI.StructAkiEstadSystem_count_get, _AAPI.StructAkiEstadSystem_count_set)
    __swig_setmethods__["inputFlow"] = _AAPI.StructAkiEstadSystem_inputFlow_set
    __swig_getmethods__["inputFlow"] = _AAPI.StructAkiEstadSystem_inputFlow_get
    if _newclass:
        inputFlow = _swig_property(_AAPI.StructAkiEstadSystem_inputFlow_get, _AAPI.StructAkiEstadSystem_inputFlow_set)
    __swig_setmethods__["inputCount"] = _AAPI.StructAkiEstadSystem_inputCount_set
    __swig_getmethods__["inputCount"] = _AAPI.StructAkiEstadSystem_inputCount_get
    if _newclass:
        inputCount = _swig_property(_AAPI.StructAkiEstadSystem_inputCount_get, _AAPI.StructAkiEstadSystem_inputCount_set)
    __swig_setmethods__["vehsWaiting"] = _AAPI.StructAkiEstadSystem_vehsWaiting_set
    __swig_getmethods__["vehsWaiting"] = _AAPI.StructAkiEstadSystem_vehsWaiting_get
    if _newclass:
        vehsWaiting = _swig_property(_AAPI.StructAkiEstadSystem_vehsWaiting_get, _AAPI.StructAkiEstadSystem_vehsWaiting_set)
    __swig_setmethods__["vehIn"] = _AAPI.StructAkiEstadSystem_vehIn_set
    __swig_getmethods__["vehIn"] = _AAPI.StructAkiEstadSystem_vehIn_get
    if _newclass:
        vehIn = _swig_property(_AAPI.StructAkiEstadSystem_vehIn_get, _AAPI.StructAkiEstadSystem_vehIn_set)
    __swig_setmethods__["vehsLostIn"] = _AAPI.StructAkiEstadSystem_vehsLostIn_set
    __swig_getmethods__["vehsLostIn"] = _AAPI.StructAkiEstadSystem_vehsLostIn_get
    if _newclass:
        vehsLostIn = _swig_property(_AAPI.StructAkiEstadSystem_vehsLostIn_get, _AAPI.StructAkiEstadSystem_vehsLostIn_set)
    __swig_setmethods__["vehsLostOut"] = _AAPI.StructAkiEstadSystem_vehsLostOut_set
    __swig_getmethods__["vehsLostOut"] = _AAPI.StructAkiEstadSystem_vehsLostOut_get
    if _newclass:
        vehsLostOut = _swig_property(_AAPI.StructAkiEstadSystem_vehsLostOut_get, _AAPI.StructAkiEstadSystem_vehsLostOut_set)
    __swig_setmethods__["missedTurns"] = _AAPI.StructAkiEstadSystem_missedTurns_set
    __swig_getmethods__["missedTurns"] = _AAPI.StructAkiEstadSystem_missedTurns_get
    if _newclass:
        missedTurns = _swig_property(_AAPI.StructAkiEstadSystem_missedTurns_get, _AAPI.StructAkiEstadSystem_missedTurns_set)
    __swig_setmethods__["laneChanges"] = _AAPI.StructAkiEstadSystem_laneChanges_set
    __swig_getmethods__["laneChanges"] = _AAPI.StructAkiEstadSystem_laneChanges_get
    if _newclass:
        laneChanges = _swig_property(_AAPI.StructAkiEstadSystem_laneChanges_get, _AAPI.StructAkiEstadSystem_laneChanges_set)
    __swig_setmethods__["totalLaneChanges"] = _AAPI.StructAkiEstadSystem_totalLaneChanges_set
    __swig_getmethods__["totalLaneChanges"] = _AAPI.StructAkiEstadSystem_totalLaneChanges_get
    if _newclass:
        totalLaneChanges = _swig_property(_AAPI.StructAkiEstadSystem_totalLaneChanges_get, _AAPI.StructAkiEstadSystem_totalLaneChanges_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadSystem()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadSystem
    __del__ = lambda self: None
StructAkiEstadSystem_swigregister = _AAPI.StructAkiEstadSystem_swigregister
StructAkiEstadSystem_swigregister(StructAkiEstadSystem)

class StructAkiEstadSection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadSection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadSection, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadSection_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadSection_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadSection_report_get, _AAPI.StructAkiEstadSection_report_set)
    __swig_setmethods__["Id"] = _AAPI.StructAkiEstadSection_Id_set
    __swig_getmethods__["Id"] = _AAPI.StructAkiEstadSection_Id_get
    if _newclass:
        Id = _swig_property(_AAPI.StructAkiEstadSection_Id_get, _AAPI.StructAkiEstadSection_Id_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadSection_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadSection_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadSection_Flow_get, _AAPI.StructAkiEstadSection_Flow_set)
    __swig_setmethods__["TTa"] = _AAPI.StructAkiEstadSection_TTa_set
    __swig_getmethods__["TTa"] = _AAPI.StructAkiEstadSection_TTa_get
    if _newclass:
        TTa = _swig_property(_AAPI.StructAkiEstadSection_TTa_get, _AAPI.StructAkiEstadSection_TTa_set)
    __swig_setmethods__["TTd"] = _AAPI.StructAkiEstadSection_TTd_set
    __swig_getmethods__["TTd"] = _AAPI.StructAkiEstadSection_TTd_get
    if _newclass:
        TTd = _swig_property(_AAPI.StructAkiEstadSection_TTd_get, _AAPI.StructAkiEstadSection_TTd_set)
    __swig_setmethods__["DTa"] = _AAPI.StructAkiEstadSection_DTa_set
    __swig_getmethods__["DTa"] = _AAPI.StructAkiEstadSection_DTa_get
    if _newclass:
        DTa = _swig_property(_AAPI.StructAkiEstadSection_DTa_get, _AAPI.StructAkiEstadSection_DTa_set)
    __swig_setmethods__["DTd"] = _AAPI.StructAkiEstadSection_DTd_set
    __swig_getmethods__["DTd"] = _AAPI.StructAkiEstadSection_DTd_get
    if _newclass:
        DTd = _swig_property(_AAPI.StructAkiEstadSection_DTd_get, _AAPI.StructAkiEstadSection_DTd_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadSection_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadSection_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadSection_Sa_get, _AAPI.StructAkiEstadSection_Sa_set)
    __swig_setmethods__["Sd"] = _AAPI.StructAkiEstadSection_Sd_set
    __swig_getmethods__["Sd"] = _AAPI.StructAkiEstadSection_Sd_get
    if _newclass:
        Sd = _swig_property(_AAPI.StructAkiEstadSection_Sd_get, _AAPI.StructAkiEstadSection_Sd_set)
    __swig_setmethods__["SHa"] = _AAPI.StructAkiEstadSection_SHa_set
    __swig_getmethods__["SHa"] = _AAPI.StructAkiEstadSection_SHa_get
    if _newclass:
        SHa = _swig_property(_AAPI.StructAkiEstadSection_SHa_get, _AAPI.StructAkiEstadSection_SHa_set)
    __swig_setmethods__["SHd"] = _AAPI.StructAkiEstadSection_SHd_set
    __swig_getmethods__["SHd"] = _AAPI.StructAkiEstadSection_SHd_get
    if _newclass:
        SHd = _swig_property(_AAPI.StructAkiEstadSection_SHd_get, _AAPI.StructAkiEstadSection_SHd_set)
    __swig_setmethods__["Density"] = _AAPI.StructAkiEstadSection_Density_set
    __swig_getmethods__["Density"] = _AAPI.StructAkiEstadSection_Density_get
    if _newclass:
        Density = _swig_property(_AAPI.StructAkiEstadSection_Density_get, _AAPI.StructAkiEstadSection_Density_set)
    __swig_setmethods__["STa"] = _AAPI.StructAkiEstadSection_STa_set
    __swig_getmethods__["STa"] = _AAPI.StructAkiEstadSection_STa_get
    if _newclass:
        STa = _swig_property(_AAPI.StructAkiEstadSection_STa_get, _AAPI.StructAkiEstadSection_STa_set)
    __swig_setmethods__["STd"] = _AAPI.StructAkiEstadSection_STd_set
    __swig_getmethods__["STd"] = _AAPI.StructAkiEstadSection_STd_get
    if _newclass:
        STd = _swig_property(_AAPI.StructAkiEstadSection_STd_get, _AAPI.StructAkiEstadSection_STd_set)
    __swig_setmethods__["NumStops"] = _AAPI.StructAkiEstadSection_NumStops_set
    __swig_getmethods__["NumStops"] = _AAPI.StructAkiEstadSection_NumStops_get
    if _newclass:
        NumStops = _swig_property(_AAPI.StructAkiEstadSection_NumStops_get, _AAPI.StructAkiEstadSection_NumStops_set)
    __swig_setmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadSection_LongQueueAvg_set
    __swig_getmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadSection_LongQueueAvg_get
    if _newclass:
        LongQueueAvg = _swig_property(_AAPI.StructAkiEstadSection_LongQueueAvg_get, _AAPI.StructAkiEstadSection_LongQueueAvg_set)
    __swig_setmethods__["LongQueueMax"] = _AAPI.StructAkiEstadSection_LongQueueMax_set
    __swig_getmethods__["LongQueueMax"] = _AAPI.StructAkiEstadSection_LongQueueMax_get
    if _newclass:
        LongQueueMax = _swig_property(_AAPI.StructAkiEstadSection_LongQueueMax_get, _AAPI.StructAkiEstadSection_LongQueueMax_set)
    __swig_setmethods__["TotalTravel"] = _AAPI.StructAkiEstadSection_TotalTravel_set
    __swig_getmethods__["TotalTravel"] = _AAPI.StructAkiEstadSection_TotalTravel_get
    if _newclass:
        TotalTravel = _swig_property(_AAPI.StructAkiEstadSection_TotalTravel_get, _AAPI.StructAkiEstadSection_TotalTravel_set)
    __swig_setmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadSection_TotalTravelTime_set
    __swig_getmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadSection_TotalTravelTime_get
    if _newclass:
        TotalTravelTime = _swig_property(_AAPI.StructAkiEstadSection_TotalTravelTime_get, _AAPI.StructAkiEstadSection_TotalTravelTime_set)
    __swig_setmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadSection_virtualQueueAvg_set
    __swig_getmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadSection_virtualQueueAvg_get
    if _newclass:
        virtualQueueAvg = _swig_property(_AAPI.StructAkiEstadSection_virtualQueueAvg_get, _AAPI.StructAkiEstadSection_virtualQueueAvg_set)
    __swig_setmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadSection_virtualQueueMax_set
    __swig_getmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadSection_virtualQueueMax_get
    if _newclass:
        virtualQueueMax = _swig_property(_AAPI.StructAkiEstadSection_virtualQueueMax_get, _AAPI.StructAkiEstadSection_virtualQueueMax_set)
    __swig_setmethods__["count"] = _AAPI.StructAkiEstadSection_count_set
    __swig_getmethods__["count"] = _AAPI.StructAkiEstadSection_count_get
    if _newclass:
        count = _swig_property(_AAPI.StructAkiEstadSection_count_get, _AAPI.StructAkiEstadSection_count_set)
    __swig_setmethods__["inputFlow"] = _AAPI.StructAkiEstadSection_inputFlow_set
    __swig_getmethods__["inputFlow"] = _AAPI.StructAkiEstadSection_inputFlow_get
    if _newclass:
        inputFlow = _swig_property(_AAPI.StructAkiEstadSection_inputFlow_get, _AAPI.StructAkiEstadSection_inputFlow_set)
    __swig_setmethods__["inputCount"] = _AAPI.StructAkiEstadSection_inputCount_set
    __swig_getmethods__["inputCount"] = _AAPI.StructAkiEstadSection_inputCount_get
    if _newclass:
        inputCount = _swig_property(_AAPI.StructAkiEstadSection_inputCount_get, _AAPI.StructAkiEstadSection_inputCount_set)
    __swig_setmethods__["flowCapacity"] = _AAPI.StructAkiEstadSection_flowCapacity_set
    __swig_getmethods__["flowCapacity"] = _AAPI.StructAkiEstadSection_flowCapacity_get
    if _newclass:
        flowCapacity = _swig_property(_AAPI.StructAkiEstadSection_flowCapacity_get, _AAPI.StructAkiEstadSection_flowCapacity_set)
    __swig_setmethods__["laneChanges"] = _AAPI.StructAkiEstadSection_laneChanges_set
    __swig_getmethods__["laneChanges"] = _AAPI.StructAkiEstadSection_laneChanges_get
    if _newclass:
        laneChanges = _swig_property(_AAPI.StructAkiEstadSection_laneChanges_get, _AAPI.StructAkiEstadSection_laneChanges_set)
    __swig_setmethods__["totalLaneChanges"] = _AAPI.StructAkiEstadSection_totalLaneChanges_set
    __swig_getmethods__["totalLaneChanges"] = _AAPI.StructAkiEstadSection_totalLaneChanges_get
    if _newclass:
        totalLaneChanges = _swig_property(_AAPI.StructAkiEstadSection_totalLaneChanges_get, _AAPI.StructAkiEstadSection_totalLaneChanges_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadSection()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadSection
    __del__ = lambda self: None
StructAkiEstadSection_swigregister = _AAPI.StructAkiEstadSection_swigregister
StructAkiEstadSection_swigregister(StructAkiEstadSection)

class StructAkiEstadSectionLane(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadSectionLane, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadSectionLane, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadSectionLane_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadSectionLane_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadSectionLane_report_get, _AAPI.StructAkiEstadSectionLane_report_set)
    __swig_setmethods__["IdSection"] = _AAPI.StructAkiEstadSectionLane_IdSection_set
    __swig_getmethods__["IdSection"] = _AAPI.StructAkiEstadSectionLane_IdSection_get
    if _newclass:
        IdSection = _swig_property(_AAPI.StructAkiEstadSectionLane_IdSection_get, _AAPI.StructAkiEstadSectionLane_IdSection_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadSectionLane_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadSectionLane_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadSectionLane_Flow_get, _AAPI.StructAkiEstadSectionLane_Flow_set)
    __swig_setmethods__["TTa"] = _AAPI.StructAkiEstadSectionLane_TTa_set
    __swig_getmethods__["TTa"] = _AAPI.StructAkiEstadSectionLane_TTa_get
    if _newclass:
        TTa = _swig_property(_AAPI.StructAkiEstadSectionLane_TTa_get, _AAPI.StructAkiEstadSectionLane_TTa_set)
    __swig_setmethods__["TTd"] = _AAPI.StructAkiEstadSectionLane_TTd_set
    __swig_getmethods__["TTd"] = _AAPI.StructAkiEstadSectionLane_TTd_get
    if _newclass:
        TTd = _swig_property(_AAPI.StructAkiEstadSectionLane_TTd_get, _AAPI.StructAkiEstadSectionLane_TTd_set)
    __swig_setmethods__["DTa"] = _AAPI.StructAkiEstadSectionLane_DTa_set
    __swig_getmethods__["DTa"] = _AAPI.StructAkiEstadSectionLane_DTa_get
    if _newclass:
        DTa = _swig_property(_AAPI.StructAkiEstadSectionLane_DTa_get, _AAPI.StructAkiEstadSectionLane_DTa_set)
    __swig_setmethods__["DTd"] = _AAPI.StructAkiEstadSectionLane_DTd_set
    __swig_getmethods__["DTd"] = _AAPI.StructAkiEstadSectionLane_DTd_get
    if _newclass:
        DTd = _swig_property(_AAPI.StructAkiEstadSectionLane_DTd_get, _AAPI.StructAkiEstadSectionLane_DTd_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadSectionLane_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadSectionLane_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadSectionLane_Sa_get, _AAPI.StructAkiEstadSectionLane_Sa_set)
    __swig_setmethods__["Sd"] = _AAPI.StructAkiEstadSectionLane_Sd_set
    __swig_getmethods__["Sd"] = _AAPI.StructAkiEstadSectionLane_Sd_get
    if _newclass:
        Sd = _swig_property(_AAPI.StructAkiEstadSectionLane_Sd_get, _AAPI.StructAkiEstadSectionLane_Sd_set)
    __swig_setmethods__["SHa"] = _AAPI.StructAkiEstadSectionLane_SHa_set
    __swig_getmethods__["SHa"] = _AAPI.StructAkiEstadSectionLane_SHa_get
    if _newclass:
        SHa = _swig_property(_AAPI.StructAkiEstadSectionLane_SHa_get, _AAPI.StructAkiEstadSectionLane_SHa_set)
    __swig_setmethods__["SHd"] = _AAPI.StructAkiEstadSectionLane_SHd_set
    __swig_getmethods__["SHd"] = _AAPI.StructAkiEstadSectionLane_SHd_get
    if _newclass:
        SHd = _swig_property(_AAPI.StructAkiEstadSectionLane_SHd_get, _AAPI.StructAkiEstadSectionLane_SHd_set)
    __swig_setmethods__["Density"] = _AAPI.StructAkiEstadSectionLane_Density_set
    __swig_getmethods__["Density"] = _AAPI.StructAkiEstadSectionLane_Density_get
    if _newclass:
        Density = _swig_property(_AAPI.StructAkiEstadSectionLane_Density_get, _AAPI.StructAkiEstadSectionLane_Density_set)
    __swig_setmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadSectionLane_LongQueueAvg_set
    __swig_getmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadSectionLane_LongQueueAvg_get
    if _newclass:
        LongQueueAvg = _swig_property(_AAPI.StructAkiEstadSectionLane_LongQueueAvg_get, _AAPI.StructAkiEstadSectionLane_LongQueueAvg_set)
    __swig_setmethods__["LongQueueMax"] = _AAPI.StructAkiEstadSectionLane_LongQueueMax_set
    __swig_getmethods__["LongQueueMax"] = _AAPI.StructAkiEstadSectionLane_LongQueueMax_get
    if _newclass:
        LongQueueMax = _swig_property(_AAPI.StructAkiEstadSectionLane_LongQueueMax_get, _AAPI.StructAkiEstadSectionLane_LongQueueMax_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadSectionLane()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadSectionLane
    __del__ = lambda self: None
StructAkiEstadSectionLane_swigregister = _AAPI.StructAkiEstadSectionLane_swigregister
StructAkiEstadSectionLane_swigregister(StructAkiEstadSectionLane)

class StructAkiEstadTurning(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadTurning, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadTurning, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadTurning_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadTurning_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadTurning_report_get, _AAPI.StructAkiEstadTurning_report_set)
    __swig_setmethods__["IdSectionFrom"] = _AAPI.StructAkiEstadTurning_IdSectionFrom_set
    __swig_getmethods__["IdSectionFrom"] = _AAPI.StructAkiEstadTurning_IdSectionFrom_get
    if _newclass:
        IdSectionFrom = _swig_property(_AAPI.StructAkiEstadTurning_IdSectionFrom_get, _AAPI.StructAkiEstadTurning_IdSectionFrom_set)
    __swig_setmethods__["IdSectionTo"] = _AAPI.StructAkiEstadTurning_IdSectionTo_set
    __swig_getmethods__["IdSectionTo"] = _AAPI.StructAkiEstadTurning_IdSectionTo_get
    if _newclass:
        IdSectionTo = _swig_property(_AAPI.StructAkiEstadTurning_IdSectionTo_get, _AAPI.StructAkiEstadTurning_IdSectionTo_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadTurning_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadTurning_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadTurning_Flow_get, _AAPI.StructAkiEstadTurning_Flow_set)
    __swig_setmethods__["TTa"] = _AAPI.StructAkiEstadTurning_TTa_set
    __swig_getmethods__["TTa"] = _AAPI.StructAkiEstadTurning_TTa_get
    if _newclass:
        TTa = _swig_property(_AAPI.StructAkiEstadTurning_TTa_get, _AAPI.StructAkiEstadTurning_TTa_set)
    __swig_setmethods__["TTd"] = _AAPI.StructAkiEstadTurning_TTd_set
    __swig_getmethods__["TTd"] = _AAPI.StructAkiEstadTurning_TTd_get
    if _newclass:
        TTd = _swig_property(_AAPI.StructAkiEstadTurning_TTd_get, _AAPI.StructAkiEstadTurning_TTd_set)
    __swig_setmethods__["DTa"] = _AAPI.StructAkiEstadTurning_DTa_set
    __swig_getmethods__["DTa"] = _AAPI.StructAkiEstadTurning_DTa_get
    if _newclass:
        DTa = _swig_property(_AAPI.StructAkiEstadTurning_DTa_get, _AAPI.StructAkiEstadTurning_DTa_set)
    __swig_setmethods__["DTd"] = _AAPI.StructAkiEstadTurning_DTd_set
    __swig_getmethods__["DTd"] = _AAPI.StructAkiEstadTurning_DTd_get
    if _newclass:
        DTd = _swig_property(_AAPI.StructAkiEstadTurning_DTd_get, _AAPI.StructAkiEstadTurning_DTd_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadTurning_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadTurning_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadTurning_Sa_get, _AAPI.StructAkiEstadTurning_Sa_set)
    __swig_setmethods__["Sd"] = _AAPI.StructAkiEstadTurning_Sd_set
    __swig_getmethods__["Sd"] = _AAPI.StructAkiEstadTurning_Sd_get
    if _newclass:
        Sd = _swig_property(_AAPI.StructAkiEstadTurning_Sd_get, _AAPI.StructAkiEstadTurning_Sd_set)
    __swig_setmethods__["SHa"] = _AAPI.StructAkiEstadTurning_SHa_set
    __swig_getmethods__["SHa"] = _AAPI.StructAkiEstadTurning_SHa_get
    if _newclass:
        SHa = _swig_property(_AAPI.StructAkiEstadTurning_SHa_get, _AAPI.StructAkiEstadTurning_SHa_set)
    __swig_setmethods__["SHd"] = _AAPI.StructAkiEstadTurning_SHd_set
    __swig_getmethods__["SHd"] = _AAPI.StructAkiEstadTurning_SHd_get
    if _newclass:
        SHd = _swig_property(_AAPI.StructAkiEstadTurning_SHd_get, _AAPI.StructAkiEstadTurning_SHd_set)
    __swig_setmethods__["STa"] = _AAPI.StructAkiEstadTurning_STa_set
    __swig_getmethods__["STa"] = _AAPI.StructAkiEstadTurning_STa_get
    if _newclass:
        STa = _swig_property(_AAPI.StructAkiEstadTurning_STa_get, _AAPI.StructAkiEstadTurning_STa_set)
    __swig_setmethods__["STd"] = _AAPI.StructAkiEstadTurning_STd_set
    __swig_getmethods__["STd"] = _AAPI.StructAkiEstadTurning_STd_get
    if _newclass:
        STd = _swig_property(_AAPI.StructAkiEstadTurning_STd_get, _AAPI.StructAkiEstadTurning_STd_set)
    __swig_setmethods__["NumStops"] = _AAPI.StructAkiEstadTurning_NumStops_set
    __swig_getmethods__["NumStops"] = _AAPI.StructAkiEstadTurning_NumStops_get
    if _newclass:
        NumStops = _swig_property(_AAPI.StructAkiEstadTurning_NumStops_get, _AAPI.StructAkiEstadTurning_NumStops_set)
    __swig_setmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadTurning_LongQueueAvg_set
    __swig_getmethods__["LongQueueAvg"] = _AAPI.StructAkiEstadTurning_LongQueueAvg_get
    if _newclass:
        LongQueueAvg = _swig_property(_AAPI.StructAkiEstadTurning_LongQueueAvg_get, _AAPI.StructAkiEstadTurning_LongQueueAvg_set)
    __swig_setmethods__["LongQueueMax"] = _AAPI.StructAkiEstadTurning_LongQueueMax_set
    __swig_getmethods__["LongQueueMax"] = _AAPI.StructAkiEstadTurning_LongQueueMax_get
    if _newclass:
        LongQueueMax = _swig_property(_AAPI.StructAkiEstadTurning_LongQueueMax_get, _AAPI.StructAkiEstadTurning_LongQueueMax_set)
    __swig_setmethods__["TotalTravel"] = _AAPI.StructAkiEstadTurning_TotalTravel_set
    __swig_getmethods__["TotalTravel"] = _AAPI.StructAkiEstadTurning_TotalTravel_get
    if _newclass:
        TotalTravel = _swig_property(_AAPI.StructAkiEstadTurning_TotalTravel_get, _AAPI.StructAkiEstadTurning_TotalTravel_set)
    __swig_setmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadTurning_TotalTravelTime_set
    __swig_getmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadTurning_TotalTravelTime_get
    if _newclass:
        TotalTravelTime = _swig_property(_AAPI.StructAkiEstadTurning_TotalTravelTime_get, _AAPI.StructAkiEstadTurning_TotalTravelTime_set)
    __swig_setmethods__["laneChanges"] = _AAPI.StructAkiEstadTurning_laneChanges_set
    __swig_getmethods__["laneChanges"] = _AAPI.StructAkiEstadTurning_laneChanges_get
    if _newclass:
        laneChanges = _swig_property(_AAPI.StructAkiEstadTurning_laneChanges_get, _AAPI.StructAkiEstadTurning_laneChanges_set)
    __swig_setmethods__["totalLaneChanges"] = _AAPI.StructAkiEstadTurning_totalLaneChanges_set
    __swig_getmethods__["totalLaneChanges"] = _AAPI.StructAkiEstadTurning_totalLaneChanges_get
    if _newclass:
        totalLaneChanges = _swig_property(_AAPI.StructAkiEstadTurning_totalLaneChanges_get, _AAPI.StructAkiEstadTurning_totalLaneChanges_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadTurning()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadTurning
    __del__ = lambda self: None
StructAkiEstadTurning_swigregister = _AAPI.StructAkiEstadTurning_swigregister
StructAkiEstadTurning_swigregister(StructAkiEstadTurning)

class StructAkiEstadODPair(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadODPair, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadODPair, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadODPair_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadODPair_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadODPair_report_get, _AAPI.StructAkiEstadODPair_report_set)
    __swig_setmethods__["IdOrigin"] = _AAPI.StructAkiEstadODPair_IdOrigin_set
    __swig_getmethods__["IdOrigin"] = _AAPI.StructAkiEstadODPair_IdOrigin_get
    if _newclass:
        IdOrigin = _swig_property(_AAPI.StructAkiEstadODPair_IdOrigin_get, _AAPI.StructAkiEstadODPair_IdOrigin_set)
    __swig_setmethods__["IdDest"] = _AAPI.StructAkiEstadODPair_IdDest_set
    __swig_getmethods__["IdDest"] = _AAPI.StructAkiEstadODPair_IdDest_get
    if _newclass:
        IdDest = _swig_property(_AAPI.StructAkiEstadODPair_IdDest_get, _AAPI.StructAkiEstadODPair_IdDest_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadODPair_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadODPair_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadODPair_Flow_get, _AAPI.StructAkiEstadODPair_Flow_set)
    __swig_setmethods__["TTa"] = _AAPI.StructAkiEstadODPair_TTa_set
    __swig_getmethods__["TTa"] = _AAPI.StructAkiEstadODPair_TTa_get
    if _newclass:
        TTa = _swig_property(_AAPI.StructAkiEstadODPair_TTa_get, _AAPI.StructAkiEstadODPair_TTa_set)
    __swig_setmethods__["TTd"] = _AAPI.StructAkiEstadODPair_TTd_set
    __swig_getmethods__["TTd"] = _AAPI.StructAkiEstadODPair_TTd_get
    if _newclass:
        TTd = _swig_property(_AAPI.StructAkiEstadODPair_TTd_get, _AAPI.StructAkiEstadODPair_TTd_set)
    __swig_setmethods__["DTa"] = _AAPI.StructAkiEstadODPair_DTa_set
    __swig_getmethods__["DTa"] = _AAPI.StructAkiEstadODPair_DTa_get
    if _newclass:
        DTa = _swig_property(_AAPI.StructAkiEstadODPair_DTa_get, _AAPI.StructAkiEstadODPair_DTa_set)
    __swig_setmethods__["DTd"] = _AAPI.StructAkiEstadODPair_DTd_set
    __swig_getmethods__["DTd"] = _AAPI.StructAkiEstadODPair_DTd_get
    if _newclass:
        DTd = _swig_property(_AAPI.StructAkiEstadODPair_DTd_get, _AAPI.StructAkiEstadODPair_DTd_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadODPair_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadODPair_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadODPair_Sa_get, _AAPI.StructAkiEstadODPair_Sa_set)
    __swig_setmethods__["Sd"] = _AAPI.StructAkiEstadODPair_Sd_set
    __swig_getmethods__["Sd"] = _AAPI.StructAkiEstadODPair_Sd_get
    if _newclass:
        Sd = _swig_property(_AAPI.StructAkiEstadODPair_Sd_get, _AAPI.StructAkiEstadODPair_Sd_set)
    __swig_setmethods__["SHa"] = _AAPI.StructAkiEstadODPair_SHa_set
    __swig_getmethods__["SHa"] = _AAPI.StructAkiEstadODPair_SHa_get
    if _newclass:
        SHa = _swig_property(_AAPI.StructAkiEstadODPair_SHa_get, _AAPI.StructAkiEstadODPair_SHa_set)
    __swig_setmethods__["SHd"] = _AAPI.StructAkiEstadODPair_SHd_set
    __swig_getmethods__["SHd"] = _AAPI.StructAkiEstadODPair_SHd_get
    if _newclass:
        SHd = _swig_property(_AAPI.StructAkiEstadODPair_SHd_get, _AAPI.StructAkiEstadODPair_SHd_set)
    __swig_setmethods__["STa"] = _AAPI.StructAkiEstadODPair_STa_set
    __swig_getmethods__["STa"] = _AAPI.StructAkiEstadODPair_STa_get
    if _newclass:
        STa = _swig_property(_AAPI.StructAkiEstadODPair_STa_get, _AAPI.StructAkiEstadODPair_STa_set)
    __swig_setmethods__["STd"] = _AAPI.StructAkiEstadODPair_STd_set
    __swig_getmethods__["STd"] = _AAPI.StructAkiEstadODPair_STd_get
    if _newclass:
        STd = _swig_property(_AAPI.StructAkiEstadODPair_STd_get, _AAPI.StructAkiEstadODPair_STd_set)
    __swig_setmethods__["NumStops"] = _AAPI.StructAkiEstadODPair_NumStops_set
    __swig_getmethods__["NumStops"] = _AAPI.StructAkiEstadODPair_NumStops_get
    if _newclass:
        NumStops = _swig_property(_AAPI.StructAkiEstadODPair_NumStops_get, _AAPI.StructAkiEstadODPair_NumStops_set)
    __swig_setmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadODPair_virtualQueueAvg_set
    __swig_getmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadODPair_virtualQueueAvg_get
    if _newclass:
        virtualQueueAvg = _swig_property(_AAPI.StructAkiEstadODPair_virtualQueueAvg_get, _AAPI.StructAkiEstadODPair_virtualQueueAvg_set)
    __swig_setmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadODPair_virtualQueueMax_set
    __swig_getmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadODPair_virtualQueueMax_get
    if _newclass:
        virtualQueueMax = _swig_property(_AAPI.StructAkiEstadODPair_virtualQueueMax_get, _AAPI.StructAkiEstadODPair_virtualQueueMax_set)
    __swig_setmethods__["TotalTravel"] = _AAPI.StructAkiEstadODPair_TotalTravel_set
    __swig_getmethods__["TotalTravel"] = _AAPI.StructAkiEstadODPair_TotalTravel_get
    if _newclass:
        TotalTravel = _swig_property(_AAPI.StructAkiEstadODPair_TotalTravel_get, _AAPI.StructAkiEstadODPair_TotalTravel_set)
    __swig_setmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadODPair_TotalTravelTime_set
    __swig_getmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadODPair_TotalTravelTime_get
    if _newclass:
        TotalTravelTime = _swig_property(_AAPI.StructAkiEstadODPair_TotalTravelTime_get, _AAPI.StructAkiEstadODPair_TotalTravelTime_set)
    __swig_setmethods__["vehLost"] = _AAPI.StructAkiEstadODPair_vehLost_set
    __swig_getmethods__["vehLost"] = _AAPI.StructAkiEstadODPair_vehLost_get
    if _newclass:
        vehLost = _swig_property(_AAPI.StructAkiEstadODPair_vehLost_get, _AAPI.StructAkiEstadODPair_vehLost_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadODPair()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadODPair
    __del__ = lambda self: None
StructAkiEstadODPair_swigregister = _AAPI.StructAkiEstadODPair_swigregister
StructAkiEstadODPair_swigregister(StructAkiEstadODPair)

class StructAkiEstadStream(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadStream, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadStream, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadStream_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadStream_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadStream_report_get, _AAPI.StructAkiEstadStream_report_set)
    __swig_setmethods__["Id"] = _AAPI.StructAkiEstadStream_Id_set
    __swig_getmethods__["Id"] = _AAPI.StructAkiEstadStream_Id_get
    if _newclass:
        Id = _swig_property(_AAPI.StructAkiEstadStream_Id_get, _AAPI.StructAkiEstadStream_Id_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadStream_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadStream_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadStream_Flow_get, _AAPI.StructAkiEstadStream_Flow_set)
    __swig_setmethods__["TTa"] = _AAPI.StructAkiEstadStream_TTa_set
    __swig_getmethods__["TTa"] = _AAPI.StructAkiEstadStream_TTa_get
    if _newclass:
        TTa = _swig_property(_AAPI.StructAkiEstadStream_TTa_get, _AAPI.StructAkiEstadStream_TTa_set)
    __swig_setmethods__["TTd"] = _AAPI.StructAkiEstadStream_TTd_set
    __swig_getmethods__["TTd"] = _AAPI.StructAkiEstadStream_TTd_get
    if _newclass:
        TTd = _swig_property(_AAPI.StructAkiEstadStream_TTd_get, _AAPI.StructAkiEstadStream_TTd_set)
    __swig_setmethods__["DTa"] = _AAPI.StructAkiEstadStream_DTa_set
    __swig_getmethods__["DTa"] = _AAPI.StructAkiEstadStream_DTa_get
    if _newclass:
        DTa = _swig_property(_AAPI.StructAkiEstadStream_DTa_get, _AAPI.StructAkiEstadStream_DTa_set)
    __swig_setmethods__["DTd"] = _AAPI.StructAkiEstadStream_DTd_set
    __swig_getmethods__["DTd"] = _AAPI.StructAkiEstadStream_DTd_get
    if _newclass:
        DTd = _swig_property(_AAPI.StructAkiEstadStream_DTd_get, _AAPI.StructAkiEstadStream_DTd_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadStream_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadStream_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadStream_Sa_get, _AAPI.StructAkiEstadStream_Sa_set)
    __swig_setmethods__["Sd"] = _AAPI.StructAkiEstadStream_Sd_set
    __swig_getmethods__["Sd"] = _AAPI.StructAkiEstadStream_Sd_get
    if _newclass:
        Sd = _swig_property(_AAPI.StructAkiEstadStream_Sd_get, _AAPI.StructAkiEstadStream_Sd_set)
    __swig_setmethods__["SHa"] = _AAPI.StructAkiEstadStream_SHa_set
    __swig_getmethods__["SHa"] = _AAPI.StructAkiEstadStream_SHa_get
    if _newclass:
        SHa = _swig_property(_AAPI.StructAkiEstadStream_SHa_get, _AAPI.StructAkiEstadStream_SHa_set)
    __swig_setmethods__["SHd"] = _AAPI.StructAkiEstadStream_SHd_set
    __swig_getmethods__["SHd"] = _AAPI.StructAkiEstadStream_SHd_get
    if _newclass:
        SHd = _swig_property(_AAPI.StructAkiEstadStream_SHd_get, _AAPI.StructAkiEstadStream_SHd_set)
    __swig_setmethods__["STa"] = _AAPI.StructAkiEstadStream_STa_set
    __swig_getmethods__["STa"] = _AAPI.StructAkiEstadStream_STa_get
    if _newclass:
        STa = _swig_property(_AAPI.StructAkiEstadStream_STa_get, _AAPI.StructAkiEstadStream_STa_set)
    __swig_setmethods__["STd"] = _AAPI.StructAkiEstadStream_STd_set
    __swig_getmethods__["STd"] = _AAPI.StructAkiEstadStream_STd_get
    if _newclass:
        STd = _swig_property(_AAPI.StructAkiEstadStream_STd_get, _AAPI.StructAkiEstadStream_STd_set)
    __swig_setmethods__["NumStops"] = _AAPI.StructAkiEstadStream_NumStops_set
    __swig_getmethods__["NumStops"] = _AAPI.StructAkiEstadStream_NumStops_get
    if _newclass:
        NumStops = _swig_property(_AAPI.StructAkiEstadStream_NumStops_get, _AAPI.StructAkiEstadStream_NumStops_set)
    __swig_setmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadStream_virtualQueueAvg_set
    __swig_getmethods__["virtualQueueAvg"] = _AAPI.StructAkiEstadStream_virtualQueueAvg_get
    if _newclass:
        virtualQueueAvg = _swig_property(_AAPI.StructAkiEstadStream_virtualQueueAvg_get, _AAPI.StructAkiEstadStream_virtualQueueAvg_set)
    __swig_setmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadStream_virtualQueueMax_set
    __swig_getmethods__["virtualQueueMax"] = _AAPI.StructAkiEstadStream_virtualQueueMax_get
    if _newclass:
        virtualQueueMax = _swig_property(_AAPI.StructAkiEstadStream_virtualQueueMax_get, _AAPI.StructAkiEstadStream_virtualQueueMax_set)
    __swig_setmethods__["TotalTravel"] = _AAPI.StructAkiEstadStream_TotalTravel_set
    __swig_getmethods__["TotalTravel"] = _AAPI.StructAkiEstadStream_TotalTravel_get
    if _newclass:
        TotalTravel = _swig_property(_AAPI.StructAkiEstadStream_TotalTravel_get, _AAPI.StructAkiEstadStream_TotalTravel_set)
    __swig_setmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadStream_TotalTravelTime_set
    __swig_getmethods__["TotalTravelTime"] = _AAPI.StructAkiEstadStream_TotalTravelTime_get
    if _newclass:
        TotalTravelTime = _swig_property(_AAPI.StructAkiEstadStream_TotalTravelTime_get, _AAPI.StructAkiEstadStream_TotalTravelTime_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadStream()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadStream
    __del__ = lambda self: None
StructAkiEstadStream_swigregister = _AAPI.StructAkiEstadStream_swigregister
StructAkiEstadStream_swigregister(StructAkiEstadStream)

class StructAkiEstadDetector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StructAkiEstadDetector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StructAkiEstadDetector, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StructAkiEstadDetector_report_set
    __swig_getmethods__["report"] = _AAPI.StructAkiEstadDetector_report_get
    if _newclass:
        report = _swig_property(_AAPI.StructAkiEstadDetector_report_get, _AAPI.StructAkiEstadDetector_report_set)
    __swig_setmethods__["Id"] = _AAPI.StructAkiEstadDetector_Id_set
    __swig_getmethods__["Id"] = _AAPI.StructAkiEstadDetector_Id_get
    if _newclass:
        Id = _swig_property(_AAPI.StructAkiEstadDetector_Id_get, _AAPI.StructAkiEstadDetector_Id_set)
    __swig_setmethods__["Flow"] = _AAPI.StructAkiEstadDetector_Flow_set
    __swig_getmethods__["Flow"] = _AAPI.StructAkiEstadDetector_Flow_get
    if _newclass:
        Flow = _swig_property(_AAPI.StructAkiEstadDetector_Flow_get, _AAPI.StructAkiEstadDetector_Flow_set)
    __swig_setmethods__["Sa"] = _AAPI.StructAkiEstadDetector_Sa_set
    __swig_getmethods__["Sa"] = _AAPI.StructAkiEstadDetector_Sa_get
    if _newclass:
        Sa = _swig_property(_AAPI.StructAkiEstadDetector_Sa_get, _AAPI.StructAkiEstadDetector_Sa_set)
    __swig_setmethods__["Density"] = _AAPI.StructAkiEstadDetector_Density_set
    __swig_getmethods__["Density"] = _AAPI.StructAkiEstadDetector_Density_get
    if _newclass:
        Density = _swig_property(_AAPI.StructAkiEstadDetector_Density_get, _AAPI.StructAkiEstadDetector_Density_set)
    __swig_setmethods__["Occupancy"] = _AAPI.StructAkiEstadDetector_Occupancy_set
    __swig_getmethods__["Occupancy"] = _AAPI.StructAkiEstadDetector_Occupancy_get
    if _newclass:
        Occupancy = _swig_property(_AAPI.StructAkiEstadDetector_Occupancy_get, _AAPI.StructAkiEstadDetector_Occupancy_set)
    __swig_setmethods__["Headway"] = _AAPI.StructAkiEstadDetector_Headway_set
    __swig_getmethods__["Headway"] = _AAPI.StructAkiEstadDetector_Headway_get
    if _newclass:
        Headway = _swig_property(_AAPI.StructAkiEstadDetector_Headway_get, _AAPI.StructAkiEstadDetector_Headway_set)

    def __init__(self):
        this = _AAPI.new_StructAkiEstadDetector()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StructAkiEstadDetector
    __del__ = lambda self: None
StructAkiEstadDetector_swigregister = _AAPI.StructAkiEstadDetector_swigregister
StructAkiEstadDetector_swigregister(StructAkiEstadDetector)


def AKIEstGetIntervalStatistics():
    return _AAPI.AKIEstGetIntervalStatistics()
AKIEstGetIntervalStatistics = _AAPI.AKIEstGetIntervalStatistics

def AKIIsGatheringStatistics():
    return _AAPI.AKIIsGatheringStatistics()
AKIIsGatheringStatistics = _AAPI.AKIIsGatheringStatistics

def AKIEstIsNewStatisticsAvailable():
    return _AAPI.AKIEstIsNewStatisticsAvailable()
AKIEstIsNewStatisticsAvailable = _AAPI.AKIEstIsNewStatisticsAvailable

def AKIEstGetGlobalStatisticsSection(aidarc, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSection(aidarc, vehTypePos)
AKIEstGetGlobalStatisticsSection = _AAPI.AKIEstGetGlobalStatisticsSection

def AKIEstGetParcialStatisticsSection(aidarc, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSection(aidarc, timeSta, vehTypePos)
AKIEstGetParcialStatisticsSection = _AAPI.AKIEstGetParcialStatisticsSection

def AKIEstGetGlobalStatisticsSectionLane(aidarc, indexLane, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSectionLane(aidarc, indexLane, vehTypePos)
AKIEstGetGlobalStatisticsSectionLane = _AAPI.AKIEstGetGlobalStatisticsSectionLane

def AKIEstGetParcialStatisticsSectionLane(aidarc, indexLane, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSectionLane(aidarc, indexLane, timeSta, vehTypePos)
AKIEstGetParcialStatisticsSectionLane = _AAPI.AKIEstGetParcialStatisticsSectionLane

def AKIEstGetGlobalStatisticsTurning(aidsectionFrom, aidsectionTo, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsTurning(aidsectionFrom, aidsectionTo, vehTypePos)
AKIEstGetGlobalStatisticsTurning = _AAPI.AKIEstGetGlobalStatisticsTurning

def AKIEstGetParcialStatisticsTurning(aidsectionFrom, aidsectionTo, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsTurning(aidsectionFrom, aidsectionTo, timeSta, vehTypePos)
AKIEstGetParcialStatisticsTurning = _AAPI.AKIEstGetParcialStatisticsTurning

def AKIEstGetGlobalStatisticsLink(aidsectionFrom, aidsectionTo, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsLink(aidsectionFrom, aidsectionTo, vehTypePos)
AKIEstGetGlobalStatisticsLink = _AAPI.AKIEstGetGlobalStatisticsLink

def AKIEstGetParcialStatisticsLink(aidsectionFrom, aidsectionTo, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsLink(aidsectionFrom, aidsectionTo, timeSta, vehTypePos)
AKIEstGetParcialStatisticsLink = _AAPI.AKIEstGetParcialStatisticsLink

def AKIGetTotalLengthSystem():
    return _AAPI.AKIGetTotalLengthSystem()
AKIGetTotalLengthSystem = _AAPI.AKIGetTotalLengthSystem

def AKIEstGetGlobalStatisticsSystem(vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSystem(vehTypePos)
AKIEstGetGlobalStatisticsSystem = _AAPI.AKIEstGetGlobalStatisticsSystem

def AKIEstGetParcialStatisticsSystem(timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSystem(timeSta, vehTypePos)
AKIEstGetParcialStatisticsSystem = _AAPI.AKIEstGetParcialStatisticsSystem

def AKIEstGetGlobalStatisticsODPair(idOrigin, idDestination, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsODPair(idOrigin, idDestination, vehTypePos)
AKIEstGetGlobalStatisticsODPair = _AAPI.AKIEstGetGlobalStatisticsODPair

def AKIEstGetParcialStatisticsODPair(idOrigin, idDestination, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsODPair(idOrigin, idDestination, timeSta, vehTypePos)
AKIEstGetParcialStatisticsODPair = _AAPI.AKIEstGetParcialStatisticsODPair

def AKIEstGetParcialStatisticsStream(aidstream, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsStream(aidstream, timeSta, vehTypePos)
AKIEstGetParcialStatisticsStream = _AAPI.AKIEstGetParcialStatisticsStream

def AKIEstGetGlobalStatisticsStream(aidstream, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsStream(aidstream, vehTypePos)
AKIEstGetGlobalStatisticsStream = _AAPI.AKIEstGetGlobalStatisticsStream

def AKIEstGetInstantVirtualQueueSection(aidarc, vehTypePos):
    return _AAPI.AKIEstGetInstantVirtualQueueSection(aidarc, vehTypePos)
AKIEstGetInstantVirtualQueueSection = _AAPI.AKIEstGetInstantVirtualQueueSection

def AKIEstGetGlobalStatisticsNodeLostVehicles(aidNode, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsNodeLostVehicles(aidNode, vehTypePos)
AKIEstGetGlobalStatisticsNodeLostVehicles = _AAPI.AKIEstGetGlobalStatisticsNodeLostVehicles

def AKIEstGetPartialStatisticsNodeLostVehicles(aidNode, vehTypePos):
    return _AAPI.AKIEstGetPartialStatisticsNodeLostVehicles(aidNode, vehTypePos)
AKIEstGetPartialStatisticsNodeLostVehicles = _AAPI.AKIEstGetPartialStatisticsNodeLostVehicles

def AKIEstGetGlobalStatisticsNodeApproachDelay(aidNode):
    return _AAPI.AKIEstGetGlobalStatisticsNodeApproachDelay(aidNode)
AKIEstGetGlobalStatisticsNodeApproachDelay = _AAPI.AKIEstGetGlobalStatisticsNodeApproachDelay

def AKIEstGetPartialStatisticsNodeApproachDelay(aidNode):
    return _AAPI.AKIEstGetPartialStatisticsNodeApproachDelay(aidNode)
AKIEstGetPartialStatisticsNodeApproachDelay = _AAPI.AKIEstGetPartialStatisticsNodeApproachDelay

def AKIEstGetGlobalStatisticsNodeMissedTurns(aidNode, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsNodeMissedTurns(aidNode, vehTypePos)
AKIEstGetGlobalStatisticsNodeMissedTurns = _AAPI.AKIEstGetGlobalStatisticsNodeMissedTurns

def AKIEstGetPartialStatisticsNodeMissedTurns(aidNode, vehTypePos):
    return _AAPI.AKIEstGetPartialStatisticsNodeMissedTurns(aidNode, vehTypePos)
AKIEstGetPartialStatisticsNodeMissedTurns = _AAPI.AKIEstGetPartialStatisticsNodeMissedTurns

def AKIEstGetGlobalStatisticsSectionFuelCons(aidarc, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSectionFuelCons(aidarc, vehTypePos)
AKIEstGetGlobalStatisticsSectionFuelCons = _AAPI.AKIEstGetGlobalStatisticsSectionFuelCons

def AKIEstGetParcialStatisticsSectionFuelCons(aidarc, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSectionFuelCons(aidarc, timeSta, vehTypePos)
AKIEstGetParcialStatisticsSectionFuelCons = _AAPI.AKIEstGetParcialStatisticsSectionFuelCons

def AKIEstGetGlobalStatisticsTurningFuelCons(aidsectionFrom, aidsectionTo, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsTurningFuelCons(aidsectionFrom, aidsectionTo, vehTypePos)
AKIEstGetGlobalStatisticsTurningFuelCons = _AAPI.AKIEstGetGlobalStatisticsTurningFuelCons

def AKIEstGetParcialStatisticsTurningFuelCons(aidsectionFrom, aidsectionTo, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsTurningFuelCons(aidsectionFrom, aidsectionTo, timeSta, vehTypePos)
AKIEstGetParcialStatisticsTurningFuelCons = _AAPI.AKIEstGetParcialStatisticsTurningFuelCons

def AKIEstGetGlobalStatisticsLinkFuelCons(aidsectionFrom, aidsectionTo, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsLinkFuelCons(aidsectionFrom, aidsectionTo, vehTypePos)
AKIEstGetGlobalStatisticsLinkFuelCons = _AAPI.AKIEstGetGlobalStatisticsLinkFuelCons

def AKIEstGetParcialStatisticsLinkFuelCons(aidsectionFrom, aidsectionTo, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsLinkFuelCons(aidsectionFrom, aidsectionTo, timeSta, vehTypePos)
AKIEstGetParcialStatisticsLinkFuelCons = _AAPI.AKIEstGetParcialStatisticsLinkFuelCons

def AKIEstGetGlobalStatisticsSystemFuelCons(vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSystemFuelCons(vehTypePos)
AKIEstGetGlobalStatisticsSystemFuelCons = _AAPI.AKIEstGetGlobalStatisticsSystemFuelCons

def AKIEstGetParcialStatisticsSystemFuelCons(timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSystemFuelCons(timeSta, vehTypePos)
AKIEstGetParcialStatisticsSystemFuelCons = _AAPI.AKIEstGetParcialStatisticsSystemFuelCons

def AKIEstGetGlobalStatisticsODPairFuelCons(idOrigin, idDestination, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsODPairFuelCons(idOrigin, idDestination, vehTypePos)
AKIEstGetGlobalStatisticsODPairFuelCons = _AAPI.AKIEstGetGlobalStatisticsODPairFuelCons

def AKIEstGetParcialStatisticsODPairFuelCons(idOrigin, idDestination, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsODPairFuelCons(idOrigin, idDestination, timeSta, vehTypePos)
AKIEstGetParcialStatisticsODPairFuelCons = _AAPI.AKIEstGetParcialStatisticsODPairFuelCons

def AKIEstGetParcialStatisticsStreamFuelCons(aidstream, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsStreamFuelCons(aidstream, timeSta, vehTypePos)
AKIEstGetParcialStatisticsStreamFuelCons = _AAPI.AKIEstGetParcialStatisticsStreamFuelCons

def AKIEstGetGlobalStatisticsStreamFuelCons(aidstream, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsStreamFuelCons(aidstream, vehTypePos)
AKIEstGetGlobalStatisticsStreamFuelCons = _AAPI.AKIEstGetGlobalStatisticsStreamFuelCons

def AKIEstGetNbPollutants():
    return _AAPI.AKIEstGetNbPollutants()
AKIEstGetNbPollutants = _AAPI.AKIEstGetNbPollutants

def AKIEstGetPollutantNameA(index):
    return _AAPI.AKIEstGetPollutantNameA(index)
AKIEstGetPollutantNameA = _AAPI.AKIEstGetPollutantNameA

def AKIEstGetGlobalStatisticsSectionPollution(indexPol, aidarc, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSectionPollution(indexPol, aidarc, vehTypePos)
AKIEstGetGlobalStatisticsSectionPollution = _AAPI.AKIEstGetGlobalStatisticsSectionPollution

def AKIEstGetParcialStatisticsSectionPollution(indexPol, aidarc, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSectionPollution(indexPol, aidarc, timeSta, vehTypePos)
AKIEstGetParcialStatisticsSectionPollution = _AAPI.AKIEstGetParcialStatisticsSectionPollution

def AKIEstGetGlobalStatisticsTurningPollution(indexPol, aidsectionFrom, aidsectionTo, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsTurningPollution(indexPol, aidsectionFrom, aidsectionTo, vehTypePos)
AKIEstGetGlobalStatisticsTurningPollution = _AAPI.AKIEstGetGlobalStatisticsTurningPollution

def AKIEstGetParcialStatisticsTurningPollution(indexPol, aidsectionFrom, aidsectionTo, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsTurningPollution(indexPol, aidsectionFrom, aidsectionTo, timeSta, vehTypePos)
AKIEstGetParcialStatisticsTurningPollution = _AAPI.AKIEstGetParcialStatisticsTurningPollution

def AKIEstGetGlobalStatisticsLinkPollution(indexPol, aidsectionFrom, aidsectionTo, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsLinkPollution(indexPol, aidsectionFrom, aidsectionTo, vehTypePos)
AKIEstGetGlobalStatisticsLinkPollution = _AAPI.AKIEstGetGlobalStatisticsLinkPollution

def AKIEstGetParcialStatisticsLinkPollution(indexPol, aidsectionFrom, aidsectionTo, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsLinkPollution(indexPol, aidsectionFrom, aidsectionTo, timeSta, vehTypePos)
AKIEstGetParcialStatisticsLinkPollution = _AAPI.AKIEstGetParcialStatisticsLinkPollution

def AKIEstGetGlobalStatisticsSystemPollution(indexPol, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsSystemPollution(indexPol, vehTypePos)
AKIEstGetGlobalStatisticsSystemPollution = _AAPI.AKIEstGetGlobalStatisticsSystemPollution

def AKIEstGetParcialStatisticsSystemPollution(indexPol, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsSystemPollution(indexPol, timeSta, vehTypePos)
AKIEstGetParcialStatisticsSystemPollution = _AAPI.AKIEstGetParcialStatisticsSystemPollution

def AKIEstGetGlobalStatisticsODPairPollution(indexPol, idOrigin, idDestination, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsODPairPollution(indexPol, idOrigin, idDestination, vehTypePos)
AKIEstGetGlobalStatisticsODPairPollution = _AAPI.AKIEstGetGlobalStatisticsODPairPollution

def AKIEstGetParcialStatisticsODPairPollution(indexPol, idOrigin, idDestination, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsODPairPollution(indexPol, idOrigin, idDestination, timeSta, vehTypePos)
AKIEstGetParcialStatisticsODPairPollution = _AAPI.AKIEstGetParcialStatisticsODPairPollution

def AKIEstGetParcialStatisticsStreamPollution(indexPol, aidstream, timeSta, vehTypePos):
    return _AAPI.AKIEstGetParcialStatisticsStreamPollution(indexPol, aidstream, timeSta, vehTypePos)
AKIEstGetParcialStatisticsStreamPollution = _AAPI.AKIEstGetParcialStatisticsStreamPollution

def AKIEstGetGlobalStatisticsStreamPollution(indexPol, aidstream, vehTypePos):
    return _AAPI.AKIEstGetGlobalStatisticsStreamPollution(indexPol, aidstream, vehTypePos)
AKIEstGetGlobalStatisticsStreamPollution = _AAPI.AKIEstGetGlobalStatisticsStreamPollution

def AKIEstGetGlobalStatisticsDetector(detectorId, vehType):
    return _AAPI.AKIEstGetGlobalStatisticsDetector(detectorId, vehType)
AKIEstGetGlobalStatisticsDetector = _AAPI.AKIEstGetGlobalStatisticsDetector

def AKIEstGetParcialStatisticsDetector(detectorId, time, vehType):
    return _AAPI.AKIEstGetParcialStatisticsDetector(detectorId, time, vehType)
AKIEstGetParcialStatisticsDetector = _AAPI.AKIEstGetParcialStatisticsDetector

def AKIEnterVehTrafficFlow(asection, vehTypePos, tracking):
    return _AAPI.AKIEnterVehTrafficFlow(asection, vehTypePos, tracking)
AKIEnterVehTrafficFlow = _AAPI.AKIEnterVehTrafficFlow

def AKIEnterVehTrafficOD(asection, vehTypePos, idCentroidOrigin, idCentroidDest, tracking):
    return _AAPI.AKIEnterVehTrafficOD(asection, vehTypePos, idCentroidOrigin, idCentroidDest, tracking)
AKIEnterVehTrafficOD = _AAPI.AKIEnterVehTrafficOD

def AKIPutVehTrafficFlow(asection, idLane, vehTypePos, initPosition, initSpeed, nextSection, tracking):
    return _AAPI.AKIPutVehTrafficFlow(asection, idLane, vehTypePos, initPosition, initSpeed, nextSection, tracking)
AKIPutVehTrafficFlow = _AAPI.AKIPutVehTrafficFlow

def AKIPutVehTrafficOD(asection, idLane, vehTypePos, idCentroidOr, idCentroidDest, initPosition, initSpeed, tracking):
    return _AAPI.AKIPutVehTrafficOD(asection, idLane, vehTypePos, idCentroidOr, idCentroidDest, initPosition, initSpeed, tracking)
AKIPutVehTrafficOD = _AAPI.AKIPutVehTrafficOD
class InfArrival(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InfArrival, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InfArrival, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.InfArrival_report_set
    __swig_getmethods__["report"] = _AAPI.InfArrival_report_get
    if _newclass:
        report = _swig_property(_AAPI.InfArrival_report_get, _AAPI.InfArrival_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.InfArrival_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.InfArrival_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.InfArrival_idVeh_get, _AAPI.InfArrival_idVeh_set)
    __swig_setmethods__["inVirtualQueue"] = _AAPI.InfArrival_inVirtualQueue_set
    __swig_getmethods__["inVirtualQueue"] = _AAPI.InfArrival_inVirtualQueue_get
    if _newclass:
        inVirtualQueue = _swig_property(_AAPI.InfArrival_inVirtualQueue_get, _AAPI.InfArrival_inVirtualQueue_set)
    __swig_setmethods__["entranceSection"] = _AAPI.InfArrival_entranceSection_set
    __swig_getmethods__["entranceSection"] = _AAPI.InfArrival_entranceSection_get
    if _newclass:
        entranceSection = _swig_property(_AAPI.InfArrival_entranceSection_get, _AAPI.InfArrival_entranceSection_set)

    def __init__(self):
        this = _AAPI.new_InfArrival()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_InfArrival
    __del__ = lambda self: None
InfArrival_swigregister = _AAPI.InfArrival_swigregister
InfArrival_swigregister(InfArrival)


def AKIGenerateArrivalTrafficFlow(asection, vehTypePos, useVirtualQueue):
    return _AAPI.AKIGenerateArrivalTrafficFlow(asection, vehTypePos, useVirtualQueue)
AKIGenerateArrivalTrafficFlow = _AAPI.AKIGenerateArrivalTrafficFlow

def AKIGenerateArrivalTrafficOD(vehTypePos, idCentroidOrigin, idCentroidDest, useVirtualQueue):
    return _AAPI.AKIGenerateArrivalTrafficOD(vehTypePos, idCentroidOrigin, idCentroidDest, useVirtualQueue)
AKIGenerateArrivalTrafficOD = _AAPI.AKIGenerateArrivalTrafficOD

def AKIVehTrackedModifySpeed(aidVeh, newSpeed):
    return _AAPI.AKIVehTrackedModifySpeed(aidVeh, newSpeed)
AKIVehTrackedModifySpeed = _AAPI.AKIVehTrackedModifySpeed

def AKIVehTrackedModifyLane(aidVeh, nextLane):
    return _AAPI.AKIVehTrackedModifyLane(aidVeh, nextLane)
AKIVehTrackedModifyLane = _AAPI.AKIVehTrackedModifyLane

def AKIVehTrackedModifyNextSection(aidVeh, nextSection):
    return _AAPI.AKIVehTrackedModifyNextSection(aidVeh, nextSection)
AKIVehTrackedModifyNextSection = _AAPI.AKIVehTrackedModifyNextSection

def AKIVehTrackedModifyNextSections(aidVeh, sizeNextSections, nextSections):
    return _AAPI.AKIVehTrackedModifyNextSections(aidVeh, sizeNextSections, nextSections)
AKIVehTrackedModifyNextSections = _AAPI.AKIVehTrackedModifyNextSections

def AKIVehTrackedModifyNextTargetLaneInNextSection(aidVeh, nextSection, nextlane):
    return _AAPI.AKIVehTrackedModifyNextTargetLaneInNextSection(aidVeh, nextSection, nextlane)
AKIVehTrackedModifyNextTargetLaneInNextSection = _AAPI.AKIVehTrackedModifyNextTargetLaneInNextSection

def AKIVehTrackedDelete(aidVeh):
    return _AAPI.AKIVehTrackedDelete(aidVeh)
AKIVehTrackedDelete = _AAPI.AKIVehTrackedDelete

def AKIVehSetAsTracked(aidVeh):
    return _AAPI.AKIVehSetAsTracked(aidVeh)
AKIVehSetAsTracked = _AAPI.AKIVehSetAsTracked

def AKIVehSetAsTrackedbyPointer(vehicle):
    return _AAPI.AKIVehSetAsTrackedbyPointer(vehicle)
AKIVehSetAsTrackedbyPointer = _AAPI.AKIVehSetAsTrackedbyPointer

def AKIVehSetAsNoTracked(aidVeh):
    return _AAPI.AKIVehSetAsNoTracked(aidVeh)
AKIVehSetAsNoTracked = _AAPI.AKIVehSetAsNoTracked

def AKIVehTrackedGetStaticInf(aidVeh):
    return _AAPI.AKIVehTrackedGetStaticInf(aidVeh)
AKIVehTrackedGetStaticInf = _AAPI.AKIVehTrackedGetStaticInf

def AKIVehTrackedGetInf(aidVeh):
    return _AAPI.AKIVehTrackedGetInf(aidVeh)
AKIVehTrackedGetInf = _AAPI.AKIVehTrackedGetInf

def AKIVehTrackedSetStaticInf(aidVeh, staticinfVeh):
    return _AAPI.AKIVehTrackedSetStaticInf(aidVeh, staticinfVeh)
AKIVehTrackedSetStaticInf = _AAPI.AKIVehTrackedSetStaticInf

def AKIVehTrackedGetPos(anIdVeh, nbPos):
    return _AAPI.AKIVehTrackedGetPos(anIdVeh, nbPos)
AKIVehTrackedGetPos = _AAPI.AKIVehTrackedGetPos

def AKIVehTrackedGetPosWithStruct(anIdVeh, nbPos, pinfVehPos):
    return _AAPI.AKIVehTrackedGetPosWithStruct(anIdVeh, nbPos, pinfVehPos)
AKIVehTrackedGetPosWithStruct = _AAPI.AKIVehTrackedGetPosWithStruct

def AKIVehSetVehicleTrackedDynInf(anIdVeh, dynInfVeh):
    return _AAPI.AKIVehSetVehicleTrackedDynInf(anIdVeh, dynInfVeh)
AKIVehSetVehicleTrackedDynInf = _AAPI.AKIVehSetVehicleTrackedDynInf

def AKIVehTrackedGetGraphicInf(aidVeh):
    return _AAPI.AKIVehTrackedGetGraphicInf(aidVeh)
AKIVehTrackedGetGraphicInf = _AAPI.AKIVehTrackedGetGraphicInf

def AKIGetTimeSta():
    return _AAPI.AKIGetTimeSta()
AKIGetTimeSta = _AAPI.AKIGetTimeSta

def AKIGetCurrentSimulationTime():
    return _AAPI.AKIGetCurrentSimulationTime()
AKIGetCurrentSimulationTime = _AAPI.AKIGetCurrentSimulationTime

def AKIGetIniSimTime():
    return _AAPI.AKIGetIniSimTime()
AKIGetIniSimTime = _AAPI.AKIGetIniSimTime

def AKIGetEndSimTime():
    return _AAPI.AKIGetEndSimTime()
AKIGetEndSimTime = _AAPI.AKIGetEndSimTime

def AKIGetDurationTransTime():
    return _AAPI.AKIGetDurationTransTime()
AKIGetDurationTransTime = _AAPI.AKIGetDurationTransTime

def AKIGetSimulationStepTime():
    return _AAPI.AKIGetSimulationStepTime()
AKIGetSimulationStepTime = _AAPI.AKIGetSimulationStepTime

def AKISetEndSimTime(atime):
    return _AAPI.AKISetEndSimTime(atime)
AKISetEndSimTime = _AAPI.AKISetEndSimTime

def AKIGetRandomNumber():
    return _AAPI.AKIGetRandomNumber()
AKIGetRandomNumber = _AAPI.AKIGetRandomNumber

def AKIGenerateIncident(asection, alane, position, length, initime, duration, visibilityDistance, updatIdGroup):
    return _AAPI.AKIGenerateIncident(asection, alane, position, length, initime, duration, visibilityDistance, updatIdGroup)
AKIGenerateIncident = _AAPI.AKIGenerateIncident

def AKIRemoveIncident(asection, alane, position):
    return _AAPI.AKIRemoveIncident(asection, alane, position)
AKIRemoveIncident = _AAPI.AKIRemoveIncident

def AKIRemoveAllIncidentsInSection(asection):
    return _AAPI.AKIRemoveAllIncidentsInSection(asection)
AKIRemoveAllIncidentsInSection = _AAPI.AKIRemoveAllIncidentsInSection

def AKIResetAllIncidents():
    return _AAPI.AKIResetAllIncidents()
AKIResetAllIncidents = _AAPI.AKIResetAllIncidents
class InfPTVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, InfPTVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, InfPTVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.InfPTVeh_report_set
    __swig_getmethods__["report"] = _AAPI.InfPTVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.InfPTVeh_report_get, _AAPI.InfPTVeh_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.InfPTVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.InfPTVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.InfPTVeh_idVeh_get, _AAPI.InfPTVeh_idVeh_set)
    __swig_setmethods__["type"] = _AAPI.InfPTVeh_type_set
    __swig_getmethods__["type"] = _AAPI.InfPTVeh_type_get
    if _newclass:
        type = _swig_property(_AAPI.InfPTVeh_type_get, _AAPI.InfPTVeh_type_set)
    __swig_setmethods__["idSection"] = _AAPI.InfPTVeh_idSection_set
    __swig_getmethods__["idSection"] = _AAPI.InfPTVeh_idSection_get
    if _newclass:
        idSection = _swig_property(_AAPI.InfPTVeh_idSection_get, _AAPI.InfPTVeh_idSection_set)
    __swig_setmethods__["segment"] = _AAPI.InfPTVeh_segment_set
    __swig_getmethods__["segment"] = _AAPI.InfPTVeh_segment_get
    if _newclass:
        segment = _swig_property(_AAPI.InfPTVeh_segment_get, _AAPI.InfPTVeh_segment_set)
    __swig_setmethods__["numberLane"] = _AAPI.InfPTVeh_numberLane_set
    __swig_getmethods__["numberLane"] = _AAPI.InfPTVeh_numberLane_get
    if _newclass:
        numberLane = _swig_property(_AAPI.InfPTVeh_numberLane_get, _AAPI.InfPTVeh_numberLane_set)
    __swig_setmethods__["idJunction"] = _AAPI.InfPTVeh_idJunction_set
    __swig_getmethods__["idJunction"] = _AAPI.InfPTVeh_idJunction_get
    if _newclass:
        idJunction = _swig_property(_AAPI.InfPTVeh_idJunction_get, _AAPI.InfPTVeh_idJunction_set)
    __swig_setmethods__["idSectionFrom"] = _AAPI.InfPTVeh_idSectionFrom_set
    __swig_getmethods__["idSectionFrom"] = _AAPI.InfPTVeh_idSectionFrom_get
    if _newclass:
        idSectionFrom = _swig_property(_AAPI.InfPTVeh_idSectionFrom_get, _AAPI.InfPTVeh_idSectionFrom_set)
    __swig_setmethods__["idLaneFrom"] = _AAPI.InfPTVeh_idLaneFrom_set
    __swig_getmethods__["idLaneFrom"] = _AAPI.InfPTVeh_idLaneFrom_get
    if _newclass:
        idLaneFrom = _swig_property(_AAPI.InfPTVeh_idLaneFrom_get, _AAPI.InfPTVeh_idLaneFrom_set)
    __swig_setmethods__["idSectionTo"] = _AAPI.InfPTVeh_idSectionTo_set
    __swig_getmethods__["idSectionTo"] = _AAPI.InfPTVeh_idSectionTo_get
    if _newclass:
        idSectionTo = _swig_property(_AAPI.InfPTVeh_idSectionTo_get, _AAPI.InfPTVeh_idSectionTo_set)
    __swig_setmethods__["idLaneTo"] = _AAPI.InfPTVeh_idLaneTo_set
    __swig_getmethods__["idLaneTo"] = _AAPI.InfPTVeh_idLaneTo_get
    if _newclass:
        idLaneTo = _swig_property(_AAPI.InfPTVeh_idLaneTo_get, _AAPI.InfPTVeh_idLaneTo_set)
    __swig_setmethods__["CurrentPos"] = _AAPI.InfPTVeh_CurrentPos_set
    __swig_getmethods__["CurrentPos"] = _AAPI.InfPTVeh_CurrentPos_get
    if _newclass:
        CurrentPos = _swig_property(_AAPI.InfPTVeh_CurrentPos_get, _AAPI.InfPTVeh_CurrentPos_set)
    __swig_setmethods__["distance2End"] = _AAPI.InfPTVeh_distance2End_set
    __swig_getmethods__["distance2End"] = _AAPI.InfPTVeh_distance2End_get
    if _newclass:
        distance2End = _swig_property(_AAPI.InfPTVeh_distance2End_get, _AAPI.InfPTVeh_distance2End_set)
    __swig_setmethods__["xCurrentPos"] = _AAPI.InfPTVeh_xCurrentPos_set
    __swig_getmethods__["xCurrentPos"] = _AAPI.InfPTVeh_xCurrentPos_get
    if _newclass:
        xCurrentPos = _swig_property(_AAPI.InfPTVeh_xCurrentPos_get, _AAPI.InfPTVeh_xCurrentPos_set)
    __swig_setmethods__["yCurrentPos"] = _AAPI.InfPTVeh_yCurrentPos_set
    __swig_getmethods__["yCurrentPos"] = _AAPI.InfPTVeh_yCurrentPos_get
    if _newclass:
        yCurrentPos = _swig_property(_AAPI.InfPTVeh_yCurrentPos_get, _AAPI.InfPTVeh_yCurrentPos_set)
    __swig_setmethods__["zCurrentPos"] = _AAPI.InfPTVeh_zCurrentPos_set
    __swig_getmethods__["zCurrentPos"] = _AAPI.InfPTVeh_zCurrentPos_get
    if _newclass:
        zCurrentPos = _swig_property(_AAPI.InfPTVeh_zCurrentPos_get, _AAPI.InfPTVeh_zCurrentPos_set)
    __swig_setmethods__["xCurrentPosBack"] = _AAPI.InfPTVeh_xCurrentPosBack_set
    __swig_getmethods__["xCurrentPosBack"] = _AAPI.InfPTVeh_xCurrentPosBack_get
    if _newclass:
        xCurrentPosBack = _swig_property(_AAPI.InfPTVeh_xCurrentPosBack_get, _AAPI.InfPTVeh_xCurrentPosBack_set)
    __swig_setmethods__["yCurrentPosBack"] = _AAPI.InfPTVeh_yCurrentPosBack_set
    __swig_getmethods__["yCurrentPosBack"] = _AAPI.InfPTVeh_yCurrentPosBack_get
    if _newclass:
        yCurrentPosBack = _swig_property(_AAPI.InfPTVeh_yCurrentPosBack_get, _AAPI.InfPTVeh_yCurrentPosBack_set)
    __swig_setmethods__["zCurrentPosBack"] = _AAPI.InfPTVeh_zCurrentPosBack_set
    __swig_getmethods__["zCurrentPosBack"] = _AAPI.InfPTVeh_zCurrentPosBack_get
    if _newclass:
        zCurrentPosBack = _swig_property(_AAPI.InfPTVeh_zCurrentPosBack_get, _AAPI.InfPTVeh_zCurrentPosBack_set)
    __swig_setmethods__["CurrentSpeed"] = _AAPI.InfPTVeh_CurrentSpeed_set
    __swig_getmethods__["CurrentSpeed"] = _AAPI.InfPTVeh_CurrentSpeed_get
    if _newclass:
        CurrentSpeed = _swig_property(_AAPI.InfPTVeh_CurrentSpeed_get, _AAPI.InfPTVeh_CurrentSpeed_set)
    __swig_setmethods__["PreviousSpeed"] = _AAPI.InfPTVeh_PreviousSpeed_set
    __swig_getmethods__["PreviousSpeed"] = _AAPI.InfPTVeh_PreviousSpeed_get
    if _newclass:
        PreviousSpeed = _swig_property(_AAPI.InfPTVeh_PreviousSpeed_get, _AAPI.InfPTVeh_PreviousSpeed_set)
    __swig_setmethods__["TotalDistance"] = _AAPI.InfPTVeh_TotalDistance_set
    __swig_getmethods__["TotalDistance"] = _AAPI.InfPTVeh_TotalDistance_get
    if _newclass:
        TotalDistance = _swig_property(_AAPI.InfPTVeh_TotalDistance_get, _AAPI.InfPTVeh_TotalDistance_set)
    __swig_setmethods__["SystemGenerationT"] = _AAPI.InfPTVeh_SystemGenerationT_set
    __swig_getmethods__["SystemGenerationT"] = _AAPI.InfPTVeh_SystemGenerationT_get
    if _newclass:
        SystemGenerationT = _swig_property(_AAPI.InfPTVeh_SystemGenerationT_get, _AAPI.InfPTVeh_SystemGenerationT_set)
    __swig_setmethods__["SystemEntranceT"] = _AAPI.InfPTVeh_SystemEntranceT_set
    __swig_getmethods__["SystemEntranceT"] = _AAPI.InfPTVeh_SystemEntranceT_get
    if _newclass:
        SystemEntranceT = _swig_property(_AAPI.InfPTVeh_SystemEntranceT_get, _AAPI.InfPTVeh_SystemEntranceT_set)
    __swig_setmethods__["SectionEntranceT"] = _AAPI.InfPTVeh_SectionEntranceT_set
    __swig_getmethods__["SectionEntranceT"] = _AAPI.InfPTVeh_SectionEntranceT_get
    if _newclass:
        SectionEntranceT = _swig_property(_AAPI.InfPTVeh_SectionEntranceT_get, _AAPI.InfPTVeh_SectionEntranceT_set)
    __swig_setmethods__["CurrentStopTime"] = _AAPI.InfPTVeh_CurrentStopTime_set
    __swig_getmethods__["CurrentStopTime"] = _AAPI.InfPTVeh_CurrentStopTime_get
    if _newclass:
        CurrentStopTime = _swig_property(_AAPI.InfPTVeh_CurrentStopTime_get, _AAPI.InfPTVeh_CurrentStopTime_set)
    __swig_setmethods__["theoricalGenerationTime"] = _AAPI.InfPTVeh_theoricalGenerationTime_set
    __swig_getmethods__["theoricalGenerationTime"] = _AAPI.InfPTVeh_theoricalGenerationTime_get
    if _newclass:
        theoricalGenerationTime = _swig_property(_AAPI.InfPTVeh_theoricalGenerationTime_get, _AAPI.InfPTVeh_theoricalGenerationTime_set)
    __swig_setmethods__["nbStopsDone"] = _AAPI.InfPTVeh_nbStopsDone_set
    __swig_getmethods__["nbStopsDone"] = _AAPI.InfPTVeh_nbStopsDone_get
    if _newclass:
        nbStopsDone = _swig_property(_AAPI.InfPTVeh_nbStopsDone_get, _AAPI.InfPTVeh_nbStopsDone_set)
    __swig_setmethods__["observedLastStopTime"] = _AAPI.InfPTVeh_observedLastStopTime_set
    __swig_getmethods__["observedLastStopTime"] = _AAPI.InfPTVeh_observedLastStopTime_get
    if _newclass:
        observedLastStopTime = _swig_property(_AAPI.InfPTVeh_observedLastStopTime_get, _AAPI.InfPTVeh_observedLastStopTime_set)
    __swig_setmethods__["observedLastInitialStopTime"] = _AAPI.InfPTVeh_observedLastInitialStopTime_set
    __swig_getmethods__["observedLastInitialStopTime"] = _AAPI.InfPTVeh_observedLastInitialStopTime_get
    if _newclass:
        observedLastInitialStopTime = _swig_property(_AAPI.InfPTVeh_observedLastInitialStopTime_get, _AAPI.InfPTVeh_observedLastInitialStopTime_set)
    __swig_setmethods__["nextStopId"] = _AAPI.InfPTVeh_nextStopId_set
    __swig_getmethods__["nextStopId"] = _AAPI.InfPTVeh_nextStopId_get
    if _newclass:
        nextStopId = _swig_property(_AAPI.InfPTVeh_nextStopId_get, _AAPI.InfPTVeh_nextStopId_set)
    __swig_setmethods__["offsetInNextStop"] = _AAPI.InfPTVeh_offsetInNextStop_set
    __swig_getmethods__["offsetInNextStop"] = _AAPI.InfPTVeh_offsetInNextStop_get
    if _newclass:
        offsetInNextStop = _swig_property(_AAPI.InfPTVeh_offsetInNextStop_get, _AAPI.InfPTVeh_offsetInNextStop_set)
    __swig_setmethods__["distanceNextStop"] = _AAPI.InfPTVeh_distanceNextStop_set
    __swig_getmethods__["distanceNextStop"] = _AAPI.InfPTVeh_distanceNextStop_get
    if _newclass:
        distanceNextStop = _swig_property(_AAPI.InfPTVeh_distanceNextStop_get, _AAPI.InfPTVeh_distanceNextStop_set)
    __swig_setmethods__["nextServiceTime"] = _AAPI.InfPTVeh_nextServiceTime_set
    __swig_getmethods__["nextServiceTime"] = _AAPI.InfPTVeh_nextServiceTime_get
    if _newclass:
        nextServiceTime = _swig_property(_AAPI.InfPTVeh_nextServiceTime_get, _AAPI.InfPTVeh_nextServiceTime_set)
    __swig_setmethods__["currentStoppedTimeInBusStop"] = _AAPI.InfPTVeh_currentStoppedTimeInBusStop_set
    __swig_getmethods__["currentStoppedTimeInBusStop"] = _AAPI.InfPTVeh_currentStoppedTimeInBusStop_get
    if _newclass:
        currentStoppedTimeInBusStop = _swig_property(_AAPI.InfPTVeh_currentStoppedTimeInBusStop_get, _AAPI.InfPTVeh_currentStoppedTimeInBusStop_set)
    __swig_setmethods__["currentLoad"] = _AAPI.InfPTVeh_currentLoad_set
    __swig_getmethods__["currentLoad"] = _AAPI.InfPTVeh_currentLoad_get
    if _newclass:
        currentLoad = _swig_property(_AAPI.InfPTVeh_currentLoad_get, _AAPI.InfPTVeh_currentLoad_set)

    def __init__(self):
        this = _AAPI.new_InfPTVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_InfPTVeh
    __del__ = lambda self: None
InfPTVeh_swigregister = _AAPI.InfPTVeh_swigregister
InfPTVeh_swigregister(InfPTVeh)

class StaticInfPTVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StaticInfPTVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StaticInfPTVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.StaticInfPTVeh_report_set
    __swig_getmethods__["report"] = _AAPI.StaticInfPTVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.StaticInfPTVeh_report_get, _AAPI.StaticInfPTVeh_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.StaticInfPTVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.StaticInfPTVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.StaticInfPTVeh_idVeh_get, _AAPI.StaticInfPTVeh_idVeh_set)
    __swig_setmethods__["type"] = _AAPI.StaticInfPTVeh_type_set
    __swig_getmethods__["type"] = _AAPI.StaticInfPTVeh_type_get
    if _newclass:
        type = _swig_property(_AAPI.StaticInfPTVeh_type_get, _AAPI.StaticInfPTVeh_type_set)
    __swig_setmethods__["length"] = _AAPI.StaticInfPTVeh_length_set
    __swig_getmethods__["length"] = _AAPI.StaticInfPTVeh_length_get
    if _newclass:
        length = _swig_property(_AAPI.StaticInfPTVeh_length_get, _AAPI.StaticInfPTVeh_length_set)
    __swig_setmethods__["width"] = _AAPI.StaticInfPTVeh_width_set
    __swig_getmethods__["width"] = _AAPI.StaticInfPTVeh_width_get
    if _newclass:
        width = _swig_property(_AAPI.StaticInfPTVeh_width_get, _AAPI.StaticInfPTVeh_width_set)
    __swig_setmethods__["maxDesiredSpeed"] = _AAPI.StaticInfPTVeh_maxDesiredSpeed_set
    __swig_getmethods__["maxDesiredSpeed"] = _AAPI.StaticInfPTVeh_maxDesiredSpeed_get
    if _newclass:
        maxDesiredSpeed = _swig_property(_AAPI.StaticInfPTVeh_maxDesiredSpeed_get, _AAPI.StaticInfPTVeh_maxDesiredSpeed_set)
    __swig_setmethods__["maxAcceleration"] = _AAPI.StaticInfPTVeh_maxAcceleration_set
    __swig_getmethods__["maxAcceleration"] = _AAPI.StaticInfPTVeh_maxAcceleration_get
    if _newclass:
        maxAcceleration = _swig_property(_AAPI.StaticInfPTVeh_maxAcceleration_get, _AAPI.StaticInfPTVeh_maxAcceleration_set)
    __swig_setmethods__["normalDeceleration"] = _AAPI.StaticInfPTVeh_normalDeceleration_set
    __swig_getmethods__["normalDeceleration"] = _AAPI.StaticInfPTVeh_normalDeceleration_get
    if _newclass:
        normalDeceleration = _swig_property(_AAPI.StaticInfPTVeh_normalDeceleration_get, _AAPI.StaticInfPTVeh_normalDeceleration_set)
    __swig_setmethods__["maxDeceleration"] = _AAPI.StaticInfPTVeh_maxDeceleration_set
    __swig_getmethods__["maxDeceleration"] = _AAPI.StaticInfPTVeh_maxDeceleration_get
    if _newclass:
        maxDeceleration = _swig_property(_AAPI.StaticInfPTVeh_maxDeceleration_get, _AAPI.StaticInfPTVeh_maxDeceleration_set)
    __swig_setmethods__["speedAcceptance"] = _AAPI.StaticInfPTVeh_speedAcceptance_set
    __swig_getmethods__["speedAcceptance"] = _AAPI.StaticInfPTVeh_speedAcceptance_get
    if _newclass:
        speedAcceptance = _swig_property(_AAPI.StaticInfPTVeh_speedAcceptance_get, _AAPI.StaticInfPTVeh_speedAcceptance_set)
    __swig_setmethods__["minDistanceVeh"] = _AAPI.StaticInfPTVeh_minDistanceVeh_set
    __swig_getmethods__["minDistanceVeh"] = _AAPI.StaticInfPTVeh_minDistanceVeh_get
    if _newclass:
        minDistanceVeh = _swig_property(_AAPI.StaticInfPTVeh_minDistanceVeh_get, _AAPI.StaticInfPTVeh_minDistanceVeh_set)
    __swig_setmethods__["giveWayTime"] = _AAPI.StaticInfPTVeh_giveWayTime_set
    __swig_getmethods__["giveWayTime"] = _AAPI.StaticInfPTVeh_giveWayTime_get
    if _newclass:
        giveWayTime = _swig_property(_AAPI.StaticInfPTVeh_giveWayTime_get, _AAPI.StaticInfPTVeh_giveWayTime_set)
    __swig_setmethods__["guidanceAcceptance"] = _AAPI.StaticInfPTVeh_guidanceAcceptance_set
    __swig_getmethods__["guidanceAcceptance"] = _AAPI.StaticInfPTVeh_guidanceAcceptance_get
    if _newclass:
        guidanceAcceptance = _swig_property(_AAPI.StaticInfPTVeh_guidanceAcceptance_get, _AAPI.StaticInfPTVeh_guidanceAcceptance_set)
    __swig_setmethods__["enrouted"] = _AAPI.StaticInfPTVeh_enrouted_set
    __swig_getmethods__["enrouted"] = _AAPI.StaticInfPTVeh_enrouted_get
    if _newclass:
        enrouted = _swig_property(_AAPI.StaticInfPTVeh_enrouted_get, _AAPI.StaticInfPTVeh_enrouted_set)
    __swig_setmethods__["equipped"] = _AAPI.StaticInfPTVeh_equipped_set
    __swig_getmethods__["equipped"] = _AAPI.StaticInfPTVeh_equipped_get
    if _newclass:
        equipped = _swig_property(_AAPI.StaticInfPTVeh_equipped_get, _AAPI.StaticInfPTVeh_equipped_set)
    __swig_setmethods__["tracked"] = _AAPI.StaticInfPTVeh_tracked_set
    __swig_getmethods__["tracked"] = _AAPI.StaticInfPTVeh_tracked_get
    if _newclass:
        tracked = _swig_property(_AAPI.StaticInfPTVeh_tracked_get, _AAPI.StaticInfPTVeh_tracked_set)
    __swig_setmethods__["keepfastLane"] = _AAPI.StaticInfPTVeh_keepfastLane_set
    __swig_getmethods__["keepfastLane"] = _AAPI.StaticInfPTVeh_keepfastLane_get
    if _newclass:
        keepfastLane = _swig_property(_AAPI.StaticInfPTVeh_keepfastLane_get, _AAPI.StaticInfPTVeh_keepfastLane_set)
    __swig_setmethods__["headwayMin"] = _AAPI.StaticInfPTVeh_headwayMin_set
    __swig_getmethods__["headwayMin"] = _AAPI.StaticInfPTVeh_headwayMin_get
    if _newclass:
        headwayMin = _swig_property(_AAPI.StaticInfPTVeh_headwayMin_get, _AAPI.StaticInfPTVeh_headwayMin_set)
    __swig_setmethods__["sensitivityFactor"] = _AAPI.StaticInfPTVeh_sensitivityFactor_set
    __swig_getmethods__["sensitivityFactor"] = _AAPI.StaticInfPTVeh_sensitivityFactor_get
    if _newclass:
        sensitivityFactor = _swig_property(_AAPI.StaticInfPTVeh_sensitivityFactor_get, _AAPI.StaticInfPTVeh_sensitivityFactor_set)
    __swig_setmethods__["reactionTime"] = _AAPI.StaticInfPTVeh_reactionTime_set
    __swig_getmethods__["reactionTime"] = _AAPI.StaticInfPTVeh_reactionTime_get
    if _newclass:
        reactionTime = _swig_property(_AAPI.StaticInfPTVeh_reactionTime_get, _AAPI.StaticInfPTVeh_reactionTime_set)
    __swig_setmethods__["reactionTimeAtStop"] = _AAPI.StaticInfPTVeh_reactionTimeAtStop_set
    __swig_getmethods__["reactionTimeAtStop"] = _AAPI.StaticInfPTVeh_reactionTimeAtStop_get
    if _newclass:
        reactionTimeAtStop = _swig_property(_AAPI.StaticInfPTVeh_reactionTimeAtStop_get, _AAPI.StaticInfPTVeh_reactionTimeAtStop_set)
    __swig_setmethods__["maxCapacity"] = _AAPI.StaticInfPTVeh_maxCapacity_set
    __swig_getmethods__["maxCapacity"] = _AAPI.StaticInfPTVeh_maxCapacity_get
    if _newclass:
        maxCapacity = _swig_property(_AAPI.StaticInfPTVeh_maxCapacity_get, _AAPI.StaticInfPTVeh_maxCapacity_set)
    __swig_setmethods__["idLine"] = _AAPI.StaticInfPTVeh_idLine_set
    __swig_getmethods__["idLine"] = _AAPI.StaticInfPTVeh_idLine_get
    if _newclass:
        idLine = _swig_property(_AAPI.StaticInfPTVeh_idLine_get, _AAPI.StaticInfPTVeh_idLine_set)

    def __init__(self):
        this = _AAPI.new_StaticInfPTVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_StaticInfPTVeh
    __del__ = lambda self: None
StaticInfPTVeh_swigregister = _AAPI.StaticInfPTVeh_swigregister
StaticInfPTVeh_swigregister(StaticInfPTVeh)


def AKIPTGetNumberLines():
    return _AAPI.AKIPTGetNumberLines()
AKIPTGetNumberLines = _AAPI.AKIPTGetNumberLines

def AKIPTGetIdLine(elem):
    return _AAPI.AKIPTGetIdLine(elem)
AKIPTGetIdLine = _AAPI.AKIPTGetIdLine

def AKIPTGetNumberSectionsInLine(lineId):
    return _AAPI.AKIPTGetNumberSectionsInLine(lineId)
AKIPTGetNumberSectionsInLine = _AAPI.AKIPTGetNumberSectionsInLine

def AKIPTGetIdSectionInLine(lineId, elem):
    return _AAPI.AKIPTGetIdSectionInLine(lineId, elem)
AKIPTGetIdSectionInLine = _AAPI.AKIPTGetIdSectionInLine

def AKIPTGetNumberStopsInLine(lineId):
    return _AAPI.AKIPTGetNumberStopsInLine(lineId)
AKIPTGetNumberStopsInLine = _AAPI.AKIPTGetNumberStopsInLine

def AKIPTGetIdStopsInLine(lineId, elem):
    return _AAPI.AKIPTGetIdStopsInLine(lineId, elem)
AKIPTGetIdStopsInLine = _AAPI.AKIPTGetIdStopsInLine

def AKIPTEnterVeh(lineId, vehTypePos, tracked):
    return _AAPI.AKIPTEnterVeh(lineId, vehTypePos, tracked)
AKIPTEnterVeh = _AAPI.AKIPTEnterVeh

def AKIPTVehModifyStopTime(aidVeh, nstop, stopTime):
    return _AAPI.AKIPTVehModifyStopTime(aidVeh, nstop, stopTime)
AKIPTVehModifyStopTime = _AAPI.AKIPTVehModifyStopTime

def AKIPTVehGetStaticInf(aidVeh):
    return _AAPI.AKIPTVehGetStaticInf(aidVeh)
AKIPTVehGetStaticInf = _AAPI.AKIPTVehGetStaticInf

def AKIPTVehSetStaticInf(aidVeh, staticinfVeh):
    return _AAPI.AKIPTVehSetStaticInf(aidVeh, staticinfVeh)
AKIPTVehSetStaticInf = _AAPI.AKIPTVehSetStaticInf

def AKIPTVehGetInf(aidVeh):
    return _AAPI.AKIPTVehGetInf(aidVeh)
AKIPTVehGetInf = _AAPI.AKIPTVehGetInf

def AKIPTGetServiceTimeStopsInLine(aidVeh, nstop):
    return _AAPI.AKIPTGetServiceTimeStopsInLine(aidVeh, nstop)
AKIPTGetServiceTimeStopsInLine = _AAPI.AKIPTGetServiceTimeStopsInLine

def AKIPTVehSetCurrentLoad(aidVeh, currentLoad):
    return _AAPI.AKIPTVehSetCurrentLoad(aidVeh, currentLoad)
AKIPTVehSetCurrentLoad = _AAPI.AKIPTVehSetCurrentLoad

def AKIPrintString(string):
    return _AAPI.AKIPrintString(string)
AKIPrintString = _AAPI.AKIPrintString

def AKIPrintAsUNICODEString(string):
    return _AAPI.AKIPrintAsUNICODEString(string)
AKIPrintAsUNICODEString = _AAPI.AKIPrintAsUNICODEString

def AKIConvertToAsciiString(string, deleteUshortString, anyNonAsciiChar):
    return _AAPI.AKIConvertToAsciiString(string, deleteUshortString, anyNonAsciiChar)
AKIConvertToAsciiString = _AAPI.AKIConvertToAsciiString

def AKIConvertFromAsciiString(ascii):
    return _AAPI.AKIConvertFromAsciiString(ascii)
AKIConvertFromAsciiString = _AAPI.AKIConvertFromAsciiString

def AKIDeleteUNICODEString(string):
    return _AAPI.AKIDeleteUNICODEString(string)
AKIDeleteUNICODEString = _AAPI.AKIDeleteUNICODEString

def AKIDeleteASCIIString(string):
    return _AAPI.AKIDeleteASCIIString(string)
AKIDeleteASCIIString = _AAPI.AKIDeleteASCIIString

def AKIODDemandGetNumSlicesOD(vehTypePos):
    return _AAPI.AKIODDemandGetNumSlicesOD(vehTypePos)
AKIODDemandGetNumSlicesOD = _AAPI.AKIODDemandGetNumSlicesOD

def AKIODDemandGetIniTimeSlice(vehTypePos, slice):
    return _AAPI.AKIODDemandGetIniTimeSlice(vehTypePos, slice)
AKIODDemandGetIniTimeSlice = _AAPI.AKIODDemandGetIniTimeSlice

def AKIODDemandGetEndTimeSlice(vehTypePos, slice):
    return _AAPI.AKIODDemandGetEndTimeSlice(vehTypePos, slice)
AKIODDemandGetEndTimeSlice = _AAPI.AKIODDemandGetEndTimeSlice

def AKIODDemandGetDemandODPair(origen, desti, vehTypePos, numslice):
    return _AAPI.AKIODDemandGetDemandODPair(origen, desti, vehTypePos, numslice)
AKIODDemandGetDemandODPair = _AAPI.AKIODDemandGetDemandODPair

def AKIODDemandSetDemandODPair(origen, desti, vehTypePos, numslice, anewdemand):
    return _AAPI.AKIODDemandSetDemandODPair(origen, desti, vehTypePos, numslice, anewdemand)
AKIODDemandSetDemandODPair = _AAPI.AKIODDemandSetDemandODPair

def AKIStateDemandGetNumSlices(vehTypePos):
    return _AAPI.AKIStateDemandGetNumSlices(vehTypePos)
AKIStateDemandGetNumSlices = _AAPI.AKIStateDemandGetNumSlices

def AKIStateDemandGetIniTimeSlice(vehTypePos, numSlice):
    return _AAPI.AKIStateDemandGetIniTimeSlice(vehTypePos, numSlice)
AKIStateDemandGetIniTimeSlice = _AAPI.AKIStateDemandGetIniTimeSlice

def AKIStateDemandGetEndTimeSlice(vehTypePos, numslice):
    return _AAPI.AKIStateDemandGetEndTimeSlice(vehTypePos, numslice)
AKIStateDemandGetEndTimeSlice = _AAPI.AKIStateDemandGetEndTimeSlice

def AKIStateDemandGetDemandSection(idSection, vehTypePos, numSlice):
    return _AAPI.AKIStateDemandGetDemandSection(idSection, vehTypePos, numSlice)
AKIStateDemandGetDemandSection = _AAPI.AKIStateDemandGetDemandSection

def AKIStateDemandSetDemandSection(idSection, vehTypePos, numSlice, newFlow):
    return _AAPI.AKIStateDemandSetDemandSection(idSection, vehTypePos, numSlice, newFlow)
AKIStateDemandSetDemandSection = _AAPI.AKIStateDemandSetDemandSection

def AKIPastCostAreCostsPerVehicleType():
    return _AAPI.AKIPastCostAreCostsPerVehicleType()
AKIPastCostAreCostsPerVehicleType = _AAPI.AKIPastCostAreCostsPerVehicleType

def AKIPastCostGetIniTimeReaded():
    return _AAPI.AKIPastCostGetIniTimeReaded()
AKIPastCostGetIniTimeReaded = _AAPI.AKIPastCostGetIniTimeReaded

def AKIPastCostGetIntervalReaded():
    return _AAPI.AKIPastCostGetIntervalReaded()
AKIPastCostGetIntervalReaded = _AAPI.AKIPastCostGetIntervalReaded

def AKIPastCostGetNbIntervalsReaded():
    return _AAPI.AKIPastCostGetNbIntervalsReaded()
AKIPastCostGetNbIntervalsReaded = _AAPI.AKIPastCostGetNbIntervalsReaded

def AKIPastCostSetPastCost(sectorig, sectdest, aTime, vehTypeId, acost, aocost):
    return _AAPI.AKIPastCostSetPastCost(sectorig, sectdest, aTime, vehTypeId, acost, aocost)
AKIPastCostSetPastCost = _AAPI.AKIPastCostSetPastCost

def AKIPastCostGetPastCost(sectorig, sectdest, aTime, vehTypeId):
    return _AAPI.AKIPastCostGetPastCost(sectorig, sectdest, aTime, vehTypeId)
AKIPastCostGetPastCost = _AAPI.AKIPastCostGetPastCost

def AKIPastCostGetPastOutputCost(sectorig, sectdest, aTime, vehTypeId):
    return _AAPI.AKIPastCostGetPastOutputCost(sectorig, sectdest, aTime, vehTypeId)
AKIPastCostGetPastOutputCost = _AAPI.AKIPastCostGetPastOutputCost

def AKIFleetGetNbFleet():
    return _AAPI.AKIFleetGetNbFleet()
AKIFleetGetNbFleet = _AAPI.AKIFleetGetNbFleet

def AKIFleetGetFleetId(index):
    return _AAPI.AKIFleetGetFleetId(index)
AKIFleetGetFleetId = _AAPI.AKIFleetGetFleetId

def AKIFleetGetNbFleetStops():
    return _AAPI.AKIFleetGetNbFleetStops()
AKIFleetGetNbFleetStops = _AAPI.AKIFleetGetNbFleetStops

def AKIFleetGetFleetStopId(index):
    return _AAPI.AKIFleetGetFleetStopId(index)
AKIFleetGetFleetStopId = _AAPI.AKIFleetGetFleetStopId

def AKIFleetGetNbFleetVehicles(idFleet):
    return _AAPI.AKIFleetGetNbFleetVehicles(idFleet)
AKIFleetGetNbFleetVehicles = _AAPI.AKIFleetGetNbFleetVehicles

def AKIFleetGetFleetVehicleName(idFleet, index):
    return _AAPI.AKIFleetGetFleetVehicleName(idFleet, index)
AKIFleetGetFleetVehicleName = _AAPI.AKIFleetGetFleetVehicleName

def AKIFleetAddFleet(id):
    return _AAPI.AKIFleetAddFleet(id)
AKIFleetAddFleet = _AAPI.AKIFleetAddFleet

def AKIFleetAddFleetStop(id, type, idSect, aidLane, adistance, alenght, aMaxVeh, openTW, closeTW, realStop):
    return _AAPI.AKIFleetAddFleetStop(id, type, idSect, aidLane, adistance, alenght, aMaxVeh, openTW, closeTW, realStop)
AKIFleetAddFleetStop = _AAPI.AKIFleetAddFleetStop

def AKIFleetModifyFleetStopTimeWindow(id, openTW, closeTW):
    return _AAPI.AKIFleetModifyFleetStopTimeWindow(id, openTW, closeTW)
AKIFleetModifyFleetStopTimeWindow = _AAPI.AKIFleetModifyFleetStopTimeWindow

def AKIFleetAddFleetAssignment(idFleet, nameFleetVeh, vehTypePos, departureTime, deviation):
    return _AAPI.AKIFleetAddFleetAssignment(idFleet, nameFleetVeh, vehTypePos, departureTime, deviation)
AKIFleetAddFleetAssignment = _AAPI.AKIFleetAddFleetAssignment

def AKIFleetAddFleetAssignmentRoute(idFleet, nameFleetVeh, idRoute, nbsect, idsect):
    return _AAPI.AKIFleetAddFleetAssignmentRoute(idFleet, nameFleetVeh, idRoute, nbsect, idsect)
AKIFleetAddFleetAssignmentRoute = _AAPI.AKIFleetAddFleetAssignmentRoute

def AKIFleetAddFleetAssignmentStop(idFleet, nameFleetVeh, nbstops, idstops, avgtime, devtime):
    return _AAPI.AKIFleetAddFleetAssignmentStop(idFleet, nameFleetVeh, nbstops, idstops, avgtime, devtime)
AKIFleetAddFleetAssignmentStop = _AAPI.AKIFleetAddFleetAssignmentStop

def AKIFleetIsFleetVehicleGenerated(idFleet, nameFleetVeh):
    return _AAPI.AKIFleetIsFleetVehicleGenerated(idFleet, nameFleetVeh)
AKIFleetIsFleetVehicleGenerated = _AAPI.AKIFleetIsFleetVehicleGenerated

def AKIFleetGetCurrentSectionIdFleetVehicle(idFleet, nameFleetVeh):
    return _AAPI.AKIFleetGetCurrentSectionIdFleetVehicle(idFleet, nameFleetVeh)
AKIFleetGetCurrentSectionIdFleetVehicle = _AAPI.AKIFleetGetCurrentSectionIdFleetVehicle

def AKIFleetModifyRouteStopsFleetVehicle(idFleet, nameFleetVeh, nbsect, idsect, nbstops, idstops, avgtime, devtime):
    return _AAPI.AKIFleetModifyRouteStopsFleetVehicle(idFleet, nameFleetVeh, nbsect, idsect, nbstops, idstops, avgtime, devtime)
AKIFleetModifyRouteStopsFleetVehicle = _AAPI.AKIFleetModifyRouteStopsFleetVehicle

def AKIFleetGetNbStopsFleetVeh(idFleet, nameFleetVeh):
    return _AAPI.AKIFleetGetNbStopsFleetVeh(idFleet, nameFleetVeh)
AKIFleetGetNbStopsFleetVeh = _AAPI.AKIFleetGetNbStopsFleetVeh

def AKIFleetChangeStopTimeFleetVeh(idFleet, nameFleetVeh, indexStop, serviceTime):
    return _AAPI.AKIFleetChangeStopTimeFleetVeh(idFleet, nameFleetVeh, indexStop, serviceTime)
AKIFleetChangeStopTimeFleetVeh = _AAPI.AKIFleetChangeStopTimeFleetVeh

def AKIFleetGetNbStopsDoneFleetVeh(idFleet, nameFleetVeh):
    return _AAPI.AKIFleetGetNbStopsDoneFleetVeh(idFleet, nameFleetVeh)
AKIFleetGetNbStopsDoneFleetVeh = _AAPI.AKIFleetGetNbStopsDoneFleetVeh

def AKIFleetIsDoingStopFleetVeh(idFleet, nameFleetVeh):
    return _AAPI.AKIFleetIsDoingStopFleetVeh(idFleet, nameFleetVeh)
AKIFleetIsDoingStopFleetVeh = _AAPI.AKIFleetIsDoingStopFleetVeh

def AKIFleetGetStopTimeFleetVeh(idFleet, nameFleetVeh, indexStop):
    return _AAPI.AKIFleetGetStopTimeFleetVeh(idFleet, nameFleetVeh, indexStop)
AKIFleetGetStopTimeFleetVeh = _AAPI.AKIFleetGetStopTimeFleetVeh
class PathInfVeh(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PathInfVeh, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PathInfVeh, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.PathInfVeh_report_set
    __swig_getmethods__["report"] = _AAPI.PathInfVeh_report_get
    if _newclass:
        report = _swig_property(_AAPI.PathInfVeh_report_get, _AAPI.PathInfVeh_report_set)
    __swig_setmethods__["idVeh"] = _AAPI.PathInfVeh_idVeh_set
    __swig_getmethods__["idVeh"] = _AAPI.PathInfVeh_idVeh_get
    if _newclass:
        idVeh = _swig_property(_AAPI.PathInfVeh_idVeh_get, _AAPI.PathInfVeh_idVeh_set)
    __swig_setmethods__["type"] = _AAPI.PathInfVeh_type_set
    __swig_getmethods__["type"] = _AAPI.PathInfVeh_type_get
    if _newclass:
        type = _swig_property(_AAPI.PathInfVeh_type_get, _AAPI.PathInfVeh_type_set)
    __swig_setmethods__["entranceSectionId"] = _AAPI.PathInfVeh_entranceSectionId_set
    __swig_getmethods__["entranceSectionId"] = _AAPI.PathInfVeh_entranceSectionId_get
    if _newclass:
        entranceSectionId = _swig_property(_AAPI.PathInfVeh_entranceSectionId_get, _AAPI.PathInfVeh_entranceSectionId_set)
    __swig_setmethods__["numSectionsInPath"] = _AAPI.PathInfVeh_numSectionsInPath_set
    __swig_getmethods__["numSectionsInPath"] = _AAPI.PathInfVeh_numSectionsInPath_get
    if _newclass:
        numSectionsInPath = _swig_property(_AAPI.PathInfVeh_numSectionsInPath_get, _AAPI.PathInfVeh_numSectionsInPath_set)
    __swig_setmethods__["totalDistance"] = _AAPI.PathInfVeh_totalDistance_set
    __swig_getmethods__["totalDistance"] = _AAPI.PathInfVeh_totalDistance_get
    if _newclass:
        totalDistance = _swig_property(_AAPI.PathInfVeh_totalDistance_get, _AAPI.PathInfVeh_totalDistance_set)

    def __init__(self):
        this = _AAPI.new_PathInfVeh()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_PathInfVeh
    __del__ = lambda self: None
PathInfVeh_swigregister = _AAPI.PathInfVeh_swigregister
PathInfVeh_swigregister(PathInfVeh)


def AKIVehInfPath(idveh):
    return _AAPI.AKIVehInfPath(idveh)
AKIVehInfPath = _AAPI.AKIVehInfPath

def AKIVehInfPathSection(aidSec, indexveh):
    return _AAPI.AKIVehInfPathSection(aidSec, indexveh)
AKIVehInfPathSection = _AAPI.AKIVehInfPathSection

def AKIVehInfPathGetNextSection(idveh, fromsection):
    return _AAPI.AKIVehInfPathGetNextSection(idveh, fromsection)
AKIVehInfPathGetNextSection = _AAPI.AKIVehInfPathGetNextSection

def AKIVehInfPathGetNextSectionInSection(aidSec, indexveh, fromsection):
    return _AAPI.AKIVehInfPathGetNextSectionInSection(aidSec, indexveh, fromsection)
AKIVehInfPathGetNextSectionInSection = _AAPI.AKIVehInfPathGetNextSectionInSection

def AKIGeneratePedestrians(fromCentroid, toCentroid, idRoute, nbPedestrians):
    return _AAPI.AKIGeneratePedestrians(fromCentroid, toCentroid, idRoute, nbPedestrians)
AKIGeneratePedestrians = _AAPI.AKIGeneratePedestrians

def AKIGeneratePedestriansInTime(fromCentroid, toCentroid, idRoute, nbPedestrians, timeInterval):
    return _AAPI.AKIGeneratePedestriansInTime(fromCentroid, toCentroid, idRoute, nbPedestrians, timeInterval)
AKIGeneratePedestriansInTime = _AAPI.AKIGeneratePedestriansInTime

def AKIGeneratePedestriansDefaultRoutes(fromCentroid, toCentroid, nbPedestrians):
    return _AAPI.AKIGeneratePedestriansDefaultRoutes(fromCentroid, toCentroid, nbPedestrians)
AKIGeneratePedestriansDefaultRoutes = _AAPI.AKIGeneratePedestriansDefaultRoutes

def AKIGeneratePedestriansDefaultRoutesInTime(fromCentroid, toCentroid, nbPedestrians, timeInterval):
    return _AAPI.AKIGeneratePedestriansDefaultRoutesInTime(fromCentroid, toCentroid, nbPedestrians, timeInterval)
AKIGeneratePedestriansDefaultRoutesInTime = _AAPI.AKIGeneratePedestriansDefaultRoutesInTime
RED = _AAPI.RED
GREEN = _AAPI.GREEN
YELLOW = _AAPI.YELLOW
NONE = _AAPI.NONE
METVERDE = _AAPI.METVERDE
METFLUJO = _AAPI.METFLUJO
METDELAY = _AAPI.METDELAY
METFLUJOALINEA = _AAPI.METFLUJOALINEA
METVERDEPERLANE = _AAPI.METVERDEPERLANE

def ECIGetNumberJunctions():
    return _AAPI.ECIGetNumberJunctions()
ECIGetNumberJunctions = _AAPI.ECIGetNumberJunctions

def ECIGetJunctionId(numelem):
    return _AAPI.ECIGetJunctionId(numelem)
ECIGetJunctionId = _AAPI.ECIGetJunctionId

def ECIGetJunctionName(idJunction):
    return _AAPI.ECIGetJunctionName(idJunction)
ECIGetJunctionName = _AAPI.ECIGetJunctionName

def ECIGetNumberSignalGroups(idJunction):
    return _AAPI.ECIGetNumberSignalGroups(idJunction)
ECIGetNumberSignalGroups = _AAPI.ECIGetNumberSignalGroups

def ECIGetLogicalNameofSignalGroup(ajunction, asignalgroup):
    return _AAPI.ECIGetLogicalNameofSignalGroup(ajunction, asignalgroup)
ECIGetLogicalNameofSignalGroup = _AAPI.ECIGetLogicalNameofSignalGroup

def ECIGetExternalIdofSignalGroup(ajunction, asignalgroup):
    return _AAPI.ECIGetExternalIdofSignalGroup(ajunction, asignalgroup)
ECIGetExternalIdofSignalGroup = _AAPI.ECIGetExternalIdofSignalGroup

def ECIGetJunctionIdFromExternalId(externalId):
    return _AAPI.ECIGetJunctionIdFromExternalId(externalId)
ECIGetJunctionIdFromExternalId = _AAPI.ECIGetJunctionIdFromExternalId

def ECIGetNumberTurningsofSignalGroup(ajunction, asignalgroup):
    return _AAPI.ECIGetNumberTurningsofSignalGroup(ajunction, asignalgroup)
ECIGetNumberTurningsofSignalGroup = _AAPI.ECIGetNumberTurningsofSignalGroup

def ECIGetFromToofTurningofSignalGroup(ajunction, asignalgroup, indexTuring, arg4, to):
    return _AAPI.ECIGetFromToofTurningofSignalGroup(ajunction, asignalgroup, indexTuring, arg4, to)
ECIGetFromToofTurningofSignalGroup = _AAPI.ECIGetFromToofTurningofSignalGroup

def ECIGetSignalGroupGreenDuration(idJunction, signalPos, timeSta):
    return _AAPI.ECIGetSignalGroupGreenDuration(idJunction, signalPos, timeSta)
ECIGetSignalGroupGreenDuration = _AAPI.ECIGetSignalGroupGreenDuration

def ECIGetSignalGroupYellowDuration(idJunction, signalPos, timeSta):
    return _AAPI.ECIGetSignalGroupYellowDuration(idJunction, signalPos, timeSta)
ECIGetSignalGroupYellowDuration = _AAPI.ECIGetSignalGroupYellowDuration

def ECIGetSignalGroupRedDuration(idJunction, signalPos, timeSta):
    return _AAPI.ECIGetSignalGroupRedDuration(idJunction, signalPos, timeSta)
ECIGetSignalGroupRedDuration = _AAPI.ECIGetSignalGroupRedDuration

def ECIGetCurrentPhase(idJunction):
    return _AAPI.ECIGetCurrentPhase(idJunction)
ECIGetCurrentPhase = _AAPI.ECIGetCurrentPhase

def ECIGetCurrentPhaseInRing(idJunction, ring):
    return _AAPI.ECIGetCurrentPhaseInRing(idJunction, ring)
ECIGetCurrentPhaseInRing = _AAPI.ECIGetCurrentPhaseInRing

def ECIGetNumberPhases(idJunction):
    return _AAPI.ECIGetNumberPhases(idJunction)
ECIGetNumberPhases = _AAPI.ECIGetNumberPhases

def ECIGetNumberPhasesInRing(idJunction, ring):
    return _AAPI.ECIGetNumberPhasesInRing(idJunction, ring)
ECIGetNumberPhasesInRing = _AAPI.ECIGetNumberPhasesInRing

def ECIGetStartingTimePhase(idJunction):
    return _AAPI.ECIGetStartingTimePhase(idJunction)
ECIGetStartingTimePhase = _AAPI.ECIGetStartingTimePhase

def ECIGetStartingTimePhaseInRing(idJunction, ring):
    return _AAPI.ECIGetStartingTimePhaseInRing(idJunction, ring)
ECIGetStartingTimePhaseInRing = _AAPI.ECIGetStartingTimePhaseInRing

def ECIGetDurationsPhase(idJunction, idPhase, timeSta, dur, max, min):
    return _AAPI.ECIGetDurationsPhase(idJunction, idPhase, timeSta, dur, max, min)
ECIGetDurationsPhase = _AAPI.ECIGetDurationsPhase

def ECIGetYellowTimePhase(idJunction, idPhase, timeSta, yellow):
    return _AAPI.ECIGetYellowTimePhase(idJunction, idPhase, timeSta, yellow)
ECIGetYellowTimePhase = _AAPI.ECIGetYellowTimePhase

def ECISetYellowTimePhase(idJunction, idPhase, timeSta, yellow):
    return _AAPI.ECISetYellowTimePhase(idJunction, idPhase, timeSta, yellow)
ECISetYellowTimePhase = _AAPI.ECISetYellowTimePhase

def ECIIsAnInterPhase(idJunction, idPhase, timeSta):
    return _AAPI.ECIIsAnInterPhase(idJunction, idPhase, timeSta)
ECIIsAnInterPhase = _AAPI.ECIIsAnInterPhase

def ECIDisableBusPreemptionNode(ajunction):
    return _AAPI.ECIDisableBusPreemptionNode(ajunction)
ECIDisableBusPreemptionNode = _AAPI.ECIDisableBusPreemptionNode

def ECIEnableBusPreemptionNode(ajunction):
    return _AAPI.ECIEnableBusPreemptionNode(ajunction)
ECIEnableBusPreemptionNode = _AAPI.ECIEnableBusPreemptionNode

def ECIIsBusPreemptionNodeEnabled(idJunction):
    return _AAPI.ECIIsBusPreemptionNodeEnabled(idJunction)
ECIIsBusPreemptionNodeEnabled = _AAPI.ECIIsBusPreemptionNodeEnabled

def ECIGetNbPreemptionSets(idJunction, timeSta):
    return _AAPI.ECIGetNbPreemptionSets(idJunction, timeSta)
ECIGetNbPreemptionSets = _AAPI.ECIGetNbPreemptionSets

def ECIGetPreemptionSetParameters(idJunction, timeSta, index, delay, minDwell, reserve, inhibit, maxDwell, type):
    return _AAPI.ECIGetPreemptionSetParameters(idJunction, timeSta, index, delay, minDwell, reserve, inhibit, maxDwell, type)
ECIGetPreemptionSetParameters = _AAPI.ECIGetPreemptionSetParameters

def ECIGetPreemptionSetNbLines(idJunction, timeSta, index):
    return _AAPI.ECIGetPreemptionSetNbLines(idJunction, timeSta, index)
ECIGetPreemptionSetNbLines = _AAPI.ECIGetPreemptionSetNbLines

def ECIGetPreemptionSetLines(idJunction, timeSta, index, nblines, lines):
    return _AAPI.ECIGetPreemptionSetLines(idJunction, timeSta, index, nblines, lines)
ECIGetPreemptionSetLines = _AAPI.ECIGetPreemptionSetLines

def ECIGetPreemptionSetNbPhases(idJunction, timeSta):
    return _AAPI.ECIGetPreemptionSetNbPhases(idJunction, timeSta)
ECIGetPreemptionSetNbPhases = _AAPI.ECIGetPreemptionSetNbPhases

def ECIGetPreemptionSetPhases(idJunction, timeSta, index, nbPhases, phases):
    return _AAPI.ECIGetPreemptionSetPhases(idJunction, timeSta, index, nbPhases, phases)
ECIGetPreemptionSetPhases = _AAPI.ECIGetPreemptionSetPhases

def ECIGetPreemptionSetNbRequestDetectors(idJunction, timeSta, index):
    return _AAPI.ECIGetPreemptionSetNbRequestDetectors(idJunction, timeSta, index)
ECIGetPreemptionSetNbRequestDetectors = _AAPI.ECIGetPreemptionSetNbRequestDetectors

def ECIGetPreemptionSetRequestDetectors(idJunction, timeSta, index, nbDetectors, detectors):
    return _AAPI.ECIGetPreemptionSetRequestDetectors(idJunction, timeSta, index, nbDetectors, detectors)
ECIGetPreemptionSetRequestDetectors = _AAPI.ECIGetPreemptionSetRequestDetectors

def ECIGetPreemptionSetNbEndDetectors(idJunction, timeSta, index):
    return _AAPI.ECIGetPreemptionSetNbEndDetectors(idJunction, timeSta, index)
ECIGetPreemptionSetNbEndDetectors = _AAPI.ECIGetPreemptionSetNbEndDetectors

def ECIGetPreemptionSetEndDetectors(idJunction, timeSta, index, nbDetectors, detectors):
    return _AAPI.ECIGetPreemptionSetEndDetectors(idJunction, timeSta, index, nbDetectors, detectors)
ECIGetPreemptionSetEndDetectors = _AAPI.ECIGetPreemptionSetEndDetectors

def ECIGetNbSignalGroupsPhaseofJunction(idJunction, aidphase, timeSta):
    return _AAPI.ECIGetNbSignalGroupsPhaseofJunction(idJunction, aidphase, timeSta)
ECIGetNbSignalGroupsPhaseofJunction = _AAPI.ECIGetNbSignalGroupsPhaseofJunction

def ECIGetSignalGroupPhaseofJunction(idJunction, aidphase, indexSG, timeSta):
    return _AAPI.ECIGetSignalGroupPhaseofJunction(idJunction, aidphase, indexSG, timeSta)
ECIGetSignalGroupPhaseofJunction = _AAPI.ECIGetSignalGroupPhaseofJunction

def ECIGetControlType(idJunction):
    return _AAPI.ECIGetControlType(idJunction)
ECIGetControlType = _AAPI.ECIGetControlType

def ECIGetYellowTime(idJunction):
    return _AAPI.ECIGetYellowTime(idJunction)
ECIGetYellowTime = _AAPI.ECIGetYellowTime

def ECIGetOffset(idJunction):
    return _AAPI.ECIGetOffset(idJunction)
ECIGetOffset = _AAPI.ECIGetOffset

def ECIDisableEvents(idJunction):
    return _AAPI.ECIDisableEvents(idJunction)
ECIDisableEvents = _AAPI.ECIDisableEvents

def ECIEnableEvents(idJunction):
    return _AAPI.ECIEnableEvents(idJunction)
ECIEnableEvents = _AAPI.ECIEnableEvents

def ECIEnableEventsActivatingPhase(idJunction, idPhaseToActivateNow, expiredTime, currentTime):
    return _AAPI.ECIEnableEventsActivatingPhase(idJunction, idPhaseToActivateNow, expiredTime, currentTime)
ECIEnableEventsActivatingPhase = _AAPI.ECIEnableEventsActivatingPhase

def ECIChangeDirectPhase(idJunction, idPhase, timeSta, Time, Ciclo, expiredTime=0.0):
    return _AAPI.ECIChangeDirectPhase(idJunction, idPhase, timeSta, Time, Ciclo, expiredTime)
ECIChangeDirectPhase = _AAPI.ECIChangeDirectPhase

def ECIChangeDirectPhaseWithInterphaseTransition(idJunction, idPhase, timeSta, Time, Ciclo):
    return _AAPI.ECIChangeDirectPhaseWithInterphaseTransition(idJunction, idPhase, timeSta, Time, Ciclo)
ECIChangeDirectPhaseWithInterphaseTransition = _AAPI.ECIChangeDirectPhaseWithInterphaseTransition

def ECIChangeTimingPhase(idJunction, idPhase, newTime, timeSta):
    return _AAPI.ECIChangeTimingPhase(idJunction, idPhase, newTime, timeSta)
ECIChangeTimingPhase = _AAPI.ECIChangeTimingPhase

def ECIChangeSignalGroupState(idJunction, idSignalGroup, aState, timeSta, Time, Ciclo):
    return _AAPI.ECIChangeSignalGroupState(idJunction, idSignalGroup, aState, timeSta, Time, Ciclo)
ECIChangeSignalGroupState = _AAPI.ECIChangeSignalGroupState

def ECIChangeSignalGroupStateToYellow(idJunction, idSignalGroup, aState, timeSta, Time, Ciclo, greenTime):
    return _AAPI.ECIChangeSignalGroupStateToYellow(idJunction, idSignalGroup, aState, timeSta, Time, Ciclo, greenTime)
ECIChangeSignalGroupStateToYellow = _AAPI.ECIChangeSignalGroupStateToYellow

def ECIGetCurrentStateofSignalGroup(idJunction, idSignalGroup):
    return _AAPI.ECIGetCurrentStateofSignalGroup(idJunction, idSignalGroup)
ECIGetCurrentStateofSignalGroup = _AAPI.ECIGetCurrentStateofSignalGroup

def ECIChangeSignalGroupStatebyName(idJunction, nameSignalGroup, aState, timeSta, Time, Ciclo):
    return _AAPI.ECIChangeSignalGroupStatebyName(idJunction, nameSignalGroup, aState, timeSta, Time, Ciclo)
ECIChangeSignalGroupStatebyName = _AAPI.ECIChangeSignalGroupStatebyName

def ECIGetCurrentStateofSignalGroupbyName(idJunction, nameSignalGroup):
    return _AAPI.ECIGetCurrentStateofSignalGroupbyName(idJunction, nameSignalGroup)
ECIGetCurrentStateofSignalGroupbyName = _AAPI.ECIGetCurrentStateofSignalGroupbyName

def ECIGetTypeControlofJunction(elemControl, ajunction):
    return _AAPI.ECIGetTypeControlofJunction(elemControl, ajunction)
ECIGetTypeControlofJunction = _AAPI.ECIGetTypeControlofJunction

def ECIGetNbPhasesofJunction(elemControl, ajunction):
    return _AAPI.ECIGetNbPhasesofJunction(elemControl, ajunction)
ECIGetNbPhasesofJunction = _AAPI.ECIGetNbPhasesofJunction

def ECIGetNbRingsJunction(elemControl, ajunction):
    return _AAPI.ECIGetNbRingsJunction(elemControl, ajunction)
ECIGetNbRingsJunction = _AAPI.ECIGetNbRingsJunction

def ECIGetNbBarriersJunction(elemControl, ajunction):
    return _AAPI.ECIGetNbBarriersJunction(elemControl, ajunction)
ECIGetNbBarriersJunction = _AAPI.ECIGetNbBarriersJunction

def ECIGetDurationsPhaseofJunction(elemControl, ajunction, aidphase, amax, dur, amin):
    return _AAPI.ECIGetDurationsPhaseofJunction(elemControl, ajunction, aidphase, amax, dur, amin)
ECIGetDurationsPhaseofJunction = _AAPI.ECIGetDurationsPhaseofJunction

def ECIGetYellowTimeofJunction(elemControl, ajunction):
    return _AAPI.ECIGetYellowTimeofJunction(elemControl, ajunction)
ECIGetYellowTimeofJunction = _AAPI.ECIGetYellowTimeofJunction

def ECIGetYellowTimePhaseofJunction(elemControl, idJunction, idPhase, timeSta, yellow):
    return _AAPI.ECIGetYellowTimePhaseofJunction(elemControl, idJunction, idPhase, timeSta, yellow)
ECIGetYellowTimePhaseofJunction = _AAPI.ECIGetYellowTimePhaseofJunction

def ECISetYellowTimePhaseofJunction(elemControl, idJunction, idPhase, yellow):
    return _AAPI.ECISetYellowTimePhaseofJunction(elemControl, idJunction, idPhase, yellow)
ECISetYellowTimePhaseofJunction = _AAPI.ECISetYellowTimePhaseofJunction

def ECIIsAnInterPhaseofJunction(elemControl, idJunction, idPhase):
    return _AAPI.ECIIsAnInterPhaseofJunction(elemControl, idJunction, idPhase)
ECIIsAnInterPhaseofJunction = _AAPI.ECIIsAnInterPhaseofJunction

def ECIGetActuatedParamsPassageTime(elemControl, ajunction, aidphase, apassageTime, atimeBeforeReduce, atimeToReduce, aminimumGap):
    return _AAPI.ECIGetActuatedParamsPassageTime(elemControl, ajunction, aidphase, apassageTime, atimeBeforeReduce, atimeToReduce, aminimumGap)
ECIGetActuatedParamsPassageTime = _AAPI.ECIGetActuatedParamsPassageTime

def ECISetActuatedParamsPassageTime(elemControl, ajunction, aidphase, apassageTime, atimeBeforeReduce, atimeToReduce, aminimumGap):
    return _AAPI.ECISetActuatedParamsPassageTime(elemControl, ajunction, aidphase, apassageTime, atimeBeforeReduce, atimeToReduce, aminimumGap)
ECISetActuatedParamsPassageTime = _AAPI.ECISetActuatedParamsPassageTime

def ECIGetActuatedParamsMinimumGreen(elemControl, ajunction, aidphase, aMinDurationMinGreen, aMaxMinGreen, aSecActuation):
    return _AAPI.ECIGetActuatedParamsMinimumGreen(elemControl, ajunction, aidphase, aMinDurationMinGreen, aMaxMinGreen, aSecActuation)
ECIGetActuatedParamsMinimumGreen = _AAPI.ECIGetActuatedParamsMinimumGreen

def ECISetActuatedParamsMinimumGreen(elemControl, ajunction, aidphase, aMinDurationMinGreen, aMaxMinGreen, aSecActuation):
    return _AAPI.ECISetActuatedParamsMinimumGreen(elemControl, ajunction, aidphase, aMinDurationMinGreen, aMaxMinGreen, aSecActuation)
ECISetActuatedParamsMinimumGreen = _AAPI.ECISetActuatedParamsMinimumGreen

def ECIGetActuatedParamsMaxGreen(elemControl, ajunction, aidphase):
    return _AAPI.ECIGetActuatedParamsMaxGreen(elemControl, ajunction, aidphase)
ECIGetActuatedParamsMaxGreen = _AAPI.ECIGetActuatedParamsMaxGreen

def ECISetActuatedParamsMaxGreen(elemControl, ajunction, aidphase, aMaxDuration):
    return _AAPI.ECISetActuatedParamsMaxGreen(elemControl, ajunction, aidphase, aMaxDuration)
ECISetActuatedParamsMaxGreen = _AAPI.ECISetActuatedParamsMaxGreen

def ECIGetActuatedParamsForceOFFPermissivePeriod(elemControl, ajunction, aidphase, forceOFF, permissivePeriodFrom, permissivePeriodTo):
    return _AAPI.ECIGetActuatedParamsForceOFFPermissivePeriod(elemControl, ajunction, aidphase, forceOFF, permissivePeriodFrom, permissivePeriodTo)
ECIGetActuatedParamsForceOFFPermissivePeriod = _AAPI.ECIGetActuatedParamsForceOFFPermissivePeriod

def ECISetActuatedParamsForceOFFPermissivePeriod(elemControl, ajunction, aidphase, forceOFF, permissivePeriodFrom, permissivePeriodTo):
    return _AAPI.ECISetActuatedParamsForceOFFPermissivePeriod(elemControl, ajunction, aidphase, forceOFF, permissivePeriodFrom, permissivePeriodTo)
ECISetActuatedParamsForceOFFPermissivePeriod = _AAPI.ECISetActuatedParamsForceOFFPermissivePeriod

def ECIGetCurrentNbRingsJunction(ajunction):
    return _AAPI.ECIGetCurrentNbRingsJunction(ajunction)
ECIGetCurrentNbRingsJunction = _AAPI.ECIGetCurrentNbRingsJunction

def ECIGetCurrentNbBarriersJunction(ajunction):
    return _AAPI.ECIGetCurrentNbBarriersJunction(ajunction)
ECIGetCurrentNbBarriersJunction = _AAPI.ECIGetCurrentNbBarriersJunction
class structA2KMetering(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, structA2KMetering, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, structA2KMetering, name)
    __repr__ = _swig_repr
    __swig_setmethods__["report"] = _AAPI.structA2KMetering_report_set
    __swig_getmethods__["report"] = _AAPI.structA2KMetering_report_get
    if _newclass:
        report = _swig_property(_AAPI.structA2KMetering_report_get, _AAPI.structA2KMetering_report_set)
    __swig_setmethods__["Id"] = _AAPI.structA2KMetering_Id_set
    __swig_getmethods__["Id"] = _AAPI.structA2KMetering_Id_get
    if _newclass:
        Id = _swig_property(_AAPI.structA2KMetering_Id_get, _AAPI.structA2KMetering_Id_set)
    __swig_setmethods__["IdSection"] = _AAPI.structA2KMetering_IdSection_set
    __swig_getmethods__["IdSection"] = _AAPI.structA2KMetering_IdSection_get
    if _newclass:
        IdSection = _swig_property(_AAPI.structA2KMetering_IdSection_get, _AAPI.structA2KMetering_IdSection_set)
    __swig_setmethods__["IdFirstLane"] = _AAPI.structA2KMetering_IdFirstLane_set
    __swig_getmethods__["IdFirstLane"] = _AAPI.structA2KMetering_IdFirstLane_get
    if _newclass:
        IdFirstLane = _swig_property(_AAPI.structA2KMetering_IdFirstLane_get, _AAPI.structA2KMetering_IdFirstLane_set)
    __swig_setmethods__["IdLastLane"] = _AAPI.structA2KMetering_IdLastLane_set
    __swig_getmethods__["IdLastLane"] = _AAPI.structA2KMetering_IdLastLane_get
    if _newclass:
        IdLastLane = _swig_property(_AAPI.structA2KMetering_IdLastLane_get, _AAPI.structA2KMetering_IdLastLane_set)
    __swig_setmethods__["Type"] = _AAPI.structA2KMetering_Type_set
    __swig_getmethods__["Type"] = _AAPI.structA2KMetering_Type_get
    if _newclass:
        Type = _swig_property(_AAPI.structA2KMetering_Type_get, _AAPI.structA2KMetering_Type_set)
    __swig_setmethods__["Distance"] = _AAPI.structA2KMetering_Distance_set
    __swig_getmethods__["Distance"] = _AAPI.structA2KMetering_Distance_get
    if _newclass:
        Distance = _swig_property(_AAPI.structA2KMetering_Distance_get, _AAPI.structA2KMetering_Distance_set)
    __swig_setmethods__["Name"] = _AAPI.structA2KMetering_Name_set
    __swig_getmethods__["Name"] = _AAPI.structA2KMetering_Name_get
    if _newclass:
        Name = _swig_property(_AAPI.structA2KMetering_Name_get, _AAPI.structA2KMetering_Name_set)
    __swig_setmethods__["Platoon"] = _AAPI.structA2KMetering_Platoon_set
    __swig_getmethods__["Platoon"] = _AAPI.structA2KMetering_Platoon_get
    if _newclass:
        Platoon = _swig_property(_AAPI.structA2KMetering_Platoon_get, _AAPI.structA2KMetering_Platoon_set)

    def __init__(self):
        this = _AAPI.new_structA2KMetering()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _AAPI.delete_structA2KMetering
    __del__ = lambda self: None
structA2KMetering_swigregister = _AAPI.structA2KMetering_swigregister
structA2KMetering_swigregister(structA2KMetering)


def ECIGetMeteringProperties(element):
    return _AAPI.ECIGetMeteringProperties(element)
ECIGetMeteringProperties = _AAPI.ECIGetMeteringProperties

def ECIGetMeteringPropertiesById(idMetering):
    return _AAPI.ECIGetMeteringPropertiesById(idMetering)
ECIGetMeteringPropertiesById = _AAPI.ECIGetMeteringPropertiesById

def ECIGetNumberMeterings():
    return _AAPI.ECIGetNumberMeterings()
ECIGetNumberMeterings = _AAPI.ECIGetNumberMeterings

def ECIGetMeteringIdSection(elem):
    return _AAPI.ECIGetMeteringIdSection(elem)
ECIGetMeteringIdSection = _AAPI.ECIGetMeteringIdSection

def ECIGetMeteringName(idsection):
    return _AAPI.ECIGetMeteringName(idsection)
ECIGetMeteringName = _AAPI.ECIGetMeteringName

def ECIGetMeteringId(idsection):
    return _AAPI.ECIGetMeteringId(idsection)
ECIGetMeteringId = _AAPI.ECIGetMeteringId

def ECIGetMeteringIdByPos(idsection, metPos):
    return _AAPI.ECIGetMeteringIdByPos(idsection, metPos)
ECIGetMeteringIdByPos = _AAPI.ECIGetMeteringIdByPos

def ECIGetTypeMetering(idsection):
    return _AAPI.ECIGetTypeMetering(idsection)
ECIGetTypeMetering = _AAPI.ECIGetTypeMetering

def ECIGetParametersGreenMetering(idsection, timeSta, amax, greenTime, amin, cicleTime, offset, yellowTime):
    return _AAPI.ECIGetParametersGreenMetering(idsection, timeSta, amax, greenTime, amin, cicleTime, offset, yellowTime)
ECIGetParametersGreenMetering = _AAPI.ECIGetParametersGreenMetering

def ECIChangeParametersGreenMetering(idsection, timeSta, amax, ngreenTime, amin, ncicleTime, offset, YellowTime, currentTime, currentTimeTrans, cycle):
    return _AAPI.ECIChangeParametersGreenMetering(idsection, timeSta, amax, ngreenTime, amin, ncicleTime, offset, YellowTime, currentTime, currentTimeTrans, cycle)
ECIChangeParametersGreenMetering = _AAPI.ECIChangeParametersGreenMetering

def ECIGetParametersFlowMetering(idsection, timeSta, amax, flow, amin):
    return _AAPI.ECIGetParametersFlowMetering(idsection, timeSta, amax, flow, amin)
ECIGetParametersFlowMetering = _AAPI.ECIGetParametersFlowMetering

def ECIChangeParametersFlowMetering(idsection, timeSta, amax, flow, amin, currentTime, cycle):
    return _AAPI.ECIChangeParametersFlowMetering(idsection, timeSta, amax, flow, amin, currentTime, cycle)
ECIChangeParametersFlowMetering = _AAPI.ECIChangeParametersFlowMetering

def ECIGetParametersDelayMetering(idsection, timeSta, avg, dev):
    return _AAPI.ECIGetParametersDelayMetering(idsection, timeSta, avg, dev)
ECIGetParametersDelayMetering = _AAPI.ECIGetParametersDelayMetering

def ECIChangeParametersDelayMetering(idsection, timeSta, newavg, newdev):
    return _AAPI.ECIChangeParametersDelayMetering(idsection, timeSta, newavg, newdev)
ECIChangeParametersDelayMetering = _AAPI.ECIChangeParametersDelayMetering

def ECIDisableEventsMetering(idsection):
    return _AAPI.ECIDisableEventsMetering(idsection)
ECIDisableEventsMetering = _AAPI.ECIDisableEventsMetering

def ECIEnableEventsMetering(idsection):
    return _AAPI.ECIEnableEventsMetering(idsection)
ECIEnableEventsMetering = _AAPI.ECIEnableEventsMetering

def ECIChangeStateMetering(idsection, aState, Time, Ciclo, identity=0):
    return _AAPI.ECIChangeStateMetering(idsection, aState, Time, Ciclo, identity)
ECIChangeStateMetering = _AAPI.ECIChangeStateMetering

def ECIGetCurrentStateofMetering(idarc, identity):
    return _AAPI.ECIGetCurrentStateofMetering(idarc, identity)
ECIGetCurrentStateofMetering = _AAPI.ECIGetCurrentStateofMetering

def ECIGetMeteringIdByPosition(elem):
    return _AAPI.ECIGetMeteringIdByPosition(elem)
ECIGetMeteringIdByPosition = _AAPI.ECIGetMeteringIdByPosition

def ECIGetMeteringNameById(idmetering):
    return _AAPI.ECIGetMeteringNameById(idmetering)
ECIGetMeteringNameById = _AAPI.ECIGetMeteringNameById

def ECIGetTypeMeteringById(idmetering):
    return _AAPI.ECIGetTypeMeteringById(idmetering)
ECIGetTypeMeteringById = _AAPI.ECIGetTypeMeteringById

def ECIGetParametersGreenMeteringById(idmetering, timeSta, amax, greenTime, amin, cicleTime, offset, yellowTime):
    return _AAPI.ECIGetParametersGreenMeteringById(idmetering, timeSta, amax, greenTime, amin, cicleTime, offset, yellowTime)
ECIGetParametersGreenMeteringById = _AAPI.ECIGetParametersGreenMeteringById

def ECIChangeParametersGreenMeteringById(idmetering, timeSta, amax, ngreenTime, amin, ncicleTime, offset, YellowTime, currentTime, currentTimeTrans, cycle):
    return _AAPI.ECIChangeParametersGreenMeteringById(idmetering, timeSta, amax, ngreenTime, amin, ncicleTime, offset, YellowTime, currentTime, currentTimeTrans, cycle)
ECIChangeParametersGreenMeteringById = _AAPI.ECIChangeParametersGreenMeteringById

def ECIGetParametersGreenMeteringByLaneById(idmetering, timeSta, amax, greenTime, amin, cicleTime, offset, yellowTime, laneOffset):
    return _AAPI.ECIGetParametersGreenMeteringByLaneById(idmetering, timeSta, amax, greenTime, amin, cicleTime, offset, yellowTime, laneOffset)
ECIGetParametersGreenMeteringByLaneById = _AAPI.ECIGetParametersGreenMeteringByLaneById

def ECIChangeParametersGreenMeteringByLaneById(idmetering, timeSta, amax, ngreenTime, amin, ncicleTime, offset, YellowTime, laneOffset, currentTime, currentTimeTrans, cycle):
    return _AAPI.ECIChangeParametersGreenMeteringByLaneById(idmetering, timeSta, amax, ngreenTime, amin, ncicleTime, offset, YellowTime, laneOffset, currentTime, currentTimeTrans, cycle)
ECIChangeParametersGreenMeteringByLaneById = _AAPI.ECIChangeParametersGreenMeteringByLaneById

def ECIGetParametersFlowMeteringById(idmetering, timeSta, amax, flow, amin):
    return _AAPI.ECIGetParametersFlowMeteringById(idmetering, timeSta, amax, flow, amin)
ECIGetParametersFlowMeteringById = _AAPI.ECIGetParametersFlowMeteringById

def ECIChangeParametersFlowMeteringById(idmetering, timeSta, amax, flow, amin, currentTime, cycle):
    return _AAPI.ECIChangeParametersFlowMeteringById(idmetering, timeSta, amax, flow, amin, currentTime, cycle)
ECIChangeParametersFlowMeteringById = _AAPI.ECIChangeParametersFlowMeteringById

def ECIChangeParametersFlowMeteringResetById(idmetering, timeSta, amax, flow, amin, currentTime, cycle, resetToGreen):
    return _AAPI.ECIChangeParametersFlowMeteringResetById(idmetering, timeSta, amax, flow, amin, currentTime, cycle, resetToGreen)
ECIChangeParametersFlowMeteringResetById = _AAPI.ECIChangeParametersFlowMeteringResetById

def ECIChangeCurrentParametersFlowMeteringById(idmetering, amax, flow, amin, currentTime, cycle):
    return _AAPI.ECIChangeCurrentParametersFlowMeteringById(idmetering, amax, flow, amin, currentTime, cycle)
ECIChangeCurrentParametersFlowMeteringById = _AAPI.ECIChangeCurrentParametersFlowMeteringById

def ECIChangeCurrentParametersFlowMeteringResetById(idmetering, amax, flow, amin, currentTime, cycle, resetToGreen):
    return _AAPI.ECIChangeCurrentParametersFlowMeteringResetById(idmetering, amax, flow, amin, currentTime, cycle, resetToGreen)
ECIChangeCurrentParametersFlowMeteringResetById = _AAPI.ECIChangeCurrentParametersFlowMeteringResetById

def ECIGetParametersFlowAlineaMeteringById(idmetering, timeSta, amax, flow, amin, kr, ostar, intervalUpdate):
    return _AAPI.ECIGetParametersFlowAlineaMeteringById(idmetering, timeSta, amax, flow, amin, kr, ostar, intervalUpdate)
ECIGetParametersFlowAlineaMeteringById = _AAPI.ECIGetParametersFlowAlineaMeteringById

def ECIChangeParametersFlowAlineaMeteringResetById(idmetering, timeSta, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle, resetToGreen):
    return _AAPI.ECIChangeParametersFlowAlineaMeteringResetById(idmetering, timeSta, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle, resetToGreen)
ECIChangeParametersFlowAlineaMeteringResetById = _AAPI.ECIChangeParametersFlowAlineaMeteringResetById

def ECIChangeCurrentParametersFlowAlineaMeteringById(idmetering, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle):
    return _AAPI.ECIChangeCurrentParametersFlowAlineaMeteringById(idmetering, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle)
ECIChangeCurrentParametersFlowAlineaMeteringById = _AAPI.ECIChangeCurrentParametersFlowAlineaMeteringById

def ECIChangeCurrentParametersFlowAlineaMeteringResetById(idmetering, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle, resetToGreen):
    return _AAPI.ECIChangeCurrentParametersFlowAlineaMeteringResetById(idmetering, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle, resetToGreen)
ECIChangeCurrentParametersFlowAlineaMeteringResetById = _AAPI.ECIChangeCurrentParametersFlowAlineaMeteringResetById

def ECIChangeParametersFlowAlineaMeteringById(idmetering, timeSta, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle):
    return _AAPI.ECIChangeParametersFlowAlineaMeteringById(idmetering, timeSta, amax, flow, amin, kr, ostar, intervalUpdate, currentTime, cycle)
ECIChangeParametersFlowAlineaMeteringById = _AAPI.ECIChangeParametersFlowAlineaMeteringById

def ECIGetParametersDelayMeteringById(idmetering, timeSta, avg, dev):
    return _AAPI.ECIGetParametersDelayMeteringById(idmetering, timeSta, avg, dev)
ECIGetParametersDelayMeteringById = _AAPI.ECIGetParametersDelayMeteringById

def ECIChangeParametersDelayMeteringById(idmetering, timeSta, newavg, newdev):
    return _AAPI.ECIChangeParametersDelayMeteringById(idmetering, timeSta, newavg, newdev)
ECIChangeParametersDelayMeteringById = _AAPI.ECIChangeParametersDelayMeteringById

def ECIDisableEventsMeteringById(idmetering):
    return _AAPI.ECIDisableEventsMeteringById(idmetering)
ECIDisableEventsMeteringById = _AAPI.ECIDisableEventsMeteringById

def ECIEnableEventsMeteringById(idmetering):
    return _AAPI.ECIEnableEventsMeteringById(idmetering)
ECIEnableEventsMeteringById = _AAPI.ECIEnableEventsMeteringById

def ECIChangeStateMeteringById(idmetering, aState, Time, Ciclo, identity=0):
    return _AAPI.ECIChangeStateMeteringById(idmetering, aState, Time, Ciclo, identity)
ECIChangeStateMeteringById = _AAPI.ECIChangeStateMeteringById

def ECIGetCurrentStateofMeteringById(idmetering, idlane):
    return _AAPI.ECIGetCurrentStateofMeteringById(idmetering, idlane)
ECIGetCurrentStateofMeteringById = _AAPI.ECIGetCurrentStateofMeteringById

def ECIGetNumberofControls(aidObj):
    return _AAPI.ECIGetNumberofControls(aidObj)
ECIGetNumberofControls = _AAPI.ECIGetNumberofControls

def ECIGetNameofControl(aidObj, elemControl):
    return _AAPI.ECIGetNameofControl(aidObj, elemControl)
ECIGetNameofControl = _AAPI.ECIGetNameofControl

def ECIGetIniTimeofControl(aidObj, elemControl):
    return _AAPI.ECIGetIniTimeofControl(aidObj, elemControl)
ECIGetIniTimeofControl = _AAPI.ECIGetIniTimeofControl

def ECIGetOffsetofControl(aidObj, elemControl):
    return _AAPI.ECIGetOffsetofControl(aidObj, elemControl)
ECIGetOffsetofControl = _AAPI.ECIGetOffsetofControl

def ECIGetNameCurrentControl(aidObj):
    return _AAPI.ECIGetNameCurrentControl(aidObj)
ECIGetNameCurrentControl = _AAPI.ECIGetNameCurrentControl

def ECIGetNumberCurrentControl(aidObj):
    return _AAPI.ECIGetNumberCurrentControl(aidObj)
ECIGetNumberCurrentControl = _AAPI.ECIGetNumberCurrentControl

def ECIRemoveControl(aidObject, elemControl):
    return _AAPI.ECIRemoveControl(aidObject, elemControl)
ECIRemoveControl = _AAPI.ECIRemoveControl

def ECIGetNbActiveControls():
    return _AAPI.ECIGetNbActiveControls()
ECIGetNbActiveControls = _AAPI.ECIGetNbActiveControls

def ECIGetActiveControls(activeControls):
    return _AAPI.ECIGetActiveControls(activeControls)
ECIGetActiveControls = _AAPI.ECIGetActiveControls

def ECIGetNumberSem(aidObject):
    return _AAPI.ECIGetNumberSem(aidObject)
ECIGetNumberSem = _AAPI.ECIGetNumberSem

def ECIGetPositionSem(aidObject, anumsem):
    return _AAPI.ECIGetPositionSem(aidObject, anumsem)
ECIGetPositionSem = _AAPI.ECIGetPositionSem

def ECIGetStateSem(aidObject, anumsem):
    return _AAPI.ECIGetStateSem(aidObject, anumsem)
ECIGetStateSem = _AAPI.ECIGetStateSem

def ECIChangeParametersDelayMeteringVehType(idsection, timeSta, newavg, newdev, vehTypePos):
    return _AAPI.ECIChangeParametersDelayMeteringVehType(idsection, timeSta, newavg, newdev, vehTypePos)
ECIChangeParametersDelayMeteringVehType = _AAPI.ECIChangeParametersDelayMeteringVehType

def ECIChangeParametersDelayMeteringVehTypeById(idmetering, timeSta, newavg, newdev, vehTypePos):
    return _AAPI.ECIChangeParametersDelayMeteringVehTypeById(idmetering, timeSta, newavg, newdev, vehTypePos)
ECIChangeParametersDelayMeteringVehTypeById = _AAPI.ECIChangeParametersDelayMeteringVehTypeById
INTEGER_TYPE = _AAPI.INTEGER_TYPE
DOUBLE_TYPE = _AAPI.DOUBLE_TYPE
STRING_TYPE = _AAPI.STRING_TYPE
EXTERNAL_TEMPORAL = _AAPI.EXTERNAL_TEMPORAL
INTERNAL = _AAPI.INTERNAL
EXTERNAL = _AAPI.EXTERNAL

def ANGConnGetReplicationId():
    return _AAPI.ANGConnGetReplicationId()
ANGConnGetReplicationId = _AAPI.ANGConnGetReplicationId

def ANGConnGetExperimentId():
    return _AAPI.ANGConnGetExperimentId()
ANGConnGetExperimentId = _AAPI.ANGConnGetExperimentId

def ANGConnGetScenarioId():
    return _AAPI.ANGConnGetScenarioId()
ANGConnGetScenarioId = _AAPI.ANGConnGetScenarioId

def ANGConnGetObjectId(name, deleteUShortName):
    return _AAPI.ANGConnGetObjectId(name, deleteUShortName)
ANGConnGetObjectId = _AAPI.ANGConnGetObjectId

def ANGConnGetObjectNameA(idObject):
    return _AAPI.ANGConnGetObjectNameA(idObject)
ANGConnGetObjectNameA = _AAPI.ANGConnGetObjectNameA

def ANGConnHideObject(idObject, hide):
    return _AAPI.ANGConnHideObject(idObject, hide)
ANGConnHideObject = _AAPI.ANGConnHideObject

def ANGConnIsObjectHidden(idObject):
    return _AAPI.ANGConnIsObjectHidden(idObject)
ANGConnIsObjectHidden = _AAPI.ANGConnIsObjectHidden

def ANGConnGetScenarioTime():
    return _AAPI.ANGConnGetScenarioTime()
ANGConnGetScenarioTime = _AAPI.ANGConnGetScenarioTime

def ANGConnGetAttribute(internalAttrName):
    return _AAPI.ANGConnGetAttribute(internalAttrName)
ANGConnGetAttribute = _AAPI.ANGConnGetAttribute

def ANGConnCreateAttribute(typeName, internalAttrName, externalAttrName, attrType, columnType=2):
    return _AAPI.ANGConnCreateAttribute(typeName, internalAttrName, externalAttrName, attrType, columnType)
ANGConnCreateAttribute = _AAPI.ANGConnCreateAttribute

def ANGConnSetAttributeValueStringA(attr, objectId, value):
    return _AAPI.ANGConnSetAttributeValueStringA(attr, objectId, value)
ANGConnSetAttributeValueStringA = _AAPI.ANGConnSetAttributeValueStringA

def ANGConnGetAttributeValueStringA(attr, objectId):
    return _AAPI.ANGConnGetAttributeValueStringA(attr, objectId)
ANGConnGetAttributeValueStringA = _AAPI.ANGConnGetAttributeValueStringA

def ANGConnSetAttributeValueBool(attr, objectId, value):
    return _AAPI.ANGConnSetAttributeValueBool(attr, objectId, value)
ANGConnSetAttributeValueBool = _AAPI.ANGConnSetAttributeValueBool

def ANGConnGetAttributeValueBool(attr, objectId):
    return _AAPI.ANGConnGetAttributeValueBool(attr, objectId)
ANGConnGetAttributeValueBool = _AAPI.ANGConnGetAttributeValueBool

def ANGConnSetAttributeValueInt(attr, objectId, value):
    return _AAPI.ANGConnSetAttributeValueInt(attr, objectId, value)
ANGConnSetAttributeValueInt = _AAPI.ANGConnSetAttributeValueInt

def ANGConnGetAttributeValueInt(attr, objectId):
    return _AAPI.ANGConnGetAttributeValueInt(attr, objectId)
ANGConnGetAttributeValueInt = _AAPI.ANGConnGetAttributeValueInt

def ANGConnSetAttributeValueDouble(attr, objectId, value):
    return _AAPI.ANGConnSetAttributeValueDouble(attr, objectId, value)
ANGConnSetAttributeValueDouble = _AAPI.ANGConnSetAttributeValueDouble

def ANGConnGetAttributeValueDouble(attr, objectId):
    return _AAPI.ANGConnGetAttributeValueDouble(attr, objectId)
ANGConnGetAttributeValueDouble = _AAPI.ANGConnGetAttributeValueDouble

def ANGConnActivatePolicy(objectId):
    return _AAPI.ANGConnActivatePolicy(objectId)
ANGConnActivatePolicy = _AAPI.ANGConnActivatePolicy

def ANGConnDeactivatePolicy(objectId):
    return _AAPI.ANGConnDeactivatePolicy(objectId)
ANGConnDeactivatePolicy = _AAPI.ANGConnDeactivatePolicy

def ANGConnIsPolicyActive(objectId):
    return _AAPI.ANGConnIsPolicyActive(objectId)
ANGConnIsPolicyActive = _AAPI.ANGConnIsPolicyActive

def ANGConnGetTimeSeriesSize(attr, objectId):
    return _AAPI.ANGConnGetTimeSeriesSize(attr, objectId)
ANGConnGetTimeSeriesSize = _AAPI.ANGConnGetTimeSeriesSize

def ANGConnGetTimeSeriesValue(attr, objectId, pos):
    return _AAPI.ANGConnGetTimeSeriesValue(attr, objectId, pos)
ANGConnGetTimeSeriesValue = _AAPI.ANGConnGetTimeSeriesValue

def ANGConnSetText(objectId, text):
    return _AAPI.ANGConnSetText(objectId, text)
ANGConnSetText = _AAPI.ANGConnSetText

def ANGConnMarkActivatePolicy(objectId, value):
    return _AAPI.ANGConnMarkActivatePolicy(objectId, value)
ANGConnMarkActivatePolicy = _AAPI.ANGConnMarkActivatePolicy

def ANGConnInitPolicies():
    return _AAPI.ANGConnInitPolicies()
ANGConnInitPolicies = _AAPI.ANGConnInitPolicies

def ANGConnVehGetGKSimVehicleId(aidVeh):
    return _AAPI.ANGConnVehGetGKSimVehicleId(aidVeh)
ANGConnVehGetGKSimVehicleId = _AAPI.ANGConnVehGetGKSimVehicleId

def ANGConnEnableVehiclesInBatch(value):
    return _AAPI.ANGConnEnableVehiclesInBatch(value)
ANGConnEnableVehiclesInBatch = _AAPI.ANGConnEnableVehiclesInBatch

def ANGGetSimulationOrder(when):
    return _AAPI.ANGGetSimulationOrder(when)
ANGGetSimulationOrder = _AAPI.ANGGetSimulationOrder

def ANGSetSimulationOrder(order, when):
    return _AAPI.ANGSetSimulationOrder(order, when)
ANGSetSimulationOrder = _AAPI.ANGSetSimulationOrder

def AKIConvertLatitudeLongitudeToXY(latitude, longitude, x, y):
    return _AAPI.AKIConvertLatitudeLongitudeToXY(latitude, longitude, x, y)
AKIConvertLatitudeLongitudeToXY = _AAPI.AKIConvertLatitudeLongitudeToXY

def AKIConvertXYToLatitudeLongitude(x, y, latitude, longitude):
    return _AAPI.AKIConvertXYToLatitudeLongitude(x, y, latitude, longitude)
AKIConvertXYToLatitudeLongitude = _AAPI.AKIConvertXYToLatitudeLongitude
# This file is compatible with both classic and new-style classes.


